{
  "_from": "webpack",
  "_id": "webpack@5.7.0",
  "_inBundle": false,
  "_integrity": "sha512-U0AshArzQX5X+L2eViVEjrE7nNLUs80BQYcPUyRnaUMT2EyZiIbXAYWL7GLx6qRu0ykxAwXytRoC1+jqWQZExw==",
  "_location": "/webpack",
  "_phantomChildren": {
    "estraverse": "4.3.0"
  },
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "webpack",
    "name": "webpack",
    "escapedName": "webpack",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/webpack/-/webpack-5.7.0.tgz",
  "_shasum": "bb752a5a54aa66dfd24ff5b80256e6c609bbc4cb",
  "_spec": "webpack",
  "_where": "/Users/jarv/src/cmdchallenge",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bin": {
    "webpack": "bin/webpack.js"
  },
  "bugs": {
    "url": "https://github.com/webpack/webpack/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/eslint-scope": "^3.7.0",
    "@types/estree": "^0.0.45",
    "@webassemblyjs/ast": "1.9.0",
    "@webassemblyjs/helper-module-context": "1.9.0",
    "@webassemblyjs/wasm-edit": "1.9.0",
    "@webassemblyjs/wasm-parser": "1.9.0",
    "acorn": "^8.0.4",
    "browserslist": "^4.14.5",
    "chrome-trace-event": "^1.0.2",
    "enhanced-resolve": "^5.3.1",
    "eslint-scope": "^5.1.1",
    "events": "^3.2.0",
    "glob-to-regexp": "^0.4.1",
    "graceful-fs": "^4.2.4",
    "json-parse-better-errors": "^1.0.2",
    "loader-runner": "^4.1.0",
    "mime-types": "^2.1.27",
    "neo-async": "^2.6.2",
    "pkg-dir": "^4.2.0",
    "schema-utils": "^3.0.0",
    "tapable": "^2.0.0",
    "terser-webpack-plugin": "^5.0.3",
    "watchpack": "^2.0.0",
    "webpack-sources": "^2.1.1"
  },
  "deprecated": false,
  "description": "Packs CommonJs/AMD modules for the browser. Allows to split your codebase into multiple bundles, which can be loaded on demand. Support loaders to preprocess files, i.e. json, jsx, es7, css, less, ... and your custom stuff.",
  "devDependencies": {
    "@babel/core": "^7.11.1",
    "@babel/preset-react": "^7.10.4",
    "@types/jest": "^25.2.3",
    "@types/node": "^13.13.15",
    "babel-loader": "^8.1.0",
    "benchmark": "^2.1.4",
    "bundle-loader": "^0.5.6",
    "coffee-loader": "^1.0.0",
    "coffeescript": "^2.5.1",
    "core-js": "^3.6.5",
    "coveralls": "^3.1.0",
    "cspell": "^4.0.63",
    "css-loader": "^3.6.0",
    "date-fns": "^2.15.0",
    "es5-ext": "^0.10.53",
    "es6-promise-polyfill": "^1.2.0",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-jest": "^23.20.0",
    "eslint-plugin-jsdoc": "^22.0.0",
    "eslint-plugin-node": "^11.0.0",
    "eslint-plugin-prettier": "^3.1.4",
    "file-loader": "^6.0.0",
    "fork-ts-checker-webpack-plugin": "^1.5.0",
    "husky": "^4.2.5",
    "is-ci": "^2.0.0",
    "istanbul": "^0.4.5",
    "jest": "^25.1.0",
    "jest-diff": "^25.1.0",
    "jest-junit": "^11.1.0",
    "json-loader": "^0.5.7",
    "json5": "^2.1.3",
    "less": "^3.12.2",
    "less-loader": "^6.2.0",
    "lint-staged": "^10.2.11",
    "loader-utils": "^2.0.0",
    "lodash": "^4.17.19",
    "lodash-es": "^4.17.15",
    "memfs": "^3.2.0",
    "mini-css-extract-plugin": "^1.0.0",
    "mini-svg-data-uri": "^1.2.3",
    "open-cli": "^6.0.1",
    "prettier": "^2.0.5",
    "pretty-format": "^26.3.0",
    "pug": "^3.0.0",
    "pug-loader": "^2.4.0",
    "raw-loader": "^4.0.1",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "rimraf": "^3.0.2",
    "script-loader": "^0.7.2",
    "simple-git": "^2.17.0",
    "strip-ansi": "^6.0.0",
    "style-loader": "^1.1.4",
    "terser": "^4.8.0",
    "toml": "^3.0.0",
    "tooling": "github:webpack/tooling#v1.8.1",
    "ts-loader": "^8.0.2",
    "typescript": "^3.9.7",
    "url-loader": "^4.1.0",
    "wast-loader": "^1.9.0",
    "webassembly-feature": "1.3.0",
    "xxhashjs": "^0.2.2",
    "yamljs": "^0.3.0",
    "yarn-deduplicate": "^2.1.1"
  },
  "engines": {
    "node": ">=10.13.0"
  },
  "files": [
    "lib/",
    "bin/",
    "hot/",
    "schemas/",
    "SECURITY.md",
    "types.d.ts"
  ],
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/webpack"
  },
  "homepage": "https://github.com/webpack/webpack",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "jest": {
    "forceExit": true,
    "setupFilesAfterEnv": [
      "<rootDir>/test/setupTestFramework.js"
    ],
    "testMatch": [
      "<rootDir>/test/*.test.js",
      "<rootDir>/test/*.unittest.js"
    ],
    "watchPathIgnorePatterns": [
      "<rootDir>/.git",
      "<rootDir>/node_modules",
      "<rootDir>/test/js",
      "<rootDir>/test/browsertest/js",
      "<rootDir>/test/fixtures/temp-cache-fixture",
      "<rootDir>/test/fixtures/temp-",
      "<rootDir>/benchmark",
      "<rootDir>/examples/*/dist",
      "<rootDir>/coverage",
      "<rootDir>/.eslintcache"
    ],
    "modulePathIgnorePatterns": [
      "<rootDir>/.git",
      "<rootDir>/node_modules/webpack/node_modules",
      "<rootDir>/test/js",
      "<rootDir>/test/browsertest/js",
      "<rootDir>/test/fixtures/temp-cache-fixture",
      "<rootDir>/test/fixtures/temp-",
      "<rootDir>/benchmark",
      "<rootDir>/examples/*/dist",
      "<rootDir>/coverage",
      "<rootDir>/.eslintcache"
    ],
    "transformIgnorePatterns": [
      "<rootDir>"
    ],
    "coverageDirectory": "<rootDir>/coverage",
    "coveragePathIgnorePatterns": [
      "\\.runtime\\.js$",
      "<rootDir>/test",
      "<rootDir>/schemas",
      "<rootDir>/node_modules"
    ],
    "testEnvironment": "node",
    "coverageReporters": [
      "json"
    ]
  },
  "license": "MIT",
  "lint-staged": {
    "*.js|{lib,setup,bin,hot,tooling,schemas}/**/*.js|test/*.js|{test,examples}/**/webpack.config.js}": [
      "eslint --cache"
    ],
    "*.{ts,json,yml,yaml,md}|examples/*.md": [
      "prettier --check"
    ],
    "*.md|{.github,benchmark,bin,examples,hot,lib,schemas,setup,tooling}/**/*.{md,yml,yaml,js,json}": [
      "cspell"
    ]
  },
  "main": "lib/index.js",
  "name": "webpack",
  "peerDependenciesMeta": {
    "webpack-cli": {
      "optional": true
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack/webpack.git"
  },
  "scripts": {
    "appveyor:benchmark": "yarn benchmark --ci",
    "appveyor:integration": "yarn cover:integration --ci %JEST%",
    "appveyor:unit": "yarn cover:unit --ci %JEST%",
    "benchmark": "node --max-old-space-size=4096 --trace-deprecation node_modules/jest-cli/bin/jest --testMatch \"<rootDir>/test/*.benchmark.js\" --runInBand",
    "build:examples": "cd examples && node buildAll.js",
    "code-lint": "eslint . --ext '.js' --cache",
    "cover": "yarn cover:all && yarn cover:report",
    "cover:all": "node --max-old-space-size=4096 node_modules/jest-cli/bin/jest --coverage",
    "cover:basic": "node --max-old-space-size=4096 node_modules/jest-cli/bin/jest --testMatch \"<rootDir>/te{st/TestCasesNormal,st/StatsTestCases,st/ConfigTestCases}.test.js\" --coverage",
    "cover:integration": "node --max-old-space-size=4096 node_modules/jest-cli/bin/jest --testMatch \"<rootDir>/test/*.test.js\" --coverage",
    "cover:report": "istanbul report",
    "cover:types": "node node_modules/tooling/type-coverage",
    "cover:unit": "node --max-old-space-size=4096 node_modules/jest-cli/bin/jest --testMatch \"<rootDir>/test/*.unittest.js\" --coverage",
    "fix": "yarn code-lint --fix && yarn special-lint-fix && yarn pretty-lint-fix",
    "lint": "yarn code-lint && yarn special-lint && yarn type-lint && yarn typings-lint && yarn yarn-lint && yarn pretty-lint && yarn spellcheck",
    "prelint": "yarn setup",
    "pretest": "yarn lint",
    "pretty-lint": "yarn pretty-lint-base --check",
    "pretty-lint-base": "prettier \"*.{ts,json,yml,yaml,md}\" \"{setup,lib,bin,hot,benchmark,tooling,schemas}/**/*.json\" \"examples/*.md\"",
    "pretty-lint-base-all": "yarn pretty-lint-base \"*.js\" \"{setup,lib,bin,hot,benchmark,tooling,schemas}/**/*.js\" \"test/*.js\" \"test/helpers/*.js\" \"test/{configCases,watchCases,statsCases,hotCases,benchmarkCases}/**/webpack.config.js\" \"examples/**/webpack.config.js\"",
    "pretty-lint-fix": "yarn pretty-lint-base-all --loglevel warn --write",
    "setup": "node ./setup/setup.js",
    "special-lint": "node node_modules/tooling/lockfile-lint && node node_modules/tooling/schemas-lint && node node_modules/tooling/inherit-types && node node_modules/tooling/format-schemas && node tooling/generate-runtime-code.js && node node_modules/tooling/format-file-header && node node_modules/tooling/compile-to-definitions && node node_modules/tooling/generate-types",
    "special-lint-fix": "node node_modules/tooling/inherit-types --write && node node_modules/tooling/format-schemas --write && node tooling/generate-runtime-code.js --write && node node_modules/tooling/format-file-header --write && node node_modules/tooling/compile-to-definitions --write && node node_modules/tooling/generate-types --write",
    "spellcheck": "cspell \"{.github,benchmark,bin,examples,hot,lib,schemas,setup,tooling}/**/*.{md,yml,yaml,js,json}\" \"*.md\"",
    "test": "node --max-old-space-size=4096 --trace-deprecation node_modules/jest-cli/bin/jest",
    "test:basic": "node --max-old-space-size=4096 --trace-deprecation node_modules/jest-cli/bin/jest --testMatch \"<rootDir>/te{st/TestCasesNormal,st/StatsTestCases,st/ConfigTestCases}.test.js\"",
    "test:integration": "node --max-old-space-size=4096 --trace-deprecation node_modules/jest-cli/bin/jest --testMatch \"<rootDir>/test/*.test.js\"",
    "test:unit": "node --max-old-space-size=4096 --trace-deprecation node_modules/jest-cli/bin/jest --testMatch \"<rootDir>/test/*.unittest.js\"",
    "test:update-snapshots": "yarn jest -u",
    "travis:basic": "yarn cover:basic --ci $JEST",
    "travis:benchmark": "yarn benchmark --ci",
    "travis:integration": "yarn cover:integration --ci $JEST",
    "travis:lintunit": "yarn lint && yarn cover:unit --ci $JEST",
    "type-lint": "tsc",
    "type-report": "rimraf coverage && yarn cover:types && yarn cover:report && open-cli coverage/lcov-report/index.html",
    "typings-lint": "tsc -p tsconfig.test.json",
    "yarn-lint": "yarn-deduplicate --fail --list -s highest yarn.lock",
    "yarn-lint-fix": "yarn-deduplicate -s highest yarn.lock"
  },
  "types": "types.d.ts",
  "version": "5.7.0"
}
