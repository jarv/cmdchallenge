"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var Routie = function Routie(a, b) {
  var c = [],
      d = {},
      e = "routie",
      f = a[e],
      g = function g(a, b) {
    this.name = b, this.path = a, this.keys = [], this.fns = [], this.params = {}, this.regex = h(this.path, this.keys, !1, !1);
  };

  g.prototype.addHandler = function (a) {
    this.fns.push(a);
  }, g.prototype.removeHandler = function (a) {
    for (var b = 0, c = this.fns.length; c > b; b++) {
      var d = this.fns[b];
      if (a == d) return void this.fns.splice(b, 1);
    }
  }, g.prototype.run = function (a) {
    for (var b = 0, c = this.fns.length; c > b; b++) {
      this.fns[b].apply(this, a);
    }
  }, g.prototype.match = function (a, b) {
    var c = this.regex.exec(a);
    if (!c) return !1;

    for (var d = 1, e = c.length; e > d; ++d) {
      var f = this.keys[d - 1],
          g = "string" == typeof c[d] ? decodeURIComponent(c[d]) : c[d];
      f && (this.params[f.name] = g), b.push(g);
    }

    return !0;
  }, g.prototype.toURL = function (a) {
    var b = this.path;

    for (var c in a) {
      b = b.replace("/:" + c, "/" + a[c]);
    }

    if (b = b.replace(/\/:.*\?/g, "/").replace(/\?/g, ""), -1 != b.indexOf(":")) throw new Error("missing parameters for url: " + b);
    return b;
  };

  var h = function h(a, b, c, d) {
    return a instanceof RegExp ? a : (a instanceof Array && (a = "(" + a.join("|") + ")"), a = a.concat(d ? "" : "/?").replace(/\/\(/g, "(?:/").replace(/\+/g, "__plus__").replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?/g, function (a, c, d, e, f, g) {
      return b.push({
        name: e,
        optional: !!g
      }), c = c || "", "" + (g ? "" : c) + "(?:" + (g ? c : "") + (d || "") + (f || d && "([^/.]+?)" || "([^/]+?)") + ")" + (g || "");
    }).replace(/([\/.])/g, "\\$1").replace(/__plus__/g, "(.+)").replace(/\*/g, "(.*)"), new RegExp("^" + a + "$", c ? "" : "i"));
  },
      i = function i(a, b) {
    var e = a.split(" "),
        f = 2 == e.length ? e[0] : null;
    a = 2 == e.length ? e[1] : e[0], d[a] || (d[a] = new g(a, f), c.push(d[a])), d[a].addHandler(b);
  },
      j = function j(a, b) {
    if ("function" == typeof b) i(a, b), j.reload();else if ("object" == _typeof(a)) {
      for (var c in a) {
        i(c, a[c]);
      }

      j.reload();
    } else "undefined" == typeof b && j.navigate(a);
  };

  j.lookup = function (a, b) {
    for (var d = 0, e = c.length; e > d; d++) {
      var f = c[d];
      if (f.name == a) return f.toURL(b);
    }
  }, j.remove = function (a, b) {
    var c = d[a];
    c && c.removeHandler(b);
  }, j.removeAll = function () {
    d = {}, c = [];
  }, j.navigate = function (a, b) {
    b = b || {};
    var c = b.silent || !1;
    c && o(), setTimeout(function () {
      window.location.hash = a, c && setTimeout(function () {
        n();
      }, 1);
    }, 1);
  }, j.noConflict = function () {
    return a[e] = f, j;
  };

  var k = function k() {
    return window.location.hash.substring(1);
  },
      l = function l(a, b) {
    var c = [];
    return b.match(a, c) ? (b.run(c), !0) : !1;
  },
      m = j.reload = function () {
    for (var a = k(), b = 0, d = c.length; d > b; b++) {
      var e = c[b];
      if (l(a, e)) return;
    }
  },
      n = function n() {
    a.addEventListener ? a.addEventListener("hashchange", m, !1) : a.attachEvent("onhashchange", m);
  },
      o = function o() {
    a.removeEventListener ? a.removeEventListener("hashchange", m) : a.detachEvent("onhashchange", m);
  };

  return n(), b ? j : void (a[e] = j);
};

"undefined" == typeof module ? Routie(window) : module.exports = Routie(window, !0);
!function (e, t) {
  "use strict";

  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && "object" == _typeof(module.exports) ? module.exports = e.document ? t(e, !0) : function (e) {
    if (!e.document) throw new Error("jQuery requires a window with a document");
    return t(e);
  } : t(e);
}("undefined" != typeof window ? window : void 0, function (C, e) {
  "use strict";

  var t = [],
      r = Object.getPrototypeOf,
      s = t.slice,
      g = t.flat ? function (e) {
    return t.flat.call(e);
  } : function (e) {
    return t.concat.apply([], e);
  },
      u = t.push,
      i = t.indexOf,
      n = {},
      o = n.toString,
      v = n.hasOwnProperty,
      a = v.toString,
      l = a.call(Object),
      y = {},
      m = function m(e) {
    return "function" == typeof e && "number" != typeof e.nodeType;
  },
      x = function x(e) {
    return null != e && e === e.window;
  },
      E = C.document,
      c = {
    type: !0,
    src: !0,
    nonce: !0,
    noModule: !0
  };

  function b(e, t, n) {
    var r,
        i,
        o = (n = n || E).createElement("script");
    if (o.text = e, t) for (r in c) {
      (i = t[r] || t.getAttribute && t.getAttribute(r)) && o.setAttribute(r, i);
    }
    n.head.appendChild(o).parentNode.removeChild(o);
  }

  function w(e) {
    return null == e ? e + "" : "object" == _typeof(e) || "function" == typeof e ? n[o.call(e)] || "object" : _typeof(e);
  }

  var f = "3.5.1",
      S = function S(e, t) {
    return new S.fn.init(e, t);
  };

  function p(e) {
    var t = !!e && "length" in e && e.length,
        n = w(e);
    return !m(e) && !x(e) && ("array" === n || 0 === t || "number" == typeof t && 0 < t && t - 1 in e);
  }

  S.fn = S.prototype = {
    jquery: f,
    constructor: S,
    length: 0,
    toArray: function toArray() {
      return s.call(this);
    },
    get: function get(e) {
      return null == e ? s.call(this) : e < 0 ? this[e + this.length] : this[e];
    },
    pushStack: function pushStack(e) {
      var t = S.merge(this.constructor(), e);
      return t.prevObject = this, t;
    },
    each: function each(e) {
      return S.each(this, e);
    },
    map: function map(n) {
      return this.pushStack(S.map(this, function (e, t) {
        return n.call(e, t, e);
      }));
    },
    slice: function slice() {
      return this.pushStack(s.apply(this, arguments));
    },
    first: function first() {
      return this.eq(0);
    },
    last: function last() {
      return this.eq(-1);
    },
    even: function even() {
      return this.pushStack(S.grep(this, function (e, t) {
        return (t + 1) % 2;
      }));
    },
    odd: function odd() {
      return this.pushStack(S.grep(this, function (e, t) {
        return t % 2;
      }));
    },
    eq: function eq(e) {
      var t = this.length,
          n = +e + (e < 0 ? t : 0);
      return this.pushStack(0 <= n && n < t ? [this[n]] : []);
    },
    end: function end() {
      return this.prevObject || this.constructor();
    },
    push: u,
    sort: t.sort,
    splice: t.splice
  }, S.extend = S.fn.extend = function () {
    var e,
        t,
        n,
        r,
        i,
        o,
        a = arguments[0] || {},
        s = 1,
        u = arguments.length,
        l = !1;

    for ("boolean" == typeof a && (l = a, a = arguments[s] || {}, s++), "object" == _typeof(a) || m(a) || (a = {}), s === u && (a = this, s--); s < u; s++) {
      if (null != (e = arguments[s])) for (t in e) {
        r = e[t], "__proto__" !== t && a !== r && (l && r && (S.isPlainObject(r) || (i = Array.isArray(r))) ? (n = a[t], o = i && !Array.isArray(n) ? [] : i || S.isPlainObject(n) ? n : {}, i = !1, a[t] = S.extend(l, o, r)) : void 0 !== r && (a[t] = r));
      }
    }

    return a;
  }, S.extend({
    expando: "jQuery" + (f + Math.random()).replace(/\D/g, ""),
    isReady: !0,
    error: function error(e) {
      throw new Error(e);
    },
    noop: function noop() {},
    isPlainObject: function isPlainObject(e) {
      var t, n;
      return !(!e || "[object Object]" !== o.call(e)) && (!(t = r(e)) || "function" == typeof (n = v.call(t, "constructor") && t.constructor) && a.call(n) === l);
    },
    isEmptyObject: function isEmptyObject(e) {
      var t;

      for (t in e) {
        return !1;
      }

      return !0;
    },
    globalEval: function globalEval(e, t, n) {
      b(e, {
        nonce: t && t.nonce
      }, n);
    },
    each: function each(e, t) {
      var n,
          r = 0;

      if (p(e)) {
        for (n = e.length; r < n; r++) {
          if (!1 === t.call(e[r], r, e[r])) break;
        }
      } else for (r in e) {
        if (!1 === t.call(e[r], r, e[r])) break;
      }

      return e;
    },
    makeArray: function makeArray(e, t) {
      var n = t || [];
      return null != e && (p(Object(e)) ? S.merge(n, "string" == typeof e ? [e] : e) : u.call(n, e)), n;
    },
    inArray: function inArray(e, t, n) {
      return null == t ? -1 : i.call(t, e, n);
    },
    merge: function merge(e, t) {
      for (var n = +t.length, r = 0, i = e.length; r < n; r++) {
        e[i++] = t[r];
      }

      return e.length = i, e;
    },
    grep: function grep(e, t, n) {
      for (var r = [], i = 0, o = e.length, a = !n; i < o; i++) {
        !t(e[i], i) !== a && r.push(e[i]);
      }

      return r;
    },
    map: function map(e, t, n) {
      var r,
          i,
          o = 0,
          a = [];
      if (p(e)) for (r = e.length; o < r; o++) {
        null != (i = t(e[o], o, n)) && a.push(i);
      } else for (o in e) {
        null != (i = t(e[o], o, n)) && a.push(i);
      }
      return g(a);
    },
    guid: 1,
    support: y
  }), "function" == typeof Symbol && (S.fn[Symbol.iterator] = t[Symbol.iterator]), S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (e, t) {
    n["[object " + t + "]"] = t.toLowerCase();
  });

  var d = function (n) {
    var e,
        d,
        b,
        o,
        i,
        h,
        f,
        g,
        w,
        u,
        l,
        T,
        C,
        a,
        E,
        v,
        s,
        c,
        y,
        S = "sizzle" + 1 * new Date(),
        p = n.document,
        k = 0,
        r = 0,
        m = ue(),
        x = ue(),
        A = ue(),
        N = ue(),
        D = function D(e, t) {
      return e === t && (l = !0), 0;
    },
        j = {}.hasOwnProperty,
        t = [],
        q = t.pop,
        L = t.push,
        H = t.push,
        O = t.slice,
        P = function P(e, t) {
      for (var n = 0, r = e.length; n < r; n++) {
        if (e[n] === t) return n;
      }

      return -1;
    },
        R = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        M = "[\\x20\\t\\r\\n\\f]",
        I = "(?:\\\\[\\da-fA-F]{1,6}" + M + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
        W = "\\[" + M + "*(" + I + ")(?:" + M + "*([*^$|!~]?=)" + M + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + I + "))|)" + M + "*\\]",
        F = ":(" + I + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + W + ")*)|.*)\\)|)",
        B = new RegExp(M + "+", "g"),
        $ = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g"),
        _ = new RegExp("^" + M + "*," + M + "*"),
        z = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"),
        U = new RegExp(M + "|>"),
        X = new RegExp(F),
        V = new RegExp("^" + I + "$"),
        G = {
      ID: new RegExp("^#(" + I + ")"),
      CLASS: new RegExp("^\\.(" + I + ")"),
      TAG: new RegExp("^(" + I + "|[*])"),
      ATTR: new RegExp("^" + W),
      PSEUDO: new RegExp("^" + F),
      CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)", "i"),
      bool: new RegExp("^(?:" + R + ")$", "i"),
      needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)", "i")
    },
        Y = /HTML$/i,
        Q = /^(?:input|select|textarea|button)$/i,
        J = /^h\d$/i,
        K = /^[^{]+\{\s*\[native \w/,
        Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        ee = /[+~]/,
        te = new RegExp("\\\\[\\da-fA-F]{1,6}" + M + "?|\\\\([^\\r\\n\\f])", "g"),
        ne = function ne(e, t) {
      var n = "0x" + e.slice(1) - 65536;
      return t || (n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320));
    },
        re = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
        ie = function ie(e, t) {
      return t ? "\0" === e ? "�" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e;
    },
        oe = function oe() {
      T();
    },
        ae = be(function (e) {
      return !0 === e.disabled && "fieldset" === e.nodeName.toLowerCase();
    }, {
      dir: "parentNode",
      next: "legend"
    });

    try {
      H.apply(t = O.call(p.childNodes), p.childNodes), t[p.childNodes.length].nodeType;
    } catch (e) {
      H = {
        apply: t.length ? function (e, t) {
          L.apply(e, O.call(t));
        } : function (e, t) {
          var n = e.length,
              r = 0;

          while (e[n++] = t[r++]) {
            ;
          }

          e.length = n - 1;
        }
      };
    }

    function se(t, e, n, r) {
      var i,
          o,
          a,
          s,
          u,
          l,
          c,
          f = e && e.ownerDocument,
          p = e ? e.nodeType : 9;
      if (n = n || [], "string" != typeof t || !t || 1 !== p && 9 !== p && 11 !== p) return n;

      if (!r && (T(e), e = e || C, E)) {
        if (11 !== p && (u = Z.exec(t))) if (i = u[1]) {
          if (9 === p) {
            if (!(a = e.getElementById(i))) return n;
            if (a.id === i) return n.push(a), n;
          } else if (f && (a = f.getElementById(i)) && y(e, a) && a.id === i) return n.push(a), n;
        } else {
          if (u[2]) return H.apply(n, e.getElementsByTagName(t)), n;
          if ((i = u[3]) && d.getElementsByClassName && e.getElementsByClassName) return H.apply(n, e.getElementsByClassName(i)), n;
        }

        if (d.qsa && !N[t + " "] && (!v || !v.test(t)) && (1 !== p || "object" !== e.nodeName.toLowerCase())) {
          if (c = t, f = e, 1 === p && (U.test(t) || z.test(t))) {
            (f = ee.test(t) && ye(e.parentNode) || e) === e && d.scope || ((s = e.getAttribute("id")) ? s = s.replace(re, ie) : e.setAttribute("id", s = S)), o = (l = h(t)).length;

            while (o--) {
              l[o] = (s ? "#" + s : ":scope") + " " + xe(l[o]);
            }

            c = l.join(",");
          }

          try {
            return H.apply(n, f.querySelectorAll(c)), n;
          } catch (e) {
            N(t, !0);
          } finally {
            s === S && e.removeAttribute("id");
          }
        }
      }

      return g(t.replace($, "$1"), e, n, r);
    }

    function ue() {
      var r = [];
      return function e(t, n) {
        return r.push(t + " ") > b.cacheLength && delete e[r.shift()], e[t + " "] = n;
      };
    }

    function le(e) {
      return e[S] = !0, e;
    }

    function ce(e) {
      var t = C.createElement("fieldset");

      try {
        return !!e(t);
      } catch (e) {
        return !1;
      } finally {
        t.parentNode && t.parentNode.removeChild(t), t = null;
      }
    }

    function fe(e, t) {
      var n = e.split("|"),
          r = n.length;

      while (r--) {
        b.attrHandle[n[r]] = t;
      }
    }

    function pe(e, t) {
      var n = t && e,
          r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
      if (r) return r;
      if (n) while (n = n.nextSibling) {
        if (n === t) return -1;
      }
      return e ? 1 : -1;
    }

    function de(t) {
      return function (e) {
        return "input" === e.nodeName.toLowerCase() && e.type === t;
      };
    }

    function he(n) {
      return function (e) {
        var t = e.nodeName.toLowerCase();
        return ("input" === t || "button" === t) && e.type === n;
      };
    }

    function ge(t) {
      return function (e) {
        return "form" in e ? e.parentNode && !1 === e.disabled ? "label" in e ? "label" in e.parentNode ? e.parentNode.disabled === t : e.disabled === t : e.isDisabled === t || e.isDisabled !== !t && ae(e) === t : e.disabled === t : "label" in e && e.disabled === t;
      };
    }

    function ve(a) {
      return le(function (o) {
        return o = +o, le(function (e, t) {
          var n,
              r = a([], e.length, o),
              i = r.length;

          while (i--) {
            e[n = r[i]] && (e[n] = !(t[n] = e[n]));
          }
        });
      });
    }

    function ye(e) {
      return e && "undefined" != typeof e.getElementsByTagName && e;
    }

    for (e in d = se.support = {}, i = se.isXML = function (e) {
      var t = e.namespaceURI,
          n = (e.ownerDocument || e).documentElement;
      return !Y.test(t || n && n.nodeName || "HTML");
    }, T = se.setDocument = function (e) {
      var t,
          n,
          r = e ? e.ownerDocument || e : p;
      return r != C && 9 === r.nodeType && r.documentElement && (a = (C = r).documentElement, E = !i(C), p != C && (n = C.defaultView) && n.top !== n && (n.addEventListener ? n.addEventListener("unload", oe, !1) : n.attachEvent && n.attachEvent("onunload", oe)), d.scope = ce(function (e) {
        return a.appendChild(e).appendChild(C.createElement("div")), "undefined" != typeof e.querySelectorAll && !e.querySelectorAll(":scope fieldset div").length;
      }), d.attributes = ce(function (e) {
        return e.className = "i", !e.getAttribute("className");
      }), d.getElementsByTagName = ce(function (e) {
        return e.appendChild(C.createComment("")), !e.getElementsByTagName("*").length;
      }), d.getElementsByClassName = K.test(C.getElementsByClassName), d.getById = ce(function (e) {
        return a.appendChild(e).id = S, !C.getElementsByName || !C.getElementsByName(S).length;
      }), d.getById ? (b.filter.ID = function (e) {
        var t = e.replace(te, ne);
        return function (e) {
          return e.getAttribute("id") === t;
        };
      }, b.find.ID = function (e, t) {
        if ("undefined" != typeof t.getElementById && E) {
          var n = t.getElementById(e);
          return n ? [n] : [];
        }
      }) : (b.filter.ID = function (e) {
        var n = e.replace(te, ne);
        return function (e) {
          var t = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id");
          return t && t.value === n;
        };
      }, b.find.ID = function (e, t) {
        if ("undefined" != typeof t.getElementById && E) {
          var n,
              r,
              i,
              o = t.getElementById(e);

          if (o) {
            if ((n = o.getAttributeNode("id")) && n.value === e) return [o];
            i = t.getElementsByName(e), r = 0;

            while (o = i[r++]) {
              if ((n = o.getAttributeNode("id")) && n.value === e) return [o];
            }
          }

          return [];
        }
      }), b.find.TAG = d.getElementsByTagName ? function (e, t) {
        return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : d.qsa ? t.querySelectorAll(e) : void 0;
      } : function (e, t) {
        var n,
            r = [],
            i = 0,
            o = t.getElementsByTagName(e);

        if ("*" === e) {
          while (n = o[i++]) {
            1 === n.nodeType && r.push(n);
          }

          return r;
        }

        return o;
      }, b.find.CLASS = d.getElementsByClassName && function (e, t) {
        if ("undefined" != typeof t.getElementsByClassName && E) return t.getElementsByClassName(e);
      }, s = [], v = [], (d.qsa = K.test(C.querySelectorAll)) && (ce(function (e) {
        var t;
        a.appendChild(e).innerHTML = "<a id='" + S + "'></a><select id='" + S + "-\r\\' msallowcapture=''><option selected=''></option></select>", e.querySelectorAll("[msallowcapture^='']").length && v.push("[*^$]=" + M + "*(?:''|\"\")"), e.querySelectorAll("[selected]").length || v.push("\\[" + M + "*(?:value|" + R + ")"), e.querySelectorAll("[id~=" + S + "-]").length || v.push("~="), (t = C.createElement("input")).setAttribute("name", ""), e.appendChild(t), e.querySelectorAll("[name='']").length || v.push("\\[" + M + "*name" + M + "*=" + M + "*(?:''|\"\")"), e.querySelectorAll(":checked").length || v.push(":checked"), e.querySelectorAll("a#" + S + "+*").length || v.push(".#.+[+~]"), e.querySelectorAll("\\\f"), v.push("[\\r\\n\\f]");
      }), ce(function (e) {
        e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
        var t = C.createElement("input");
        t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), e.querySelectorAll("[name=d]").length && v.push("name" + M + "*[*^$|!~]?="), 2 !== e.querySelectorAll(":enabled").length && v.push(":enabled", ":disabled"), a.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && v.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), v.push(",.*:");
      })), (d.matchesSelector = K.test(c = a.matches || a.webkitMatchesSelector || a.mozMatchesSelector || a.oMatchesSelector || a.msMatchesSelector)) && ce(function (e) {
        d.disconnectedMatch = c.call(e, "*"), c.call(e, "[s!='']:x"), s.push("!=", F);
      }), v = v.length && new RegExp(v.join("|")), s = s.length && new RegExp(s.join("|")), t = K.test(a.compareDocumentPosition), y = t || K.test(a.contains) ? function (e, t) {
        var n = 9 === e.nodeType ? e.documentElement : e,
            r = t && t.parentNode;
        return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r)));
      } : function (e, t) {
        if (t) while (t = t.parentNode) {
          if (t === e) return !0;
        }
        return !1;
      }, D = t ? function (e, t) {
        if (e === t) return l = !0, 0;
        var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
        return n || (1 & (n = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !d.sortDetached && t.compareDocumentPosition(e) === n ? e == C || e.ownerDocument == p && y(p, e) ? -1 : t == C || t.ownerDocument == p && y(p, t) ? 1 : u ? P(u, e) - P(u, t) : 0 : 4 & n ? -1 : 1);
      } : function (e, t) {
        if (e === t) return l = !0, 0;
        var n,
            r = 0,
            i = e.parentNode,
            o = t.parentNode,
            a = [e],
            s = [t];
        if (!i || !o) return e == C ? -1 : t == C ? 1 : i ? -1 : o ? 1 : u ? P(u, e) - P(u, t) : 0;
        if (i === o) return pe(e, t);
        n = e;

        while (n = n.parentNode) {
          a.unshift(n);
        }

        n = t;

        while (n = n.parentNode) {
          s.unshift(n);
        }

        while (a[r] === s[r]) {
          r++;
        }

        return r ? pe(a[r], s[r]) : a[r] == p ? -1 : s[r] == p ? 1 : 0;
      }), C;
    }, se.matches = function (e, t) {
      return se(e, null, null, t);
    }, se.matchesSelector = function (e, t) {
      if (T(e), d.matchesSelector && E && !N[t + " "] && (!s || !s.test(t)) && (!v || !v.test(t))) try {
        var n = c.call(e, t);
        if (n || d.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n;
      } catch (e) {
        N(t, !0);
      }
      return 0 < se(t, C, null, [e]).length;
    }, se.contains = function (e, t) {
      return (e.ownerDocument || e) != C && T(e), y(e, t);
    }, se.attr = function (e, t) {
      (e.ownerDocument || e) != C && T(e);
      var n = b.attrHandle[t.toLowerCase()],
          r = n && j.call(b.attrHandle, t.toLowerCase()) ? n(e, t, !E) : void 0;
      return void 0 !== r ? r : d.attributes || !E ? e.getAttribute(t) : (r = e.getAttributeNode(t)) && r.specified ? r.value : null;
    }, se.escape = function (e) {
      return (e + "").replace(re, ie);
    }, se.error = function (e) {
      throw new Error("Syntax error, unrecognized expression: " + e);
    }, se.uniqueSort = function (e) {
      var t,
          n = [],
          r = 0,
          i = 0;

      if (l = !d.detectDuplicates, u = !d.sortStable && e.slice(0), e.sort(D), l) {
        while (t = e[i++]) {
          t === e[i] && (r = n.push(i));
        }

        while (r--) {
          e.splice(n[r], 1);
        }
      }

      return u = null, e;
    }, o = se.getText = function (e) {
      var t,
          n = "",
          r = 0,
          i = e.nodeType;

      if (i) {
        if (1 === i || 9 === i || 11 === i) {
          if ("string" == typeof e.textContent) return e.textContent;

          for (e = e.firstChild; e; e = e.nextSibling) {
            n += o(e);
          }
        } else if (3 === i || 4 === i) return e.nodeValue;
      } else while (t = e[r++]) {
        n += o(t);
      }

      return n;
    }, (b = se.selectors = {
      cacheLength: 50,
      createPseudo: le,
      match: G,
      attrHandle: {},
      find: {},
      relative: {
        ">": {
          dir: "parentNode",
          first: !0
        },
        " ": {
          dir: "parentNode"
        },
        "+": {
          dir: "previousSibling",
          first: !0
        },
        "~": {
          dir: "previousSibling"
        }
      },
      preFilter: {
        ATTR: function ATTR(e) {
          return e[1] = e[1].replace(te, ne), e[3] = (e[3] || e[4] || e[5] || "").replace(te, ne), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4);
        },
        CHILD: function CHILD(e) {
          return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || se.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && se.error(e[0]), e;
        },
        PSEUDO: function PSEUDO(e) {
          var t,
              n = !e[6] && e[2];
          return G.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && X.test(n) && (t = h(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3));
        }
      },
      filter: {
        TAG: function TAG(e) {
          var t = e.replace(te, ne).toLowerCase();
          return "*" === e ? function () {
            return !0;
          } : function (e) {
            return e.nodeName && e.nodeName.toLowerCase() === t;
          };
        },
        CLASS: function CLASS(e) {
          var t = m[e + " "];
          return t || (t = new RegExp("(^|" + M + ")" + e + "(" + M + "|$)")) && m(e, function (e) {
            return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "");
          });
        },
        ATTR: function ATTR(n, r, i) {
          return function (e) {
            var t = se.attr(e, n);
            return null == t ? "!=" === r : !r || (t += "", "=" === r ? t === i : "!=" === r ? t !== i : "^=" === r ? i && 0 === t.indexOf(i) : "*=" === r ? i && -1 < t.indexOf(i) : "$=" === r ? i && t.slice(-i.length) === i : "~=" === r ? -1 < (" " + t.replace(B, " ") + " ").indexOf(i) : "|=" === r && (t === i || t.slice(0, i.length + 1) === i + "-"));
          };
        },
        CHILD: function CHILD(h, e, t, g, v) {
          var y = "nth" !== h.slice(0, 3),
              m = "last" !== h.slice(-4),
              x = "of-type" === e;
          return 1 === g && 0 === v ? function (e) {
            return !!e.parentNode;
          } : function (e, t, n) {
            var r,
                i,
                o,
                a,
                s,
                u,
                l = y !== m ? "nextSibling" : "previousSibling",
                c = e.parentNode,
                f = x && e.nodeName.toLowerCase(),
                p = !n && !x,
                d = !1;

            if (c) {
              if (y) {
                while (l) {
                  a = e;

                  while (a = a[l]) {
                    if (x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) return !1;
                  }

                  u = l = "only" === h && !u && "nextSibling";
                }

                return !0;
              }

              if (u = [m ? c.firstChild : c.lastChild], m && p) {
                d = (s = (r = (i = (o = (a = c)[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === k && r[1]) && r[2], a = s && c.childNodes[s];

                while (a = ++s && a && a[l] || (d = s = 0) || u.pop()) {
                  if (1 === a.nodeType && ++d && a === e) {
                    i[h] = [k, s, d];
                    break;
                  }
                }
              } else if (p && (d = s = (r = (i = (o = (a = e)[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] || [])[0] === k && r[1]), !1 === d) while (a = ++s && a && a[l] || (d = s = 0) || u.pop()) {
                if ((x ? a.nodeName.toLowerCase() === f : 1 === a.nodeType) && ++d && (p && ((i = (o = a[S] || (a[S] = {}))[a.uniqueID] || (o[a.uniqueID] = {}))[h] = [k, d]), a === e)) break;
              }

              return (d -= v) === g || d % g == 0 && 0 <= d / g;
            }
          };
        },
        PSEUDO: function PSEUDO(e, o) {
          var t,
              a = b.pseudos[e] || b.setFilters[e.toLowerCase()] || se.error("unsupported pseudo: " + e);
          return a[S] ? a(o) : 1 < a.length ? (t = [e, e, "", o], b.setFilters.hasOwnProperty(e.toLowerCase()) ? le(function (e, t) {
            var n,
                r = a(e, o),
                i = r.length;

            while (i--) {
              e[n = P(e, r[i])] = !(t[n] = r[i]);
            }
          }) : function (e) {
            return a(e, 0, t);
          }) : a;
        }
      },
      pseudos: {
        not: le(function (e) {
          var r = [],
              i = [],
              s = f(e.replace($, "$1"));
          return s[S] ? le(function (e, t, n, r) {
            var i,
                o = s(e, null, r, []),
                a = e.length;

            while (a--) {
              (i = o[a]) && (e[a] = !(t[a] = i));
            }
          }) : function (e, t, n) {
            return r[0] = e, s(r, null, n, i), r[0] = null, !i.pop();
          };
        }),
        has: le(function (t) {
          return function (e) {
            return 0 < se(t, e).length;
          };
        }),
        contains: le(function (t) {
          return t = t.replace(te, ne), function (e) {
            return -1 < (e.textContent || o(e)).indexOf(t);
          };
        }),
        lang: le(function (n) {
          return V.test(n || "") || se.error("unsupported lang: " + n), n = n.replace(te, ne).toLowerCase(), function (e) {
            var t;

            do {
              if (t = E ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang")) return (t = t.toLowerCase()) === n || 0 === t.indexOf(n + "-");
            } while ((e = e.parentNode) && 1 === e.nodeType);

            return !1;
          };
        }),
        target: function target(e) {
          var t = n.location && n.location.hash;
          return t && t.slice(1) === e.id;
        },
        root: function root(e) {
          return e === a;
        },
        focus: function focus(e) {
          return e === C.activeElement && (!C.hasFocus || C.hasFocus()) && !!(e.type || e.href || ~e.tabIndex);
        },
        enabled: ge(!1),
        disabled: ge(!0),
        checked: function checked(e) {
          var t = e.nodeName.toLowerCase();
          return "input" === t && !!e.checked || "option" === t && !!e.selected;
        },
        selected: function selected(e) {
          return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected;
        },
        empty: function empty(e) {
          for (e = e.firstChild; e; e = e.nextSibling) {
            if (e.nodeType < 6) return !1;
          }

          return !0;
        },
        parent: function parent(e) {
          return !b.pseudos.empty(e);
        },
        header: function header(e) {
          return J.test(e.nodeName);
        },
        input: function input(e) {
          return Q.test(e.nodeName);
        },
        button: function button(e) {
          var t = e.nodeName.toLowerCase();
          return "input" === t && "button" === e.type || "button" === t;
        },
        text: function text(e) {
          var t;
          return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase());
        },
        first: ve(function () {
          return [0];
        }),
        last: ve(function (e, t) {
          return [t - 1];
        }),
        eq: ve(function (e, t, n) {
          return [n < 0 ? n + t : n];
        }),
        even: ve(function (e, t) {
          for (var n = 0; n < t; n += 2) {
            e.push(n);
          }

          return e;
        }),
        odd: ve(function (e, t) {
          for (var n = 1; n < t; n += 2) {
            e.push(n);
          }

          return e;
        }),
        lt: ve(function (e, t, n) {
          for (var r = n < 0 ? n + t : t < n ? t : n; 0 <= --r;) {
            e.push(r);
          }

          return e;
        }),
        gt: ve(function (e, t, n) {
          for (var r = n < 0 ? n + t : n; ++r < t;) {
            e.push(r);
          }

          return e;
        })
      }
    }).pseudos.nth = b.pseudos.eq, {
      radio: !0,
      checkbox: !0,
      file: !0,
      password: !0,
      image: !0
    }) {
      b.pseudos[e] = de(e);
    }

    for (e in {
      submit: !0,
      reset: !0
    }) {
      b.pseudos[e] = he(e);
    }

    function me() {}

    function xe(e) {
      for (var t = 0, n = e.length, r = ""; t < n; t++) {
        r += e[t].value;
      }

      return r;
    }

    function be(s, e, t) {
      var u = e.dir,
          l = e.next,
          c = l || u,
          f = t && "parentNode" === c,
          p = r++;
      return e.first ? function (e, t, n) {
        while (e = e[u]) {
          if (1 === e.nodeType || f) return s(e, t, n);
        }

        return !1;
      } : function (e, t, n) {
        var r,
            i,
            o,
            a = [k, p];

        if (n) {
          while (e = e[u]) {
            if ((1 === e.nodeType || f) && s(e, t, n)) return !0;
          }
        } else while (e = e[u]) {
          if (1 === e.nodeType || f) if (i = (o = e[S] || (e[S] = {}))[e.uniqueID] || (o[e.uniqueID] = {}), l && l === e.nodeName.toLowerCase()) e = e[u] || e;else {
            if ((r = i[c]) && r[0] === k && r[1] === p) return a[2] = r[2];
            if ((i[c] = a)[2] = s(e, t, n)) return !0;
          }
        }

        return !1;
      };
    }

    function we(i) {
      return 1 < i.length ? function (e, t, n) {
        var r = i.length;

        while (r--) {
          if (!i[r](e, t, n)) return !1;
        }

        return !0;
      } : i[0];
    }

    function Te(e, t, n, r, i) {
      for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++) {
        (o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s)));
      }

      return a;
    }

    function Ce(d, h, g, v, y, e) {
      return v && !v[S] && (v = Ce(v)), y && !y[S] && (y = Ce(y, e)), le(function (e, t, n, r) {
        var i,
            o,
            a,
            s = [],
            u = [],
            l = t.length,
            c = e || function (e, t, n) {
          for (var r = 0, i = t.length; r < i; r++) {
            se(e, t[r], n);
          }

          return n;
        }(h || "*", n.nodeType ? [n] : n, []),
            f = !d || !e && h ? c : Te(c, s, d, n, r),
            p = g ? y || (e ? d : l || v) ? [] : t : f;

        if (g && g(f, p, n, r), v) {
          i = Te(p, u), v(i, [], n, r), o = i.length;

          while (o--) {
            (a = i[o]) && (p[u[o]] = !(f[u[o]] = a));
          }
        }

        if (e) {
          if (y || d) {
            if (y) {
              i = [], o = p.length;

              while (o--) {
                (a = p[o]) && i.push(f[o] = a);
              }

              y(null, p = [], i, r);
            }

            o = p.length;

            while (o--) {
              (a = p[o]) && -1 < (i = y ? P(e, a) : s[o]) && (e[i] = !(t[i] = a));
            }
          }
        } else p = Te(p === t ? p.splice(l, p.length) : p), y ? y(null, t, p, r) : H.apply(t, p);
      });
    }

    function Ee(e) {
      for (var i, t, n, r = e.length, o = b.relative[e[0].type], a = o || b.relative[" "], s = o ? 1 : 0, u = be(function (e) {
        return e === i;
      }, a, !0), l = be(function (e) {
        return -1 < P(i, e);
      }, a, !0), c = [function (e, t, n) {
        var r = !o && (n || t !== w) || ((i = t).nodeType ? u(e, t, n) : l(e, t, n));
        return i = null, r;
      }]; s < r; s++) {
        if (t = b.relative[e[s].type]) c = [be(we(c), t)];else {
          if ((t = b.filter[e[s].type].apply(null, e[s].matches))[S]) {
            for (n = ++s; n < r; n++) {
              if (b.relative[e[n].type]) break;
            }

            return Ce(1 < s && we(c), 1 < s && xe(e.slice(0, s - 1).concat({
              value: " " === e[s - 2].type ? "*" : ""
            })).replace($, "$1"), t, s < n && Ee(e.slice(s, n)), n < r && Ee(e = e.slice(n)), n < r && xe(e));
          }

          c.push(t);
        }
      }

      return we(c);
    }

    return me.prototype = b.filters = b.pseudos, b.setFilters = new me(), h = se.tokenize = function (e, t) {
      var n,
          r,
          i,
          o,
          a,
          s,
          u,
          l = x[e + " "];
      if (l) return t ? 0 : l.slice(0);
      a = e, s = [], u = b.preFilter;

      while (a) {
        for (o in n && !(r = _.exec(a)) || (r && (a = a.slice(r[0].length) || a), s.push(i = [])), n = !1, (r = z.exec(a)) && (n = r.shift(), i.push({
          value: n,
          type: r[0].replace($, " ")
        }), a = a.slice(n.length)), b.filter) {
          !(r = G[o].exec(a)) || u[o] && !(r = u[o](r)) || (n = r.shift(), i.push({
            value: n,
            type: o,
            matches: r
          }), a = a.slice(n.length));
        }

        if (!n) break;
      }

      return t ? a.length : a ? se.error(e) : x(e, s).slice(0);
    }, f = se.compile = function (e, t) {
      var n,
          v,
          y,
          m,
          x,
          r,
          i = [],
          o = [],
          a = A[e + " "];

      if (!a) {
        t || (t = h(e)), n = t.length;

        while (n--) {
          (a = Ee(t[n]))[S] ? i.push(a) : o.push(a);
        }

        (a = A(e, (v = o, m = 0 < (y = i).length, x = 0 < v.length, r = function r(e, t, n, _r, i) {
          var o,
              a,
              s,
              u = 0,
              l = "0",
              c = e && [],
              f = [],
              p = w,
              d = e || x && b.find.TAG("*", i),
              h = k += null == p ? 1 : Math.random() || .1,
              g = d.length;

          for (i && (w = t == C || t || i); l !== g && null != (o = d[l]); l++) {
            if (x && o) {
              a = 0, t || o.ownerDocument == C || (T(o), n = !E);

              while (s = v[a++]) {
                if (s(o, t || C, n)) {
                  _r.push(o);

                  break;
                }
              }

              i && (k = h);
            }

            m && ((o = !s && o) && u--, e && c.push(o));
          }

          if (u += l, m && l !== u) {
            a = 0;

            while (s = y[a++]) {
              s(c, f, t, n);
            }

            if (e) {
              if (0 < u) while (l--) {
                c[l] || f[l] || (f[l] = q.call(_r));
              }
              f = Te(f);
            }

            H.apply(_r, f), i && !e && 0 < f.length && 1 < u + y.length && se.uniqueSort(_r);
          }

          return i && (k = h, w = p), c;
        }, m ? le(r) : r))).selector = e;
      }

      return a;
    }, g = se.select = function (e, t, n, r) {
      var i,
          o,
          a,
          s,
          u,
          l = "function" == typeof e && e,
          c = !r && h(e = l.selector || e);

      if (n = n || [], 1 === c.length) {
        if (2 < (o = c[0] = c[0].slice(0)).length && "ID" === (a = o[0]).type && 9 === t.nodeType && E && b.relative[o[1].type]) {
          if (!(t = (b.find.ID(a.matches[0].replace(te, ne), t) || [])[0])) return n;
          l && (t = t.parentNode), e = e.slice(o.shift().value.length);
        }

        i = G.needsContext.test(e) ? 0 : o.length;

        while (i--) {
          if (a = o[i], b.relative[s = a.type]) break;

          if ((u = b.find[s]) && (r = u(a.matches[0].replace(te, ne), ee.test(o[0].type) && ye(t.parentNode) || t))) {
            if (o.splice(i, 1), !(e = r.length && xe(o))) return H.apply(n, r), n;
            break;
          }
        }
      }

      return (l || f(e, c))(r, t, !E, n, !t || ee.test(e) && ye(t.parentNode) || t), n;
    }, d.sortStable = S.split("").sort(D).join("") === S, d.detectDuplicates = !!l, T(), d.sortDetached = ce(function (e) {
      return 1 & e.compareDocumentPosition(C.createElement("fieldset"));
    }), ce(function (e) {
      return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href");
    }) || fe("type|href|height|width", function (e, t, n) {
      if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2);
    }), d.attributes && ce(function (e) {
      return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value");
    }) || fe("value", function (e, t, n) {
      if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue;
    }), ce(function (e) {
      return null == e.getAttribute("disabled");
    }) || fe(R, function (e, t, n) {
      var r;
      if (!n) return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null;
    }), se;
  }(C);

  S.find = d, S.expr = d.selectors, S.expr[":"] = S.expr.pseudos, S.uniqueSort = S.unique = d.uniqueSort, S.text = d.getText, S.isXMLDoc = d.isXML, S.contains = d.contains, S.escapeSelector = d.escape;

  var h = function h(e, t, n) {
    var r = [],
        i = void 0 !== n;

    while ((e = e[t]) && 9 !== e.nodeType) {
      if (1 === e.nodeType) {
        if (i && S(e).is(n)) break;
        r.push(e);
      }
    }

    return r;
  },
      T = function T(e, t) {
    for (var n = []; e; e = e.nextSibling) {
      1 === e.nodeType && e !== t && n.push(e);
    }

    return n;
  },
      k = S.expr.match.needsContext;

  function A(e, t) {
    return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
  }

  var N = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

  function D(e, n, r) {
    return m(n) ? S.grep(e, function (e, t) {
      return !!n.call(e, t, e) !== r;
    }) : n.nodeType ? S.grep(e, function (e) {
      return e === n !== r;
    }) : "string" != typeof n ? S.grep(e, function (e) {
      return -1 < i.call(n, e) !== r;
    }) : S.filter(n, e, r);
  }

  S.filter = function (e, t, n) {
    var r = t[0];
    return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? S.find.matchesSelector(r, e) ? [r] : [] : S.find.matches(e, S.grep(t, function (e) {
      return 1 === e.nodeType;
    }));
  }, S.fn.extend({
    find: function find(e) {
      var t,
          n,
          r = this.length,
          i = this;
      if ("string" != typeof e) return this.pushStack(S(e).filter(function () {
        for (t = 0; t < r; t++) {
          if (S.contains(i[t], this)) return !0;
        }
      }));

      for (n = this.pushStack([]), t = 0; t < r; t++) {
        S.find(e, i[t], n);
      }

      return 1 < r ? S.uniqueSort(n) : n;
    },
    filter: function filter(e) {
      return this.pushStack(D(this, e || [], !1));
    },
    not: function not(e) {
      return this.pushStack(D(this, e || [], !0));
    },
    is: function is(e) {
      return !!D(this, "string" == typeof e && k.test(e) ? S(e) : e || [], !1).length;
    }
  });
  var j,
      q = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
  (S.fn.init = function (e, t, n) {
    var r, i;
    if (!e) return this;

    if (n = n || j, "string" == typeof e) {
      if (!(r = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [null, e, null] : q.exec(e)) || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);

      if (r[1]) {
        if (t = t instanceof S ? t[0] : t, S.merge(this, S.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : E, !0)), N.test(r[1]) && S.isPlainObject(t)) for (r in t) {
          m(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
        }
        return this;
      }

      return (i = E.getElementById(r[2])) && (this[0] = i, this.length = 1), this;
    }

    return e.nodeType ? (this[0] = e, this.length = 1, this) : m(e) ? void 0 !== n.ready ? n.ready(e) : e(S) : S.makeArray(e, this);
  }).prototype = S.fn, j = S(E);
  var L = /^(?:parents|prev(?:Until|All))/,
      H = {
    children: !0,
    contents: !0,
    next: !0,
    prev: !0
  };

  function O(e, t) {
    while ((e = e[t]) && 1 !== e.nodeType) {
      ;
    }

    return e;
  }

  S.fn.extend({
    has: function has(e) {
      var t = S(e, this),
          n = t.length;
      return this.filter(function () {
        for (var e = 0; e < n; e++) {
          if (S.contains(this, t[e])) return !0;
        }
      });
    },
    closest: function closest(e, t) {
      var n,
          r = 0,
          i = this.length,
          o = [],
          a = "string" != typeof e && S(e);
      if (!k.test(e)) for (; r < i; r++) {
        for (n = this[r]; n && n !== t; n = n.parentNode) {
          if (n.nodeType < 11 && (a ? -1 < a.index(n) : 1 === n.nodeType && S.find.matchesSelector(n, e))) {
            o.push(n);
            break;
          }
        }
      }
      return this.pushStack(1 < o.length ? S.uniqueSort(o) : o);
    },
    index: function index(e) {
      return e ? "string" == typeof e ? i.call(S(e), this[0]) : i.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
    },
    add: function add(e, t) {
      return this.pushStack(S.uniqueSort(S.merge(this.get(), S(e, t))));
    },
    addBack: function addBack(e) {
      return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
    }
  }), S.each({
    parent: function parent(e) {
      var t = e.parentNode;
      return t && 11 !== t.nodeType ? t : null;
    },
    parents: function parents(e) {
      return h(e, "parentNode");
    },
    parentsUntil: function parentsUntil(e, t, n) {
      return h(e, "parentNode", n);
    },
    next: function next(e) {
      return O(e, "nextSibling");
    },
    prev: function prev(e) {
      return O(e, "previousSibling");
    },
    nextAll: function nextAll(e) {
      return h(e, "nextSibling");
    },
    prevAll: function prevAll(e) {
      return h(e, "previousSibling");
    },
    nextUntil: function nextUntil(e, t, n) {
      return h(e, "nextSibling", n);
    },
    prevUntil: function prevUntil(e, t, n) {
      return h(e, "previousSibling", n);
    },
    siblings: function siblings(e) {
      return T((e.parentNode || {}).firstChild, e);
    },
    children: function children(e) {
      return T(e.firstChild);
    },
    contents: function contents(e) {
      return null != e.contentDocument && r(e.contentDocument) ? e.contentDocument : (A(e, "template") && (e = e.content || e), S.merge([], e.childNodes));
    }
  }, function (r, i) {
    S.fn[r] = function (e, t) {
      var n = S.map(this, i, e);
      return "Until" !== r.slice(-5) && (t = e), t && "string" == typeof t && (n = S.filter(t, n)), 1 < this.length && (H[r] || S.uniqueSort(n), L.test(r) && n.reverse()), this.pushStack(n);
    };
  });
  var P = /[^\x20\t\r\n\f]+/g;

  function R(e) {
    return e;
  }

  function M(e) {
    throw e;
  }

  function I(e, t, n, r) {
    var i;

    try {
      e && m(i = e.promise) ? i.call(e).done(t).fail(n) : e && m(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r));
    } catch (e) {
      n.apply(void 0, [e]);
    }
  }

  S.Callbacks = function (r) {
    var e, n;
    r = "string" == typeof r ? (e = r, n = {}, S.each(e.match(P) || [], function (e, t) {
      n[t] = !0;
    }), n) : S.extend({}, r);

    var i,
        t,
        o,
        a,
        s = [],
        u = [],
        l = -1,
        c = function c() {
      for (a = a || r.once, o = i = !0; u.length; l = -1) {
        t = u.shift();

        while (++l < s.length) {
          !1 === s[l].apply(t[0], t[1]) && r.stopOnFalse && (l = s.length, t = !1);
        }
      }

      r.memory || (t = !1), i = !1, a && (s = t ? [] : "");
    },
        f = {
      add: function add() {
        return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) {
          S.each(e, function (e, t) {
            m(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && "string" !== w(t) && n(t);
          });
        }(arguments), t && !i && c()), this;
      },
      remove: function remove() {
        return S.each(arguments, function (e, t) {
          var n;

          while (-1 < (n = S.inArray(t, s, n))) {
            s.splice(n, 1), n <= l && l--;
          }
        }), this;
      },
      has: function has(e) {
        return e ? -1 < S.inArray(e, s) : 0 < s.length;
      },
      empty: function empty() {
        return s && (s = []), this;
      },
      disable: function disable() {
        return a = u = [], s = t = "", this;
      },
      disabled: function disabled() {
        return !s;
      },
      lock: function lock() {
        return a = u = [], t || i || (s = t = ""), this;
      },
      locked: function locked() {
        return !!a;
      },
      fireWith: function fireWith(e, t) {
        return a || (t = [e, (t = t || []).slice ? t.slice() : t], u.push(t), i || c()), this;
      },
      fire: function fire() {
        return f.fireWith(this, arguments), this;
      },
      fired: function fired() {
        return !!o;
      }
    };

    return f;
  }, S.extend({
    Deferred: function Deferred(e) {
      var o = [["notify", "progress", S.Callbacks("memory"), S.Callbacks("memory"), 2], ["resolve", "done", S.Callbacks("once memory"), S.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", S.Callbacks("once memory"), S.Callbacks("once memory"), 1, "rejected"]],
          i = "pending",
          a = {
        state: function state() {
          return i;
        },
        always: function always() {
          return s.done(arguments).fail(arguments), this;
        },
        "catch": function _catch(e) {
          return a.then(null, e);
        },
        pipe: function pipe() {
          var i = arguments;
          return S.Deferred(function (r) {
            S.each(o, function (e, t) {
              var n = m(i[t[4]]) && i[t[4]];
              s[t[1]](function () {
                var e = n && n.apply(this, arguments);
                e && m(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + "With"](this, n ? [e] : arguments);
              });
            }), i = null;
          }).promise();
        },
        then: function then(t, n, r) {
          var u = 0;

          function l(i, o, a, s) {
            return function () {
              var n = this,
                  r = arguments,
                  e = function e() {
                var e, t;

                if (!(i < u)) {
                  if ((e = a.apply(n, r)) === o.promise()) throw new TypeError("Thenable self-resolution");
                  t = e && ("object" == _typeof(e) || "function" == typeof e) && e.then, m(t) ? s ? t.call(e, l(u, o, R, s), l(u, o, M, s)) : (u++, t.call(e, l(u, o, R, s), l(u, o, M, s), l(u, o, R, o.notifyWith))) : (a !== R && (n = void 0, r = [e]), (s || o.resolveWith)(n, r));
                }
              },
                  t = s ? e : function () {
                try {
                  e();
                } catch (e) {
                  S.Deferred.exceptionHook && S.Deferred.exceptionHook(e, t.stackTrace), u <= i + 1 && (a !== M && (n = void 0, r = [e]), o.rejectWith(n, r));
                }
              };

              i ? t() : (S.Deferred.getStackHook && (t.stackTrace = S.Deferred.getStackHook()), C.setTimeout(t));
            };
          }

          return S.Deferred(function (e) {
            o[0][3].add(l(0, e, m(r) ? r : R, e.notifyWith)), o[1][3].add(l(0, e, m(t) ? t : R)), o[2][3].add(l(0, e, m(n) ? n : M));
          }).promise();
        },
        promise: function promise(e) {
          return null != e ? S.extend(e, a) : a;
        }
      },
          s = {};
      return S.each(o, function (e, t) {
        var n = t[2],
            r = t[5];
        a[t[1]] = n.add, r && n.add(function () {
          i = r;
        }, o[3 - e][2].disable, o[3 - e][3].disable, o[0][2].lock, o[0][3].lock), n.add(t[3].fire), s[t[0]] = function () {
          return s[t[0] + "With"](this === s ? void 0 : this, arguments), this;
        }, s[t[0] + "With"] = n.fireWith;
      }), a.promise(s), e && e.call(s, s), s;
    },
    when: function when(e) {
      var n = arguments.length,
          t = n,
          r = Array(t),
          i = s.call(arguments),
          o = S.Deferred(),
          a = function a(t) {
        return function (e) {
          r[t] = this, i[t] = 1 < arguments.length ? s.call(arguments) : e, --n || o.resolveWith(r, i);
        };
      };

      if (n <= 1 && (I(e, o.done(a(t)).resolve, o.reject, !n), "pending" === o.state() || m(i[t] && i[t].then))) return o.then();

      while (t--) {
        I(i[t], a(t), o.reject);
      }

      return o.promise();
    }
  });
  var W = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
  S.Deferred.exceptionHook = function (e, t) {
    C.console && C.console.warn && e && W.test(e.name) && C.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t);
  }, S.readyException = function (e) {
    C.setTimeout(function () {
      throw e;
    });
  };
  var F = S.Deferred();

  function B() {
    E.removeEventListener("DOMContentLoaded", B), C.removeEventListener("load", B), S.ready();
  }

  S.fn.ready = function (e) {
    return F.then(e)["catch"](function (e) {
      S.readyException(e);
    }), this;
  }, S.extend({
    isReady: !1,
    readyWait: 1,
    ready: function ready(e) {
      (!0 === e ? --S.readyWait : S.isReady) || (S.isReady = !0) !== e && 0 < --S.readyWait || F.resolveWith(E, [S]);
    }
  }), S.ready.then = F.then, "complete" === E.readyState || "loading" !== E.readyState && !E.documentElement.doScroll ? C.setTimeout(S.ready) : (E.addEventListener("DOMContentLoaded", B), C.addEventListener("load", B));

  var $ = function $(e, t, n, r, i, o, a) {
    var s = 0,
        u = e.length,
        l = null == n;
    if ("object" === w(n)) for (s in i = !0, n) {
      $(e, t, s, n[s], !0, o, a);
    } else if (void 0 !== r && (i = !0, m(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function t(e, _t2, n) {
      return l.call(S(e), n);
    })), t)) for (; s < u; s++) {
      t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
    }
    return i ? e : l ? t.call(e) : u ? t(e[0], n) : o;
  },
      _ = /^-ms-/,
      z = /-([a-z])/g;

  function U(e, t) {
    return t.toUpperCase();
  }

  function X(e) {
    return e.replace(_, "ms-").replace(z, U);
  }

  var V = function V(e) {
    return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
  };

  function G() {
    this.expando = S.expando + G.uid++;
  }

  G.uid = 1, G.prototype = {
    cache: function cache(e) {
      var t = e[this.expando];
      return t || (t = {}, V(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
        value: t,
        configurable: !0
      }))), t;
    },
    set: function set(e, t, n) {
      var r,
          i = this.cache(e);
      if ("string" == typeof t) i[X(t)] = n;else for (r in t) {
        i[X(r)] = t[r];
      }
      return i;
    },
    get: function get(e, t) {
      return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][X(t)];
    },
    access: function access(e, t, n) {
      return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n), void 0 !== n ? n : t);
    },
    remove: function remove(e, t) {
      var n,
          r = e[this.expando];

      if (void 0 !== r) {
        if (void 0 !== t) {
          n = (t = Array.isArray(t) ? t.map(X) : (t = X(t)) in r ? [t] : t.match(P) || []).length;

          while (n--) {
            delete r[t[n]];
          }
        }

        (void 0 === t || S.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando]);
      }
    },
    hasData: function hasData(e) {
      var t = e[this.expando];
      return void 0 !== t && !S.isEmptyObject(t);
    }
  };
  var Y = new G(),
      Q = new G(),
      J = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      K = /[A-Z]/g;

  function Z(e, t, n) {
    var r, i;
    if (void 0 === n && 1 === e.nodeType) if (r = "data-" + t.replace(K, "-$&").toLowerCase(), "string" == typeof (n = e.getAttribute(r))) {
      try {
        n = "true" === (i = n) || "false" !== i && ("null" === i ? null : i === +i + "" ? +i : J.test(i) ? JSON.parse(i) : i);
      } catch (e) {}

      Q.set(e, t, n);
    } else n = void 0;
    return n;
  }

  S.extend({
    hasData: function hasData(e) {
      return Q.hasData(e) || Y.hasData(e);
    },
    data: function data(e, t, n) {
      return Q.access(e, t, n);
    },
    removeData: function removeData(e, t) {
      Q.remove(e, t);
    },
    _data: function _data(e, t, n) {
      return Y.access(e, t, n);
    },
    _removeData: function _removeData(e, t) {
      Y.remove(e, t);
    }
  }), S.fn.extend({
    data: function data(n, e) {
      var t,
          r,
          i,
          o = this[0],
          a = o && o.attributes;

      if (void 0 === n) {
        if (this.length && (i = Q.get(o), 1 === o.nodeType && !Y.get(o, "hasDataAttrs"))) {
          t = a.length;

          while (t--) {
            a[t] && 0 === (r = a[t].name).indexOf("data-") && (r = X(r.slice(5)), Z(o, r, i[r]));
          }

          Y.set(o, "hasDataAttrs", !0);
        }

        return i;
      }

      return "object" == _typeof(n) ? this.each(function () {
        Q.set(this, n);
      }) : $(this, function (e) {
        var t;
        if (o && void 0 === e) return void 0 !== (t = Q.get(o, n)) ? t : void 0 !== (t = Z(o, n)) ? t : void 0;
        this.each(function () {
          Q.set(this, n, e);
        });
      }, null, e, 1 < arguments.length, null, !0);
    },
    removeData: function removeData(e) {
      return this.each(function () {
        Q.remove(this, e);
      });
    }
  }), S.extend({
    queue: function queue(e, t, n) {
      var r;
      if (e) return t = (t || "fx") + "queue", r = Y.get(e, t), n && (!r || Array.isArray(n) ? r = Y.access(e, t, S.makeArray(n)) : r.push(n)), r || [];
    },
    dequeue: function dequeue(e, t) {
      t = t || "fx";

      var n = S.queue(e, t),
          r = n.length,
          i = n.shift(),
          o = S._queueHooks(e, t);

      "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, function () {
        S.dequeue(e, t);
      }, o)), !r && o && o.empty.fire();
    },
    _queueHooks: function _queueHooks(e, t) {
      var n = t + "queueHooks";
      return Y.get(e, n) || Y.access(e, n, {
        empty: S.Callbacks("once memory").add(function () {
          Y.remove(e, [t + "queue", n]);
        })
      });
    }
  }), S.fn.extend({
    queue: function queue(t, n) {
      var e = 2;
      return "string" != typeof t && (n = t, t = "fx", e--), arguments.length < e ? S.queue(this[0], t) : void 0 === n ? this : this.each(function () {
        var e = S.queue(this, t, n);
        S._queueHooks(this, t), "fx" === t && "inprogress" !== e[0] && S.dequeue(this, t);
      });
    },
    dequeue: function dequeue(e) {
      return this.each(function () {
        S.dequeue(this, e);
      });
    },
    clearQueue: function clearQueue(e) {
      return this.queue(e || "fx", []);
    },
    promise: function promise(e, t) {
      var n,
          r = 1,
          i = S.Deferred(),
          o = this,
          a = this.length,
          s = function s() {
        --r || i.resolveWith(o, [o]);
      };

      "string" != typeof e && (t = e, e = void 0), e = e || "fx";

      while (a--) {
        (n = Y.get(o[a], e + "queueHooks")) && n.empty && (r++, n.empty.add(s));
      }

      return s(), i.promise(t);
    }
  });

  var ee = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      te = new RegExp("^(?:([+-])=|)(" + ee + ")([a-z%]*)$", "i"),
      ne = ["Top", "Right", "Bottom", "Left"],
      re = E.documentElement,
      ie = function ie(e) {
    return S.contains(e.ownerDocument, e);
  },
      oe = {
    composed: !0
  };

  re.getRootNode && (ie = function ie(e) {
    return S.contains(e.ownerDocument, e) || e.getRootNode(oe) === e.ownerDocument;
  });

  var ae = function ae(e, t) {
    return "none" === (e = t || e).style.display || "" === e.style.display && ie(e) && "none" === S.css(e, "display");
  };

  function se(e, t, n, r) {
    var i,
        o,
        a = 20,
        s = r ? function () {
      return r.cur();
    } : function () {
      return S.css(e, t, "");
    },
        u = s(),
        l = n && n[3] || (S.cssNumber[t] ? "" : "px"),
        c = e.nodeType && (S.cssNumber[t] || "px" !== l && +u) && te.exec(S.css(e, t));

    if (c && c[3] !== l) {
      u /= 2, l = l || c[3], c = +u || 1;

      while (a--) {
        S.style(e, t, c + l), (1 - o) * (1 - (o = s() / u || .5)) <= 0 && (a = 0), c /= o;
      }

      c *= 2, S.style(e, t, c + l), n = n || [];
    }

    return n && (c = +c || +u || 0, i = n[1] ? c + (n[1] + 1) * n[2] : +n[2], r && (r.unit = l, r.start = c, r.end = i)), i;
  }

  var ue = {};

  function le(e, t) {
    for (var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c < f; c++) {
      (r = e[c]).style && (n = r.style.display, t ? ("none" === n && (l[c] = Y.get(r, "display") || null, l[c] || (r.style.display = "")), "" === r.style.display && ae(r) && (l[c] = (u = a = o = void 0, a = (i = r).ownerDocument, s = i.nodeName, (u = ue[s]) || (o = a.body.appendChild(a.createElement(s)), u = S.css(o, "display"), o.parentNode.removeChild(o), "none" === u && (u = "block"), ue[s] = u)))) : "none" !== n && (l[c] = "none", Y.set(r, "display", n)));
    }

    for (c = 0; c < f; c++) {
      null != l[c] && (e[c].style.display = l[c]);
    }

    return e;
  }

  S.fn.extend({
    show: function show() {
      return le(this, !0);
    },
    hide: function hide() {
      return le(this);
    },
    toggle: function toggle(e) {
      return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function () {
        ae(this) ? S(this).show() : S(this).hide();
      });
    }
  });
  var ce,
      fe,
      pe = /^(?:checkbox|radio)$/i,
      de = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
      he = /^$|^module$|\/(?:java|ecma)script/i;
  ce = E.createDocumentFragment().appendChild(E.createElement("div")), (fe = E.createElement("input")).setAttribute("type", "radio"), fe.setAttribute("checked", "checked"), fe.setAttribute("name", "t"), ce.appendChild(fe), y.checkClone = ce.cloneNode(!0).cloneNode(!0).lastChild.checked, ce.innerHTML = "<textarea>x</textarea>", y.noCloneChecked = !!ce.cloneNode(!0).lastChild.defaultValue, ce.innerHTML = "<option></option>", y.option = !!ce.lastChild;
  var ge = {
    thead: [1, "<table>", "</table>"],
    col: [2, "<table><colgroup>", "</colgroup></table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: [0, "", ""]
  };

  function ve(e, t) {
    var n;
    return n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [], void 0 === t || t && A(e, t) ? S.merge([e], n) : n;
  }

  function ye(e, t) {
    for (var n = 0, r = e.length; n < r; n++) {
      Y.set(e[n], "globalEval", !t || Y.get(t[n], "globalEval"));
    }
  }

  ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead, ge.th = ge.td, y.option || (ge.optgroup = ge.option = [1, "<select multiple='multiple'>", "</select>"]);
  var me = /<|&#?\w+;/;

  function xe(e, t, n, r, i) {
    for (var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++) {
      if ((o = e[d]) || 0 === o) if ("object" === w(o)) S.merge(p, o.nodeType ? [o] : o);else if (me.test(o)) {
        a = a || f.appendChild(t.createElement("div")), s = (de.exec(o) || ["", ""])[1].toLowerCase(), u = ge[s] || ge._default, a.innerHTML = u[1] + S.htmlPrefilter(o) + u[2], c = u[0];

        while (c--) {
          a = a.lastChild;
        }

        S.merge(p, a.childNodes), (a = f.firstChild).textContent = "";
      } else p.push(t.createTextNode(o));
    }

    f.textContent = "", d = 0;

    while (o = p[d++]) {
      if (r && -1 < S.inArray(o, r)) i && i.push(o);else if (l = ie(o), a = ve(f.appendChild(o), "script"), l && ye(a), n) {
        c = 0;

        while (o = a[c++]) {
          he.test(o.type || "") && n.push(o);
        }
      }
    }

    return f;
  }

  var be = /^key/,
      we = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
      Te = /^([^.]*)(?:\.(.+)|)/;

  function Ce() {
    return !0;
  }

  function Ee() {
    return !1;
  }

  function Se(e, t) {
    return e === function () {
      try {
        return E.activeElement;
      } catch (e) {}
    }() == ("focus" === t);
  }

  function ke(e, t, n, r, i, o) {
    var a, s;

    if ("object" == _typeof(t)) {
      for (s in "string" != typeof n && (r = r || n, n = void 0), t) {
        ke(e, s, n, r, t[s], o);
      }

      return e;
    }

    if (null == r && null == i ? (i = n, r = n = void 0) : null == i && ("string" == typeof n ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = Ee;else if (!i) return e;
    return 1 === o && (a = i, (i = function i(e) {
      return S().off(e), a.apply(this, arguments);
    }).guid = a.guid || (a.guid = S.guid++)), e.each(function () {
      S.event.add(this, t, i, r, n);
    });
  }

  function Ae(e, i, o) {
    o ? (Y.set(e, i, !1), S.event.add(e, i, {
      namespace: !1,
      handler: function handler(e) {
        var t,
            n,
            r = Y.get(this, i);

        if (1 & e.isTrigger && this[i]) {
          if (r.length) (S.event.special[i] || {}).delegateType && e.stopPropagation();else if (r = s.call(arguments), Y.set(this, i, r), t = o(this, i), this[i](), r !== (n = Y.get(this, i)) || t ? Y.set(this, i, !1) : n = {}, r !== n) return e.stopImmediatePropagation(), e.preventDefault(), n.value;
        } else r.length && (Y.set(this, i, {
          value: S.event.trigger(S.extend(r[0], S.Event.prototype), r.slice(1), this)
        }), e.stopImmediatePropagation());
      }
    })) : void 0 === Y.get(e, i) && S.event.add(e, i, Ce);
  }

  S.event = {
    global: {},
    add: function add(t, e, n, r, i) {
      var o,
          a,
          s,
          u,
          l,
          c,
          f,
          p,
          d,
          h,
          g,
          v = Y.get(t);

      if (V(t)) {
        n.handler && (n = (o = n).handler, i = o.selector), i && S.find.matchesSelector(re, i), n.guid || (n.guid = S.guid++), (u = v.events) || (u = v.events = Object.create(null)), (a = v.handle) || (a = v.handle = function (e) {
          return "undefined" != typeof S && S.event.triggered !== e.type ? S.event.dispatch.apply(t, arguments) : void 0;
        }), l = (e = (e || "").match(P) || [""]).length;

        while (l--) {
          d = g = (s = Te.exec(e[l]) || [])[1], h = (s[2] || "").split(".").sort(), d && (f = S.event.special[d] || {}, d = (i ? f.delegateType : f.bindType) || d, f = S.event.special[d] || {}, c = S.extend({
            type: d,
            origType: g,
            data: r,
            handler: n,
            guid: n.guid,
            selector: i,
            needsContext: i && S.expr.match.needsContext.test(i),
            namespace: h.join(".")
          }, o), (p = u[d]) || ((p = u[d] = []).delegateCount = 0, f.setup && !1 !== f.setup.call(t, r, h, a) || t.addEventListener && t.addEventListener(d, a)), f.add && (f.add.call(t, c), c.handler.guid || (c.handler.guid = n.guid)), i ? p.splice(p.delegateCount++, 0, c) : p.push(c), S.event.global[d] = !0);
        }
      }
    },
    remove: function remove(e, t, n, r, i) {
      var o,
          a,
          s,
          u,
          l,
          c,
          f,
          p,
          d,
          h,
          g,
          v = Y.hasData(e) && Y.get(e);

      if (v && (u = v.events)) {
        l = (t = (t || "").match(P) || [""]).length;

        while (l--) {
          if (d = g = (s = Te.exec(t[l]) || [])[1], h = (s[2] || "").split(".").sort(), d) {
            f = S.event.special[d] || {}, p = u[d = (r ? f.delegateType : f.bindType) || d] || [], s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = p.length;

            while (o--) {
              c = p[o], !i && g !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1), c.selector && p.delegateCount--, f.remove && f.remove.call(e, c));
            }

            a && !p.length && (f.teardown && !1 !== f.teardown.call(e, h, v.handle) || S.removeEvent(e, d, v.handle), delete u[d]);
          } else for (d in u) {
            S.event.remove(e, d + t[l], n, r, !0);
          }
        }

        S.isEmptyObject(u) && Y.remove(e, "handle events");
      }
    },
    dispatch: function dispatch(e) {
      var t,
          n,
          r,
          i,
          o,
          a,
          s = new Array(arguments.length),
          u = S.event.fix(e),
          l = (Y.get(this, "events") || Object.create(null))[u.type] || [],
          c = S.event.special[u.type] || {};

      for (s[0] = u, t = 1; t < arguments.length; t++) {
        s[t] = arguments[t];
      }

      if (u.delegateTarget = this, !c.preDispatch || !1 !== c.preDispatch.call(this, u)) {
        a = S.event.handlers.call(this, u, l), t = 0;

        while ((i = a[t++]) && !u.isPropagationStopped()) {
          u.currentTarget = i.elem, n = 0;

          while ((o = i.handlers[n++]) && !u.isImmediatePropagationStopped()) {
            u.rnamespace && !1 !== o.namespace && !u.rnamespace.test(o.namespace) || (u.handleObj = o, u.data = o.data, void 0 !== (r = ((S.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, s)) && !1 === (u.result = r) && (u.preventDefault(), u.stopPropagation()));
          }
        }

        return c.postDispatch && c.postDispatch.call(this, u), u.result;
      }
    },
    handlers: function handlers(e, t) {
      var n,
          r,
          i,
          o,
          a,
          s = [],
          u = t.delegateCount,
          l = e.target;
      if (u && l.nodeType && !("click" === e.type && 1 <= e.button)) for (; l !== this; l = l.parentNode || this) {
        if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
          for (o = [], a = {}, n = 0; n < u; n++) {
            void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? -1 < S(i, this).index(l) : S.find(i, this, null, [l]).length), a[i] && o.push(r);
          }

          o.length && s.push({
            elem: l,
            handlers: o
          });
        }
      }
      return l = this, u < t.length && s.push({
        elem: l,
        handlers: t.slice(u)
      }), s;
    },
    addProp: function addProp(t, e) {
      Object.defineProperty(S.Event.prototype, t, {
        enumerable: !0,
        configurable: !0,
        get: m(e) ? function () {
          if (this.originalEvent) return e(this.originalEvent);
        } : function () {
          if (this.originalEvent) return this.originalEvent[t];
        },
        set: function set(e) {
          Object.defineProperty(this, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: e
          });
        }
      });
    },
    fix: function fix(e) {
      return e[S.expando] ? e : new S.Event(e);
    },
    special: {
      load: {
        noBubble: !0
      },
      click: {
        setup: function setup(e) {
          var t = this || e;
          return pe.test(t.type) && t.click && A(t, "input") && Ae(t, "click", Ce), !1;
        },
        trigger: function trigger(e) {
          var t = this || e;
          return pe.test(t.type) && t.click && A(t, "input") && Ae(t, "click"), !0;
        },
        _default: function _default(e) {
          var t = e.target;
          return pe.test(t.type) && t.click && A(t, "input") && Y.get(t, "click") || A(t, "a");
        }
      },
      beforeunload: {
        postDispatch: function postDispatch(e) {
          void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result);
        }
      }
    }
  }, S.removeEvent = function (e, t, n) {
    e.removeEventListener && e.removeEventListener(t, n);
  }, S.Event = function (e, t) {
    if (!(this instanceof S.Event)) return new S.Event(e, t);
    e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? Ce : Ee, this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, t && S.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[S.expando] = !0;
  }, S.Event.prototype = {
    constructor: S.Event,
    isDefaultPrevented: Ee,
    isPropagationStopped: Ee,
    isImmediatePropagationStopped: Ee,
    isSimulated: !1,
    preventDefault: function preventDefault() {
      var e = this.originalEvent;
      this.isDefaultPrevented = Ce, e && !this.isSimulated && e.preventDefault();
    },
    stopPropagation: function stopPropagation() {
      var e = this.originalEvent;
      this.isPropagationStopped = Ce, e && !this.isSimulated && e.stopPropagation();
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      var e = this.originalEvent;
      this.isImmediatePropagationStopped = Ce, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation();
    }
  }, S.each({
    altKey: !0,
    bubbles: !0,
    cancelable: !0,
    changedTouches: !0,
    ctrlKey: !0,
    detail: !0,
    eventPhase: !0,
    metaKey: !0,
    pageX: !0,
    pageY: !0,
    shiftKey: !0,
    view: !0,
    "char": !0,
    code: !0,
    charCode: !0,
    key: !0,
    keyCode: !0,
    button: !0,
    buttons: !0,
    clientX: !0,
    clientY: !0,
    offsetX: !0,
    offsetY: !0,
    pointerId: !0,
    pointerType: !0,
    screenX: !0,
    screenY: !0,
    targetTouches: !0,
    toElement: !0,
    touches: !0,
    which: function which(e) {
      var t = e.button;
      return null == e.which && be.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && we.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which;
    }
  }, S.event.addProp), S.each({
    focus: "focusin",
    blur: "focusout"
  }, function (e, t) {
    S.event.special[e] = {
      setup: function setup() {
        return Ae(this, e, Se), !1;
      },
      trigger: function trigger() {
        return Ae(this, e), !0;
      },
      delegateType: t
    };
  }), S.each({
    mouseenter: "mouseover",
    mouseleave: "mouseout",
    pointerenter: "pointerover",
    pointerleave: "pointerout"
  }, function (e, i) {
    S.event.special[e] = {
      delegateType: i,
      bindType: i,
      handle: function handle(e) {
        var t,
            n = e.relatedTarget,
            r = e.handleObj;
        return n && (n === this || S.contains(this, n)) || (e.type = r.origType, t = r.handler.apply(this, arguments), e.type = i), t;
      }
    };
  }), S.fn.extend({
    on: function on(e, t, n, r) {
      return ke(this, e, t, n, r);
    },
    one: function one(e, t, n, r) {
      return ke(this, e, t, n, r, 1);
    },
    off: function off(e, t, n) {
      var r, i;
      if (e && e.preventDefault && e.handleObj) return r = e.handleObj, S(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this;

      if ("object" == _typeof(e)) {
        for (i in e) {
          this.off(i, t, e[i]);
        }

        return this;
      }

      return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = Ee), this.each(function () {
        S.event.remove(this, e, n, t);
      });
    }
  });
  var Ne = /<script|<style|<link/i,
      De = /checked\s*(?:[^=]|=\s*.checked.)/i,
      je = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

  function qe(e, t) {
    return A(e, "table") && A(11 !== t.nodeType ? t : t.firstChild, "tr") && S(e).children("tbody")[0] || e;
  }

  function Le(e) {
    return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e;
  }

  function He(e) {
    return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), e;
  }

  function Oe(e, t) {
    var n, r, i, o, a, s;

    if (1 === t.nodeType) {
      if (Y.hasData(e) && (s = Y.get(e).events)) for (i in Y.remove(t, "handle events"), s) {
        for (n = 0, r = s[i].length; n < r; n++) {
          S.event.add(t, i, s[i][n]);
        }
      }
      Q.hasData(e) && (o = Q.access(e), a = S.extend({}, o), Q.set(t, a));
    }
  }

  function Pe(n, r, i, o) {
    r = g(r);
    var e,
        t,
        a,
        s,
        u,
        l,
        c = 0,
        f = n.length,
        p = f - 1,
        d = r[0],
        h = m(d);
    if (h || 1 < f && "string" == typeof d && !y.checkClone && De.test(d)) return n.each(function (e) {
      var t = n.eq(e);
      h && (r[0] = d.call(this, e, t.html())), Pe(t, r, i, o);
    });

    if (f && (t = (e = xe(r, n[0].ownerDocument, !1, n, o)).firstChild, 1 === e.childNodes.length && (e = t), t || o)) {
      for (s = (a = S.map(ve(e, "script"), Le)).length; c < f; c++) {
        u = e, c !== p && (u = S.clone(u, !0, !0), s && S.merge(a, ve(u, "script"))), i.call(n[c], u, c);
      }

      if (s) for (l = a[a.length - 1].ownerDocument, S.map(a, He), c = 0; c < s; c++) {
        u = a[c], he.test(u.type || "") && !Y.access(u, "globalEval") && S.contains(l, u) && (u.src && "module" !== (u.type || "").toLowerCase() ? S._evalUrl && !u.noModule && S._evalUrl(u.src, {
          nonce: u.nonce || u.getAttribute("nonce")
        }, l) : b(u.textContent.replace(je, ""), u, l));
      }
    }

    return n;
  }

  function Re(e, t, n) {
    for (var r, i = t ? S.filter(t, e) : e, o = 0; null != (r = i[o]); o++) {
      n || 1 !== r.nodeType || S.cleanData(ve(r)), r.parentNode && (n && ie(r) && ye(ve(r, "script")), r.parentNode.removeChild(r));
    }

    return e;
  }

  S.extend({
    htmlPrefilter: function htmlPrefilter(e) {
      return e;
    },
    clone: function clone(e, t, n) {
      var r,
          i,
          o,
          a,
          s,
          u,
          l,
          c = e.cloneNode(!0),
          f = ie(e);
      if (!(y.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || S.isXMLDoc(e))) for (a = ve(c), r = 0, i = (o = ve(e)).length; r < i; r++) {
        s = o[r], u = a[r], void 0, "input" === (l = u.nodeName.toLowerCase()) && pe.test(s.type) ? u.checked = s.checked : "input" !== l && "textarea" !== l || (u.defaultValue = s.defaultValue);
      }
      if (t) if (n) for (o = o || ve(e), a = a || ve(c), r = 0, i = o.length; r < i; r++) {
        Oe(o[r], a[r]);
      } else Oe(e, c);
      return 0 < (a = ve(c, "script")).length && ye(a, !f && ve(e, "script")), c;
    },
    cleanData: function cleanData(e) {
      for (var t, n, r, i = S.event.special, o = 0; void 0 !== (n = e[o]); o++) {
        if (V(n)) {
          if (t = n[Y.expando]) {
            if (t.events) for (r in t.events) {
              i[r] ? S.event.remove(n, r) : S.removeEvent(n, r, t.handle);
            }
            n[Y.expando] = void 0;
          }

          n[Q.expando] && (n[Q.expando] = void 0);
        }
      }
    }
  }), S.fn.extend({
    detach: function detach(e) {
      return Re(this, e, !0);
    },
    remove: function remove(e) {
      return Re(this, e);
    },
    text: function text(e) {
      return $(this, function (e) {
        return void 0 === e ? S.text(this) : this.empty().each(function () {
          1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e);
        });
      }, null, e, arguments.length);
    },
    append: function append() {
      return Pe(this, arguments, function (e) {
        1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || qe(this, e).appendChild(e);
      });
    },
    prepend: function prepend() {
      return Pe(this, arguments, function (e) {
        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
          var t = qe(this, e);
          t.insertBefore(e, t.firstChild);
        }
      });
    },
    before: function before() {
      return Pe(this, arguments, function (e) {
        this.parentNode && this.parentNode.insertBefore(e, this);
      });
    },
    after: function after() {
      return Pe(this, arguments, function (e) {
        this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
      });
    },
    empty: function empty() {
      for (var e, t = 0; null != (e = this[t]); t++) {
        1 === e.nodeType && (S.cleanData(ve(e, !1)), e.textContent = "");
      }

      return this;
    },
    clone: function clone(e, t) {
      return e = null != e && e, t = null == t ? e : t, this.map(function () {
        return S.clone(this, e, t);
      });
    },
    html: function html(e) {
      return $(this, function (e) {
        var t = this[0] || {},
            n = 0,
            r = this.length;
        if (void 0 === e && 1 === t.nodeType) return t.innerHTML;

        if ("string" == typeof e && !Ne.test(e) && !ge[(de.exec(e) || ["", ""])[1].toLowerCase()]) {
          e = S.htmlPrefilter(e);

          try {
            for (; n < r; n++) {
              1 === (t = this[n] || {}).nodeType && (S.cleanData(ve(t, !1)), t.innerHTML = e);
            }

            t = 0;
          } catch (e) {}
        }

        t && this.empty().append(e);
      }, null, e, arguments.length);
    },
    replaceWith: function replaceWith() {
      var n = [];
      return Pe(this, arguments, function (e) {
        var t = this.parentNode;
        S.inArray(this, n) < 0 && (S.cleanData(ve(this)), t && t.replaceChild(e, this));
      }, n);
    }
  }), S.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
  }, function (e, a) {
    S.fn[e] = function (e) {
      for (var t, n = [], r = S(e), i = r.length - 1, o = 0; o <= i; o++) {
        t = o === i ? this : this.clone(!0), S(r[o])[a](t), u.apply(n, t.get());
      }

      return this.pushStack(n);
    };
  });

  var Me = new RegExp("^(" + ee + ")(?!px)[a-z%]+$", "i"),
      Ie = function Ie(e) {
    var t = e.ownerDocument.defaultView;
    return t && t.opener || (t = C), t.getComputedStyle(e);
  },
      We = function We(e, t, n) {
    var r,
        i,
        o = {};

    for (i in t) {
      o[i] = e.style[i], e.style[i] = t[i];
    }

    for (i in r = n.call(e), t) {
      e.style[i] = o[i];
    }

    return r;
  },
      Fe = new RegExp(ne.join("|"), "i");

  function Be(e, t, n) {
    var r,
        i,
        o,
        a,
        s = e.style;
    return (n = n || Ie(e)) && ("" !== (a = n.getPropertyValue(t) || n[t]) || ie(e) || (a = S.style(e, t)), !y.pixelBoxStyles() && Me.test(a) && Fe.test(t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0 !== a ? a + "" : a;
  }

  function $e(e, t) {
    return {
      get: function get() {
        if (!e()) return (this.get = t).apply(this, arguments);
        delete this.get;
      }
    };
  }

  !function () {
    function e() {
      if (l) {
        u.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", l.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", re.appendChild(u).appendChild(l);
        var e = C.getComputedStyle(l);
        n = "1%" !== e.top, s = 12 === t(e.marginLeft), l.style.right = "60%", o = 36 === t(e.right), r = 36 === t(e.width), l.style.position = "absolute", i = 12 === t(l.offsetWidth / 3), re.removeChild(u), l = null;
      }
    }

    function t(e) {
      return Math.round(parseFloat(e));
    }

    var n,
        r,
        i,
        o,
        a,
        s,
        u = E.createElement("div"),
        l = E.createElement("div");
    l.style && (l.style.backgroundClip = "content-box", l.cloneNode(!0).style.backgroundClip = "", y.clearCloneStyle = "content-box" === l.style.backgroundClip, S.extend(y, {
      boxSizingReliable: function boxSizingReliable() {
        return e(), r;
      },
      pixelBoxStyles: function pixelBoxStyles() {
        return e(), o;
      },
      pixelPosition: function pixelPosition() {
        return e(), n;
      },
      reliableMarginLeft: function reliableMarginLeft() {
        return e(), s;
      },
      scrollboxSize: function scrollboxSize() {
        return e(), i;
      },
      reliableTrDimensions: function reliableTrDimensions() {
        var e, t, n, r;
        return null == a && (e = E.createElement("table"), t = E.createElement("tr"), n = E.createElement("div"), e.style.cssText = "position:absolute;left:-11111px", t.style.height = "1px", n.style.height = "9px", re.appendChild(e).appendChild(t).appendChild(n), r = C.getComputedStyle(t), a = 3 < parseInt(r.height), re.removeChild(e)), a;
      }
    }));
  }();
  var _e = ["Webkit", "Moz", "ms"],
      ze = E.createElement("div").style,
      Ue = {};

  function Xe(e) {
    var t = S.cssProps[e] || Ue[e];
    return t || (e in ze ? e : Ue[e] = function (e) {
      var t = e[0].toUpperCase() + e.slice(1),
          n = _e.length;

      while (n--) {
        if ((e = _e[n] + t) in ze) return e;
      }
    }(e) || e);
  }

  var Ve = /^(none|table(?!-c[ea]).+)/,
      Ge = /^--/,
      Ye = {
    position: "absolute",
    visibility: "hidden",
    display: "block"
  },
      Qe = {
    letterSpacing: "0",
    fontWeight: "400"
  };

  function Je(e, t, n) {
    var r = te.exec(t);
    return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t;
  }

  function Ke(e, t, n, r, i, o) {
    var a = "width" === t ? 1 : 0,
        s = 0,
        u = 0;
    if (n === (r ? "border" : "content")) return 0;

    for (; a < 4; a += 2) {
      "margin" === n && (u += S.css(e, n + ne[a], !0, i)), r ? ("content" === n && (u -= S.css(e, "padding" + ne[a], !0, i)), "margin" !== n && (u -= S.css(e, "border" + ne[a] + "Width", !0, i))) : (u += S.css(e, "padding" + ne[a], !0, i), "padding" !== n ? u += S.css(e, "border" + ne[a] + "Width", !0, i) : s += S.css(e, "border" + ne[a] + "Width", !0, i));
    }

    return !r && 0 <= o && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5)) || 0), u;
  }

  function Ze(e, t, n) {
    var r = Ie(e),
        i = (!y.boxSizingReliable() || n) && "border-box" === S.css(e, "boxSizing", !1, r),
        o = i,
        a = Be(e, t, r),
        s = "offset" + t[0].toUpperCase() + t.slice(1);

    if (Me.test(a)) {
      if (!n) return a;
      a = "auto";
    }

    return (!y.boxSizingReliable() && i || !y.reliableTrDimensions() && A(e, "tr") || "auto" === a || !parseFloat(a) && "inline" === S.css(e, "display", !1, r)) && e.getClientRects().length && (i = "border-box" === S.css(e, "boxSizing", !1, r), (o = s in e) && (a = e[s])), (a = parseFloat(a) || 0) + Ke(e, t, n || (i ? "border" : "content"), o, r, a) + "px";
  }

  function et(e, t, n, r, i) {
    return new et.prototype.init(e, t, n, r, i);
  }

  S.extend({
    cssHooks: {
      opacity: {
        get: function get(e, t) {
          if (t) {
            var n = Be(e, "opacity");
            return "" === n ? "1" : n;
          }
        }
      }
    },
    cssNumber: {
      animationIterationCount: !0,
      columnCount: !0,
      fillOpacity: !0,
      flexGrow: !0,
      flexShrink: !0,
      fontWeight: !0,
      gridArea: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnStart: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowStart: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0
    },
    cssProps: {},
    style: function style(e, t, n, r) {
      if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
        var i,
            o,
            a,
            s = X(t),
            u = Ge.test(t),
            l = e.style;
        if (u || (t = Xe(s)), a = S.cssHooks[t] || S.cssHooks[s], void 0 === n) return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t];
        "string" === (o = _typeof(n)) && (i = te.exec(n)) && i[1] && (n = se(e, t, i), o = "number"), null != n && n == n && ("number" !== o || u || (n += i && i[3] || (S.cssNumber[s] ? "" : "px")), y.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), a && "set" in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n));
      }
    },
    css: function css(e, t, n, r) {
      var i,
          o,
          a,
          s = X(t);
      return Ge.test(t) || (t = Xe(s)), (a = S.cssHooks[t] || S.cssHooks[s]) && "get" in a && (i = a.get(e, !0, n)), void 0 === i && (i = Be(e, t, r)), "normal" === i && t in Qe && (i = Qe[t]), "" === n || n ? (o = parseFloat(i), !0 === n || isFinite(o) ? o || 0 : i) : i;
    }
  }), S.each(["height", "width"], function (e, u) {
    S.cssHooks[u] = {
      get: function get(e, t, n) {
        if (t) return !Ve.test(S.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? Ze(e, u, n) : We(e, Ye, function () {
          return Ze(e, u, n);
        });
      },
      set: function set(e, t, n) {
        var r,
            i = Ie(e),
            o = !y.scrollboxSize() && "absolute" === i.position,
            a = (o || n) && "border-box" === S.css(e, "boxSizing", !1, i),
            s = n ? Ke(e, u, n, a, i) : 0;
        return a && o && (s -= Math.ceil(e["offset" + u[0].toUpperCase() + u.slice(1)] - parseFloat(i[u]) - Ke(e, u, "border", !1, i) - .5)), s && (r = te.exec(t)) && "px" !== (r[3] || "px") && (e.style[u] = t, t = S.css(e, u)), Je(0, t, s);
      }
    };
  }), S.cssHooks.marginLeft = $e(y.reliableMarginLeft, function (e, t) {
    if (t) return (parseFloat(Be(e, "marginLeft")) || e.getBoundingClientRect().left - We(e, {
      marginLeft: 0
    }, function () {
      return e.getBoundingClientRect().left;
    })) + "px";
  }), S.each({
    margin: "",
    padding: "",
    border: "Width"
  }, function (i, o) {
    S.cssHooks[i + o] = {
      expand: function expand(e) {
        for (var t = 0, n = {}, r = "string" == typeof e ? e.split(" ") : [e]; t < 4; t++) {
          n[i + ne[t] + o] = r[t] || r[t - 2] || r[0];
        }

        return n;
      }
    }, "margin" !== i && (S.cssHooks[i + o].set = Je);
  }), S.fn.extend({
    css: function css(e, t) {
      return $(this, function (e, t, n) {
        var r,
            i,
            o = {},
            a = 0;

        if (Array.isArray(t)) {
          for (r = Ie(e), i = t.length; a < i; a++) {
            o[t[a]] = S.css(e, t[a], !1, r);
          }

          return o;
        }

        return void 0 !== n ? S.style(e, t, n) : S.css(e, t);
      }, e, t, 1 < arguments.length);
    }
  }), ((S.Tween = et).prototype = {
    constructor: et,
    init: function init(e, t, n, r, i, o) {
      this.elem = e, this.prop = n, this.easing = i || S.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (S.cssNumber[n] ? "" : "px");
    },
    cur: function cur() {
      var e = et.propHooks[this.prop];
      return e && e.get ? e.get(this) : et.propHooks._default.get(this);
    },
    run: function run(e) {
      var t,
          n = et.propHooks[this.prop];
      return this.options.duration ? this.pos = t = S.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : et.propHooks._default.set(this), this;
    }
  }).init.prototype = et.prototype, (et.propHooks = {
    _default: {
      get: function get(e) {
        var t;
        return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = S.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0;
      },
      set: function set(e) {
        S.fx.step[e.prop] ? S.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !S.cssHooks[e.prop] && null == e.elem.style[Xe(e.prop)] ? e.elem[e.prop] = e.now : S.style(e.elem, e.prop, e.now + e.unit);
      }
    }
  }).scrollTop = et.propHooks.scrollLeft = {
    set: function set(e) {
      e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
    }
  }, S.easing = {
    linear: function linear(e) {
      return e;
    },
    swing: function swing(e) {
      return .5 - Math.cos(e * Math.PI) / 2;
    },
    _default: "swing"
  }, S.fx = et.prototype.init, S.fx.step = {};
  var tt,
      nt,
      rt,
      it,
      ot = /^(?:toggle|show|hide)$/,
      at = /queueHooks$/;

  function st() {
    nt && (!1 === E.hidden && C.requestAnimationFrame ? C.requestAnimationFrame(st) : C.setTimeout(st, S.fx.interval), S.fx.tick());
  }

  function ut() {
    return C.setTimeout(function () {
      tt = void 0;
    }), tt = Date.now();
  }

  function lt(e, t) {
    var n,
        r = 0,
        i = {
      height: e
    };

    for (t = t ? 1 : 0; r < 4; r += 2 - t) {
      i["margin" + (n = ne[r])] = i["padding" + n] = e;
    }

    return t && (i.opacity = i.width = e), i;
  }

  function ct(e, t, n) {
    for (var r, i = (ft.tweeners[t] || []).concat(ft.tweeners["*"]), o = 0, a = i.length; o < a; o++) {
      if (r = i[o].call(n, t, e)) return r;
    }
  }

  function ft(o, e, t) {
    var n,
        a,
        r = 0,
        i = ft.prefilters.length,
        s = S.Deferred().always(function () {
      delete u.elem;
    }),
        u = function u() {
      if (a) return !1;

      for (var e = tt || ut(), t = Math.max(0, l.startTime + l.duration - e), n = 1 - (t / l.duration || 0), r = 0, i = l.tweens.length; r < i; r++) {
        l.tweens[r].run(n);
      }

      return s.notifyWith(o, [l, n, t]), n < 1 && i ? t : (i || s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l]), !1);
    },
        l = s.promise({
      elem: o,
      props: S.extend({}, e),
      opts: S.extend(!0, {
        specialEasing: {},
        easing: S.easing._default
      }, t),
      originalProperties: e,
      originalOptions: t,
      startTime: tt || ut(),
      duration: t.duration,
      tweens: [],
      createTween: function createTween(e, t) {
        var n = S.Tween(o, l.opts, e, t, l.opts.specialEasing[e] || l.opts.easing);
        return l.tweens.push(n), n;
      },
      stop: function stop(e) {
        var t = 0,
            n = e ? l.tweens.length : 0;
        if (a) return this;

        for (a = !0; t < n; t++) {
          l.tweens[t].run(1);
        }

        return e ? (s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l, e])) : s.rejectWith(o, [l, e]), this;
      }
    }),
        c = l.props;

    for (!function (e, t) {
      var n, r, i, o, a;

      for (n in e) {
        if (i = t[r = X(n)], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = S.cssHooks[r]) && ("expand" in a)) for (n in o = a.expand(o), delete e[r], o) {
          (n in e) || (e[n] = o[n], t[n] = i);
        } else t[r] = i;
      }
    }(c, l.opts.specialEasing); r < i; r++) {
      if (n = ft.prefilters[r].call(l, o, c, l.opts)) return m(n.stop) && (S._queueHooks(l.elem, l.opts.queue).stop = n.stop.bind(n)), n;
    }

    return S.map(c, ct, l), m(l.opts.start) && l.opts.start.call(o, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), S.fx.timer(S.extend(u, {
      elem: o,
      anim: l,
      queue: l.opts.queue
    })), l;
  }

  S.Animation = S.extend(ft, {
    tweeners: {
      "*": [function (e, t) {
        var n = this.createTween(e, t);
        return se(n.elem, e, te.exec(t), n), n;
      }]
    },
    tweener: function tweener(e, t) {
      m(e) ? (t = e, e = ["*"]) : e = e.match(P);

      for (var n, r = 0, i = e.length; r < i; r++) {
        n = e[r], ft.tweeners[n] = ft.tweeners[n] || [], ft.tweeners[n].unshift(t);
      }
    },
    prefilters: [function (e, t, n) {
      var r,
          i,
          o,
          a,
          s,
          u,
          l,
          c,
          f = "width" in t || "height" in t,
          p = this,
          d = {},
          h = e.style,
          g = e.nodeType && ae(e),
          v = Y.get(e, "fxshow");

      for (r in n.queue || (null == (a = S._queueHooks(e, "fx")).unqueued && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function () {
        a.unqueued || s();
      }), a.unqueued++, p.always(function () {
        p.always(function () {
          a.unqueued--, S.queue(e, "fx").length || a.empty.fire();
        });
      })), t) {
        if (i = t[r], ot.test(i)) {
          if (delete t[r], o = o || "toggle" === i, i === (g ? "hide" : "show")) {
            if ("show" !== i || !v || void 0 === v[r]) continue;
            g = !0;
          }

          d[r] = v && v[r] || S.style(e, r);
        }
      }

      if ((u = !S.isEmptyObject(t)) || !S.isEmptyObject(d)) for (r in f && 1 === e.nodeType && (n.overflow = [h.overflow, h.overflowX, h.overflowY], null == (l = v && v.display) && (l = Y.get(e, "display")), "none" === (c = S.css(e, "display")) && (l ? c = l : (le([e], !0), l = e.style.display || l, c = S.css(e, "display"), le([e]))), ("inline" === c || "inline-block" === c && null != l) && "none" === S.css(e, "float") && (u || (p.done(function () {
        h.display = l;
      }), null == l && (c = h.display, l = "none" === c ? "" : c)), h.display = "inline-block")), n.overflow && (h.overflow = "hidden", p.always(function () {
        h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2];
      })), u = !1, d) {
        u || (v ? "hidden" in v && (g = v.hidden) : v = Y.access(e, "fxshow", {
          display: l
        }), o && (v.hidden = !g), g && le([e], !0), p.done(function () {
          for (r in g || le([e]), Y.remove(e, "fxshow"), d) {
            S.style(e, r, d[r]);
          }
        })), u = ct(g ? v[r] : 0, r, p), r in v || (v[r] = u.start, g && (u.end = u.start, u.start = 0));
      }
    }],
    prefilter: function prefilter(e, t) {
      t ? ft.prefilters.unshift(e) : ft.prefilters.push(e);
    }
  }), S.speed = function (e, t, n) {
    var r = e && "object" == _typeof(e) ? S.extend({}, e) : {
      complete: n || !n && t || m(e) && e,
      duration: e,
      easing: n && t || t && !m(t) && t
    };
    return S.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in S.fx.speeds ? r.duration = S.fx.speeds[r.duration] : r.duration = S.fx.speeds._default), null != r.queue && !0 !== r.queue || (r.queue = "fx"), r.old = r.complete, r.complete = function () {
      m(r.old) && r.old.call(this), r.queue && S.dequeue(this, r.queue);
    }, r;
  }, S.fn.extend({
    fadeTo: function fadeTo(e, t, n, r) {
      return this.filter(ae).css("opacity", 0).show().end().animate({
        opacity: t
      }, e, n, r);
    },
    animate: function animate(t, e, n, r) {
      var i = S.isEmptyObject(t),
          o = S.speed(e, n, r),
          a = function a() {
        var e = ft(this, S.extend({}, t), o);
        (i || Y.get(this, "finish")) && e.stop(!0);
      };

      return a.finish = a, i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a);
    },
    stop: function stop(i, e, o) {
      var a = function a(e) {
        var t = e.stop;
        delete e.stop, t(o);
      };

      return "string" != typeof i && (o = e, e = i, i = void 0), e && this.queue(i || "fx", []), this.each(function () {
        var e = !0,
            t = null != i && i + "queueHooks",
            n = S.timers,
            r = Y.get(this);
        if (t) r[t] && r[t].stop && a(r[t]);else for (t in r) {
          r[t] && r[t].stop && at.test(t) && a(r[t]);
        }

        for (t = n.length; t--;) {
          n[t].elem !== this || null != i && n[t].queue !== i || (n[t].anim.stop(o), e = !1, n.splice(t, 1));
        }

        !e && o || S.dequeue(this, i);
      });
    },
    finish: function finish(a) {
      return !1 !== a && (a = a || "fx"), this.each(function () {
        var e,
            t = Y.get(this),
            n = t[a + "queue"],
            r = t[a + "queueHooks"],
            i = S.timers,
            o = n ? n.length : 0;

        for (t.finish = !0, S.queue(this, a, []), r && r.stop && r.stop.call(this, !0), e = i.length; e--;) {
          i[e].elem === this && i[e].queue === a && (i[e].anim.stop(!0), i.splice(e, 1));
        }

        for (e = 0; e < o; e++) {
          n[e] && n[e].finish && n[e].finish.call(this);
        }

        delete t.finish;
      });
    }
  }), S.each(["toggle", "show", "hide"], function (e, r) {
    var i = S.fn[r];

    S.fn[r] = function (e, t, n) {
      return null == e || "boolean" == typeof e ? i.apply(this, arguments) : this.animate(lt(r, !0), e, t, n);
    };
  }), S.each({
    slideDown: lt("show"),
    slideUp: lt("hide"),
    slideToggle: lt("toggle"),
    fadeIn: {
      opacity: "show"
    },
    fadeOut: {
      opacity: "hide"
    },
    fadeToggle: {
      opacity: "toggle"
    }
  }, function (e, r) {
    S.fn[e] = function (e, t, n) {
      return this.animate(r, e, t, n);
    };
  }), S.timers = [], S.fx.tick = function () {
    var e,
        t = 0,
        n = S.timers;

    for (tt = Date.now(); t < n.length; t++) {
      (e = n[t])() || n[t] !== e || n.splice(t--, 1);
    }

    n.length || S.fx.stop(), tt = void 0;
  }, S.fx.timer = function (e) {
    S.timers.push(e), S.fx.start();
  }, S.fx.interval = 13, S.fx.start = function () {
    nt || (nt = !0, st());
  }, S.fx.stop = function () {
    nt = null;
  }, S.fx.speeds = {
    slow: 600,
    fast: 200,
    _default: 400
  }, S.fn.delay = function (r, e) {
    return r = S.fx && S.fx.speeds[r] || r, e = e || "fx", this.queue(e, function (e, t) {
      var n = C.setTimeout(e, r);

      t.stop = function () {
        C.clearTimeout(n);
      };
    });
  }, rt = E.createElement("input"), it = E.createElement("select").appendChild(E.createElement("option")), rt.type = "checkbox", y.checkOn = "" !== rt.value, y.optSelected = it.selected, (rt = E.createElement("input")).value = "t", rt.type = "radio", y.radioValue = "t" === rt.value;
  var pt,
      dt = S.expr.attrHandle;
  S.fn.extend({
    attr: function attr(e, t) {
      return $(this, S.attr, e, t, 1 < arguments.length);
    },
    removeAttr: function removeAttr(e) {
      return this.each(function () {
        S.removeAttr(this, e);
      });
    }
  }), S.extend({
    attr: function attr(e, t, n) {
      var r,
          i,
          o = e.nodeType;
      if (3 !== o && 8 !== o && 2 !== o) return "undefined" == typeof e.getAttribute ? S.prop(e, t, n) : (1 === o && S.isXMLDoc(e) || (i = S.attrHooks[t.toLowerCase()] || (S.expr.match.bool.test(t) ? pt : void 0)), void 0 !== n ? null === n ? void S.removeAttr(e, t) : i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), n) : i && "get" in i && null !== (r = i.get(e, t)) ? r : null == (r = S.find.attr(e, t)) ? void 0 : r);
    },
    attrHooks: {
      type: {
        set: function set(e, t) {
          if (!y.radioValue && "radio" === t && A(e, "input")) {
            var n = e.value;
            return e.setAttribute("type", t), n && (e.value = n), t;
          }
        }
      }
    },
    removeAttr: function removeAttr(e, t) {
      var n,
          r = 0,
          i = t && t.match(P);
      if (i && 1 === e.nodeType) while (n = i[r++]) {
        e.removeAttribute(n);
      }
    }
  }), pt = {
    set: function set(e, t, n) {
      return !1 === t ? S.removeAttr(e, n) : e.setAttribute(n, n), n;
    }
  }, S.each(S.expr.match.bool.source.match(/\w+/g), function (e, t) {
    var a = dt[t] || S.find.attr;

    dt[t] = function (e, t, n) {
      var r,
          i,
          o = t.toLowerCase();
      return n || (i = dt[o], dt[o] = r, r = null != a(e, t, n) ? o : null, dt[o] = i), r;
    };
  });
  var ht = /^(?:input|select|textarea|button)$/i,
      gt = /^(?:a|area)$/i;

  function vt(e) {
    return (e.match(P) || []).join(" ");
  }

  function yt(e) {
    return e.getAttribute && e.getAttribute("class") || "";
  }

  function mt(e) {
    return Array.isArray(e) ? e : "string" == typeof e && e.match(P) || [];
  }

  S.fn.extend({
    prop: function prop(e, t) {
      return $(this, S.prop, e, t, 1 < arguments.length);
    },
    removeProp: function removeProp(e) {
      return this.each(function () {
        delete this[S.propFix[e] || e];
      });
    }
  }), S.extend({
    prop: function prop(e, t, n) {
      var r,
          i,
          o = e.nodeType;
      if (3 !== o && 8 !== o && 2 !== o) return 1 === o && S.isXMLDoc(e) || (t = S.propFix[t] || t, i = S.propHooks[t]), void 0 !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t];
    },
    propHooks: {
      tabIndex: {
        get: function get(e) {
          var t = S.find.attr(e, "tabindex");
          return t ? parseInt(t, 10) : ht.test(e.nodeName) || gt.test(e.nodeName) && e.href ? 0 : -1;
        }
      }
    },
    propFix: {
      "for": "htmlFor",
      "class": "className"
    }
  }), y.optSelected || (S.propHooks.selected = {
    get: function get(e) {
      var t = e.parentNode;
      return t && t.parentNode && t.parentNode.selectedIndex, null;
    },
    set: function set(e) {
      var t = e.parentNode;
      t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
    }
  }), S.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
    S.propFix[this.toLowerCase()] = this;
  }), S.fn.extend({
    addClass: function addClass(t) {
      var e,
          n,
          r,
          i,
          o,
          a,
          s,
          u = 0;
      if (m(t)) return this.each(function (e) {
        S(this).addClass(t.call(this, e, yt(this)));
      });
      if ((e = mt(t)).length) while (n = this[u++]) {
        if (i = yt(n), r = 1 === n.nodeType && " " + vt(i) + " ") {
          a = 0;

          while (o = e[a++]) {
            r.indexOf(" " + o + " ") < 0 && (r += o + " ");
          }

          i !== (s = vt(r)) && n.setAttribute("class", s);
        }
      }
      return this;
    },
    removeClass: function removeClass(t) {
      var e,
          n,
          r,
          i,
          o,
          a,
          s,
          u = 0;
      if (m(t)) return this.each(function (e) {
        S(this).removeClass(t.call(this, e, yt(this)));
      });
      if (!arguments.length) return this.attr("class", "");
      if ((e = mt(t)).length) while (n = this[u++]) {
        if (i = yt(n), r = 1 === n.nodeType && " " + vt(i) + " ") {
          a = 0;

          while (o = e[a++]) {
            while (-1 < r.indexOf(" " + o + " ")) {
              r = r.replace(" " + o + " ", " ");
            }
          }

          i !== (s = vt(r)) && n.setAttribute("class", s);
        }
      }
      return this;
    },
    toggleClass: function toggleClass(i, t) {
      var o = _typeof(i),
          a = "string" === o || Array.isArray(i);

      return "boolean" == typeof t && a ? t ? this.addClass(i) : this.removeClass(i) : m(i) ? this.each(function (e) {
        S(this).toggleClass(i.call(this, e, yt(this), t), t);
      }) : this.each(function () {
        var e, t, n, r;

        if (a) {
          t = 0, n = S(this), r = mt(i);

          while (e = r[t++]) {
            n.hasClass(e) ? n.removeClass(e) : n.addClass(e);
          }
        } else void 0 !== i && "boolean" !== o || ((e = yt(this)) && Y.set(this, "__className__", e), this.setAttribute && this.setAttribute("class", e || !1 === i ? "" : Y.get(this, "__className__") || ""));
      });
    },
    hasClass: function hasClass(e) {
      var t,
          n,
          r = 0;
      t = " " + e + " ";

      while (n = this[r++]) {
        if (1 === n.nodeType && -1 < (" " + vt(yt(n)) + " ").indexOf(t)) return !0;
      }

      return !1;
    }
  });
  var xt = /\r/g;
  S.fn.extend({
    val: function val(n) {
      var r,
          e,
          i,
          t = this[0];
      return arguments.length ? (i = m(n), this.each(function (e) {
        var t;
        1 === this.nodeType && (null == (t = i ? n.call(this, e, S(this).val()) : n) ? t = "" : "number" == typeof t ? t += "" : Array.isArray(t) && (t = S.map(t, function (e) {
          return null == e ? "" : e + "";
        })), (r = S.valHooks[this.type] || S.valHooks[this.nodeName.toLowerCase()]) && "set" in r && void 0 !== r.set(this, t, "value") || (this.value = t));
      })) : t ? (r = S.valHooks[t.type] || S.valHooks[t.nodeName.toLowerCase()]) && "get" in r && void 0 !== (e = r.get(t, "value")) ? e : "string" == typeof (e = t.value) ? e.replace(xt, "") : null == e ? "" : e : void 0;
    }
  }), S.extend({
    valHooks: {
      option: {
        get: function get(e) {
          var t = S.find.attr(e, "value");
          return null != t ? t : vt(S.text(e));
        }
      },
      select: {
        get: function get(e) {
          var t,
              n,
              r,
              i = e.options,
              o = e.selectedIndex,
              a = "select-one" === e.type,
              s = a ? null : [],
              u = a ? o + 1 : i.length;

          for (r = o < 0 ? u : a ? o : 0; r < u; r++) {
            if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !A(n.parentNode, "optgroup"))) {
              if (t = S(n).val(), a) return t;
              s.push(t);
            }
          }

          return s;
        },
        set: function set(e, t) {
          var n,
              r,
              i = e.options,
              o = S.makeArray(t),
              a = i.length;

          while (a--) {
            ((r = i[a]).selected = -1 < S.inArray(S.valHooks.option.get(r), o)) && (n = !0);
          }

          return n || (e.selectedIndex = -1), o;
        }
      }
    }
  }), S.each(["radio", "checkbox"], function () {
    S.valHooks[this] = {
      set: function set(e, t) {
        if (Array.isArray(t)) return e.checked = -1 < S.inArray(S(e).val(), t);
      }
    }, y.checkOn || (S.valHooks[this].get = function (e) {
      return null === e.getAttribute("value") ? "on" : e.value;
    });
  }), y.focusin = "onfocusin" in C;

  var bt = /^(?:focusinfocus|focusoutblur)$/,
      wt = function wt(e) {
    e.stopPropagation();
  };

  S.extend(S.event, {
    trigger: function trigger(e, t, n, r) {
      var i,
          o,
          a,
          s,
          u,
          l,
          c,
          f,
          p = [n || E],
          d = v.call(e, "type") ? e.type : e,
          h = v.call(e, "namespace") ? e.namespace.split(".") : [];

      if (o = f = a = n = n || E, 3 !== n.nodeType && 8 !== n.nodeType && !bt.test(d + S.event.triggered) && (-1 < d.indexOf(".") && (d = (h = d.split(".")).shift(), h.sort()), u = d.indexOf(":") < 0 && "on" + d, (e = e[S.expando] ? e : new S.Event(d, "object" == _typeof(e) && e)).isTrigger = r ? 2 : 3, e.namespace = h.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = n), t = null == t ? [e] : S.makeArray(t, [e]), c = S.event.special[d] || {}, r || !c.trigger || !1 !== c.trigger.apply(n, t))) {
        if (!r && !c.noBubble && !x(n)) {
          for (s = c.delegateType || d, bt.test(s + d) || (o = o.parentNode); o; o = o.parentNode) {
            p.push(o), a = o;
          }

          a === (n.ownerDocument || E) && p.push(a.defaultView || a.parentWindow || C);
        }

        i = 0;

        while ((o = p[i++]) && !e.isPropagationStopped()) {
          f = o, e.type = 1 < i ? s : c.bindType || d, (l = (Y.get(o, "events") || Object.create(null))[e.type] && Y.get(o, "handle")) && l.apply(o, t), (l = u && o[u]) && l.apply && V(o) && (e.result = l.apply(o, t), !1 === e.result && e.preventDefault());
        }

        return e.type = d, r || e.isDefaultPrevented() || c._default && !1 !== c._default.apply(p.pop(), t) || !V(n) || u && m(n[d]) && !x(n) && ((a = n[u]) && (n[u] = null), S.event.triggered = d, e.isPropagationStopped() && f.addEventListener(d, wt), n[d](), e.isPropagationStopped() && f.removeEventListener(d, wt), S.event.triggered = void 0, a && (n[u] = a)), e.result;
      }
    },
    simulate: function simulate(e, t, n) {
      var r = S.extend(new S.Event(), n, {
        type: e,
        isSimulated: !0
      });
      S.event.trigger(r, null, t);
    }
  }), S.fn.extend({
    trigger: function trigger(e, t) {
      return this.each(function () {
        S.event.trigger(e, t, this);
      });
    },
    triggerHandler: function triggerHandler(e, t) {
      var n = this[0];
      if (n) return S.event.trigger(e, t, n, !0);
    }
  }), y.focusin || S.each({
    focus: "focusin",
    blur: "focusout"
  }, function (n, r) {
    var i = function i(e) {
      S.event.simulate(r, e.target, S.event.fix(e));
    };

    S.event.special[r] = {
      setup: function setup() {
        var e = this.ownerDocument || this.document || this,
            t = Y.access(e, r);
        t || e.addEventListener(n, i, !0), Y.access(e, r, (t || 0) + 1);
      },
      teardown: function teardown() {
        var e = this.ownerDocument || this.document || this,
            t = Y.access(e, r) - 1;
        t ? Y.access(e, r, t) : (e.removeEventListener(n, i, !0), Y.remove(e, r));
      }
    };
  });
  var Tt = C.location,
      Ct = {
    guid: Date.now()
  },
      Et = /\?/;

  S.parseXML = function (e) {
    var t;
    if (!e || "string" != typeof e) return null;

    try {
      t = new C.DOMParser().parseFromString(e, "text/xml");
    } catch (e) {
      t = void 0;
    }

    return t && !t.getElementsByTagName("parsererror").length || S.error("Invalid XML: " + e), t;
  };

  var St = /\[\]$/,
      kt = /\r?\n/g,
      At = /^(?:submit|button|image|reset|file)$/i,
      Nt = /^(?:input|select|textarea|keygen)/i;

  function Dt(n, e, r, i) {
    var t;
    if (Array.isArray(e)) S.each(e, function (e, t) {
      r || St.test(n) ? i(n, t) : Dt(n + "[" + ("object" == _typeof(t) && null != t ? e : "") + "]", t, r, i);
    });else if (r || "object" !== w(e)) i(n, e);else for (t in e) {
      Dt(n + "[" + t + "]", e[t], r, i);
    }
  }

  S.param = function (e, t) {
    var n,
        r = [],
        i = function i(e, t) {
      var n = m(t) ? t() : t;
      r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n);
    };

    if (null == e) return "";
    if (Array.isArray(e) || e.jquery && !S.isPlainObject(e)) S.each(e, function () {
      i(this.name, this.value);
    });else for (n in e) {
      Dt(n, e[n], t, i);
    }
    return r.join("&");
  }, S.fn.extend({
    serialize: function serialize() {
      return S.param(this.serializeArray());
    },
    serializeArray: function serializeArray() {
      return this.map(function () {
        var e = S.prop(this, "elements");
        return e ? S.makeArray(e) : this;
      }).filter(function () {
        var e = this.type;
        return this.name && !S(this).is(":disabled") && Nt.test(this.nodeName) && !At.test(e) && (this.checked || !pe.test(e));
      }).map(function (e, t) {
        var n = S(this).val();
        return null == n ? null : Array.isArray(n) ? S.map(n, function (e) {
          return {
            name: t.name,
            value: e.replace(kt, "\r\n")
          };
        }) : {
          name: t.name,
          value: n.replace(kt, "\r\n")
        };
      }).get();
    }
  });
  var jt = /%20/g,
      qt = /#.*$/,
      Lt = /([?&])_=[^&]*/,
      Ht = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      Ot = /^(?:GET|HEAD)$/,
      Pt = /^\/\//,
      Rt = {},
      Mt = {},
      It = "*/".concat("*"),
      Wt = E.createElement("a");

  function Ft(o) {
    return function (e, t) {
      "string" != typeof e && (t = e, e = "*");
      var n,
          r = 0,
          i = e.toLowerCase().match(P) || [];
      if (m(t)) while (n = i[r++]) {
        "+" === n[0] ? (n = n.slice(1) || "*", (o[n] = o[n] || []).unshift(t)) : (o[n] = o[n] || []).push(t);
      }
    };
  }

  function Bt(t, i, o, a) {
    var s = {},
        u = t === Mt;

    function l(e) {
      var r;
      return s[e] = !0, S.each(t[e] || [], function (e, t) {
        var n = t(i, o, a);
        return "string" != typeof n || u || s[n] ? u ? !(r = n) : void 0 : (i.dataTypes.unshift(n), l(n), !1);
      }), r;
    }

    return l(i.dataTypes[0]) || !s["*"] && l("*");
  }

  function $t(e, t) {
    var n,
        r,
        i = S.ajaxSettings.flatOptions || {};

    for (n in t) {
      void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
    }

    return r && S.extend(!0, e, r), e;
  }

  Wt.href = Tt.href, S.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: Tt.href,
      type: "GET",
      isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Tt.protocol),
      global: !0,
      processData: !0,
      async: !0,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",
      accepts: {
        "*": It,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript"
      },
      contents: {
        xml: /\bxml\b/,
        html: /\bhtml/,
        json: /\bjson\b/
      },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON"
      },
      converters: {
        "* text": String,
        "text html": !0,
        "text json": JSON.parse,
        "text xml": S.parseXML
      },
      flatOptions: {
        url: !0,
        context: !0
      }
    },
    ajaxSetup: function ajaxSetup(e, t) {
      return t ? $t($t(e, S.ajaxSettings), t) : $t(S.ajaxSettings, e);
    },
    ajaxPrefilter: Ft(Rt),
    ajaxTransport: Ft(Mt),
    ajax: function ajax(e, t) {
      "object" == _typeof(e) && (t = e, e = void 0), t = t || {};
      var c,
          f,
          p,
          n,
          d,
          r,
          h,
          g,
          i,
          o,
          v = S.ajaxSetup({}, t),
          y = v.context || v,
          m = v.context && (y.nodeType || y.jquery) ? S(y) : S.event,
          x = S.Deferred(),
          b = S.Callbacks("once memory"),
          w = v.statusCode || {},
          a = {},
          s = {},
          u = "canceled",
          T = {
        readyState: 0,
        getResponseHeader: function getResponseHeader(e) {
          var t;

          if (h) {
            if (!n) {
              n = {};

              while (t = Ht.exec(p)) {
                n[t[1].toLowerCase() + " "] = (n[t[1].toLowerCase() + " "] || []).concat(t[2]);
              }
            }

            t = n[e.toLowerCase() + " "];
          }

          return null == t ? null : t.join(", ");
        },
        getAllResponseHeaders: function getAllResponseHeaders() {
          return h ? p : null;
        },
        setRequestHeader: function setRequestHeader(e, t) {
          return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this;
        },
        overrideMimeType: function overrideMimeType(e) {
          return null == h && (v.mimeType = e), this;
        },
        statusCode: function statusCode(e) {
          var t;
          if (e) if (h) T.always(e[T.status]);else for (t in e) {
            w[t] = [w[t], e[t]];
          }
          return this;
        },
        abort: function abort(e) {
          var t = e || u;
          return c && c.abort(t), l(0, t), this;
        }
      };

      if (x.promise(T), v.url = ((e || v.url || Tt.href) + "").replace(Pt, Tt.protocol + "//"), v.type = t.method || t.type || v.method || v.type, v.dataTypes = (v.dataType || "*").toLowerCase().match(P) || [""], null == v.crossDomain) {
        r = E.createElement("a");

        try {
          r.href = v.url, r.href = r.href, v.crossDomain = Wt.protocol + "//" + Wt.host != r.protocol + "//" + r.host;
        } catch (e) {
          v.crossDomain = !0;
        }
      }

      if (v.data && v.processData && "string" != typeof v.data && (v.data = S.param(v.data, v.traditional)), Bt(Rt, v, t, T), h) return T;

      for (i in (g = S.event && v.global) && 0 == S.active++ && S.event.trigger("ajaxStart"), v.type = v.type.toUpperCase(), v.hasContent = !Ot.test(v.type), f = v.url.replace(qt, ""), v.hasContent ? v.data && v.processData && 0 === (v.contentType || "").indexOf("application/x-www-form-urlencoded") && (v.data = v.data.replace(jt, "+")) : (o = v.url.slice(f.length), v.data && (v.processData || "string" == typeof v.data) && (f += (Et.test(f) ? "&" : "?") + v.data, delete v.data), !1 === v.cache && (f = f.replace(Lt, "$1"), o = (Et.test(f) ? "&" : "?") + "_=" + Ct.guid++ + o), v.url = f + o), v.ifModified && (S.lastModified[f] && T.setRequestHeader("If-Modified-Since", S.lastModified[f]), S.etag[f] && T.setRequestHeader("If-None-Match", S.etag[f])), (v.data && v.hasContent && !1 !== v.contentType || t.contentType) && T.setRequestHeader("Content-Type", v.contentType), T.setRequestHeader("Accept", v.dataTypes[0] && v.accepts[v.dataTypes[0]] ? v.accepts[v.dataTypes[0]] + ("*" !== v.dataTypes[0] ? ", " + It + "; q=0.01" : "") : v.accepts["*"]), v.headers) {
        T.setRequestHeader(i, v.headers[i]);
      }

      if (v.beforeSend && (!1 === v.beforeSend.call(y, T, v) || h)) return T.abort();

      if (u = "abort", b.add(v.complete), T.done(v.success), T.fail(v.error), c = Bt(Mt, v, t, T)) {
        if (T.readyState = 1, g && m.trigger("ajaxSend", [T, v]), h) return T;
        v.async && 0 < v.timeout && (d = C.setTimeout(function () {
          T.abort("timeout");
        }, v.timeout));

        try {
          h = !1, c.send(a, l);
        } catch (e) {
          if (h) throw e;
          l(-1, e);
        }
      } else l(-1, "No Transport");

      function l(e, t, n, r) {
        var i,
            o,
            a,
            s,
            u,
            l = t;
        h || (h = !0, d && C.clearTimeout(d), c = void 0, p = r || "", T.readyState = 0 < e ? 4 : 0, i = 200 <= e && e < 300 || 304 === e, n && (s = function (e, t, n) {
          var r,
              i,
              o,
              a,
              s = e.contents,
              u = e.dataTypes;

          while ("*" === u[0]) {
            u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
          }

          if (r) for (i in s) {
            if (s[i] && s[i].test(r)) {
              u.unshift(i);
              break;
            }
          }
          if (u[0] in n) o = u[0];else {
            for (i in n) {
              if (!u[0] || e.converters[i + " " + u[0]]) {
                o = i;
                break;
              }

              a || (a = i);
            }

            o = o || a;
          }
          if (o) return o !== u[0] && u.unshift(o), n[o];
        }(v, T, n)), !i && -1 < S.inArray("script", v.dataTypes) && (v.converters["text script"] = function () {}), s = function (e, t, n, r) {
          var i,
              o,
              a,
              s,
              u,
              l = {},
              c = e.dataTypes.slice();
          if (c[1]) for (a in e.converters) {
            l[a.toLowerCase()] = e.converters[a];
          }
          o = c.shift();

          while (o) {
            if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) if ("*" === o) o = u;else if ("*" !== u && u !== o) {
              if (!(a = l[u + " " + o] || l["* " + o])) for (i in l) {
                if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) {
                  !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1]));
                  break;
                }
              }
              if (!0 !== a) if (a && e["throws"]) t = a(t);else try {
                t = a(t);
              } catch (e) {
                return {
                  state: "parsererror",
                  error: a ? e : "No conversion from " + u + " to " + o
                };
              }
            }
          }

          return {
            state: "success",
            data: t
          };
        }(v, s, T, i), i ? (v.ifModified && ((u = T.getResponseHeader("Last-Modified")) && (S.lastModified[f] = u), (u = T.getResponseHeader("etag")) && (S.etag[f] = u)), 204 === e || "HEAD" === v.type ? l = "nocontent" : 304 === e ? l = "notmodified" : (l = s.state, o = s.data, i = !(a = s.error))) : (a = l, !e && l || (l = "error", e < 0 && (e = 0))), T.status = e, T.statusText = (t || l) + "", i ? x.resolveWith(y, [o, l, T]) : x.rejectWith(y, [T, l, a]), T.statusCode(w), w = void 0, g && m.trigger(i ? "ajaxSuccess" : "ajaxError", [T, v, i ? o : a]), b.fireWith(y, [T, l]), g && (m.trigger("ajaxComplete", [T, v]), --S.active || S.event.trigger("ajaxStop")));
      }

      return T;
    },
    getJSON: function getJSON(e, t, n) {
      return S.get(e, t, n, "json");
    },
    getScript: function getScript(e, t) {
      return S.get(e, void 0, t, "script");
    }
  }), S.each(["get", "post"], function (e, i) {
    S[i] = function (e, t, n, r) {
      return m(t) && (r = r || n, n = t, t = void 0), S.ajax(S.extend({
        url: e,
        type: i,
        dataType: r,
        data: t,
        success: n
      }, S.isPlainObject(e) && e));
    };
  }), S.ajaxPrefilter(function (e) {
    var t;

    for (t in e.headers) {
      "content-type" === t.toLowerCase() && (e.contentType = e.headers[t] || "");
    }
  }), S._evalUrl = function (e, t, n) {
    return S.ajax({
      url: e,
      type: "GET",
      dataType: "script",
      cache: !0,
      async: !1,
      global: !1,
      converters: {
        "text script": function textScript() {}
      },
      dataFilter: function dataFilter(e) {
        S.globalEval(e, t, n);
      }
    });
  }, S.fn.extend({
    wrapAll: function wrapAll(e) {
      var t;
      return this[0] && (m(e) && (e = e.call(this[0])), t = S(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map(function () {
        var e = this;

        while (e.firstElementChild) {
          e = e.firstElementChild;
        }

        return e;
      }).append(this)), this;
    },
    wrapInner: function wrapInner(n) {
      return m(n) ? this.each(function (e) {
        S(this).wrapInner(n.call(this, e));
      }) : this.each(function () {
        var e = S(this),
            t = e.contents();
        t.length ? t.wrapAll(n) : e.append(n);
      });
    },
    wrap: function wrap(t) {
      var n = m(t);
      return this.each(function (e) {
        S(this).wrapAll(n ? t.call(this, e) : t);
      });
    },
    unwrap: function unwrap(e) {
      return this.parent(e).not("body").each(function () {
        S(this).replaceWith(this.childNodes);
      }), this;
    }
  }), S.expr.pseudos.hidden = function (e) {
    return !S.expr.pseudos.visible(e);
  }, S.expr.pseudos.visible = function (e) {
    return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);
  }, S.ajaxSettings.xhr = function () {
    try {
      return new C.XMLHttpRequest();
    } catch (e) {}
  };
  var _t = {
    0: 200,
    1223: 204
  },
      zt = S.ajaxSettings.xhr();
  y.cors = !!zt && "withCredentials" in zt, y.ajax = zt = !!zt, S.ajaxTransport(function (i) {
    var _o, a;

    if (y.cors || zt && !i.crossDomain) return {
      send: function send(e, t) {
        var n,
            r = i.xhr();
        if (r.open(i.type, i.url, i.async, i.username, i.password), i.xhrFields) for (n in i.xhrFields) {
          r[n] = i.xhrFields[n];
        }

        for (n in i.mimeType && r.overrideMimeType && r.overrideMimeType(i.mimeType), i.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"), e) {
          r.setRequestHeader(n, e[n]);
        }

        _o = function o(e) {
          return function () {
            _o && (_o = a = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null, "abort" === e ? r.abort() : "error" === e ? "number" != typeof r.status ? t(0, "error") : t(r.status, r.statusText) : t(_t[r.status] || r.status, r.statusText, "text" !== (r.responseType || "text") || "string" != typeof r.responseText ? {
              binary: r.response
            } : {
              text: r.responseText
            }, r.getAllResponseHeaders()));
          };
        }, r.onload = _o(), a = r.onerror = r.ontimeout = _o("error"), void 0 !== r.onabort ? r.onabort = a : r.onreadystatechange = function () {
          4 === r.readyState && C.setTimeout(function () {
            _o && a();
          });
        }, _o = _o("abort");

        try {
          r.send(i.hasContent && i.data || null);
        } catch (e) {
          if (_o) throw e;
        }
      },
      abort: function abort() {
        _o && _o();
      }
    };
  }), S.ajaxPrefilter(function (e) {
    e.crossDomain && (e.contents.script = !1);
  }), S.ajaxSetup({
    accepts: {
      script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
    },
    contents: {
      script: /\b(?:java|ecma)script\b/
    },
    converters: {
      "text script": function textScript(e) {
        return S.globalEval(e), e;
      }
    }
  }), S.ajaxPrefilter("script", function (e) {
    void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET");
  }), S.ajaxTransport("script", function (n) {
    var r, _i;

    if (n.crossDomain || n.scriptAttrs) return {
      send: function send(e, t) {
        r = S("<script>").attr(n.scriptAttrs || {}).prop({
          charset: n.scriptCharset,
          src: n.url
        }).on("load error", _i = function i(e) {
          r.remove(), _i = null, e && t("error" === e.type ? 404 : 200, e.type);
        }), E.head.appendChild(r[0]);
      },
      abort: function abort() {
        _i && _i();
      }
    };
  });
  var Ut,
      Xt = [],
      Vt = /(=)\?(?=&|$)|\?\?/;
  S.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function jsonpCallback() {
      var e = Xt.pop() || S.expando + "_" + Ct.guid++;
      return this[e] = !0, e;
    }
  }), S.ajaxPrefilter("json jsonp", function (e, t, n) {
    var r,
        i,
        o,
        a = !1 !== e.jsonp && (Vt.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Vt.test(e.data) && "data");
    if (a || "jsonp" === e.dataTypes[0]) return r = e.jsonpCallback = m(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, a ? e[a] = e[a].replace(Vt, "$1" + r) : !1 !== e.jsonp && (e.url += (Et.test(e.url) ? "&" : "?") + e.jsonp + "=" + r), e.converters["script json"] = function () {
      return o || S.error(r + " was not called"), o[0];
    }, e.dataTypes[0] = "json", i = C[r], C[r] = function () {
      o = arguments;
    }, n.always(function () {
      void 0 === i ? S(C).removeProp(r) : C[r] = i, e[r] && (e.jsonpCallback = t.jsonpCallback, Xt.push(r)), o && m(i) && i(o[0]), o = i = void 0;
    }), "script";
  }), y.createHTMLDocument = ((Ut = E.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 2 === Ut.childNodes.length), S.parseHTML = function (e, t, n) {
    return "string" != typeof e ? [] : ("boolean" == typeof t && (n = t, t = !1), t || (y.createHTMLDocument ? ((r = (t = E.implementation.createHTMLDocument("")).createElement("base")).href = E.location.href, t.head.appendChild(r)) : t = E), o = !n && [], (i = N.exec(e)) ? [t.createElement(i[1])] : (i = xe([e], t, o), o && o.length && S(o).remove(), S.merge([], i.childNodes)));
    var r, i, o;
  }, S.fn.load = function (e, t, n) {
    var r,
        i,
        o,
        a = this,
        s = e.indexOf(" ");
    return -1 < s && (r = vt(e.slice(s)), e = e.slice(0, s)), m(t) ? (n = t, t = void 0) : t && "object" == _typeof(t) && (i = "POST"), 0 < a.length && S.ajax({
      url: e,
      type: i || "GET",
      dataType: "html",
      data: t
    }).done(function (e) {
      o = arguments, a.html(r ? S("<div>").append(S.parseHTML(e)).find(r) : e);
    }).always(n && function (e, t) {
      a.each(function () {
        n.apply(this, o || [e.responseText, t, e]);
      });
    }), this;
  }, S.expr.pseudos.animated = function (t) {
    return S.grep(S.timers, function (e) {
      return t === e.elem;
    }).length;
  }, S.offset = {
    setOffset: function setOffset(e, t, n) {
      var r,
          i,
          o,
          a,
          s,
          u,
          l = S.css(e, "position"),
          c = S(e),
          f = {};
      "static" === l && (e.style.position = "relative"), s = c.offset(), o = S.css(e, "top"), u = S.css(e, "left"), ("absolute" === l || "fixed" === l) && -1 < (o + u).indexOf("auto") ? (a = (r = c.position()).top, i = r.left) : (a = parseFloat(o) || 0, i = parseFloat(u) || 0), m(t) && (t = t.call(e, n, S.extend({}, s))), null != t.top && (f.top = t.top - s.top + a), null != t.left && (f.left = t.left - s.left + i), "using" in t ? t.using.call(e, f) : ("number" == typeof f.top && (f.top += "px"), "number" == typeof f.left && (f.left += "px"), c.css(f));
    }
  }, S.fn.extend({
    offset: function offset(t) {
      if (arguments.length) return void 0 === t ? this : this.each(function (e) {
        S.offset.setOffset(this, t, e);
      });
      var e,
          n,
          r = this[0];
      return r ? r.getClientRects().length ? (e = r.getBoundingClientRect(), n = r.ownerDocument.defaultView, {
        top: e.top + n.pageYOffset,
        left: e.left + n.pageXOffset
      }) : {
        top: 0,
        left: 0
      } : void 0;
    },
    position: function position() {
      if (this[0]) {
        var e,
            t,
            n,
            r = this[0],
            i = {
          top: 0,
          left: 0
        };
        if ("fixed" === S.css(r, "position")) t = r.getBoundingClientRect();else {
          t = this.offset(), n = r.ownerDocument, e = r.offsetParent || n.documentElement;

          while (e && (e === n.body || e === n.documentElement) && "static" === S.css(e, "position")) {
            e = e.parentNode;
          }

          e && e !== r && 1 === e.nodeType && ((i = S(e).offset()).top += S.css(e, "borderTopWidth", !0), i.left += S.css(e, "borderLeftWidth", !0));
        }
        return {
          top: t.top - i.top - S.css(r, "marginTop", !0),
          left: t.left - i.left - S.css(r, "marginLeft", !0)
        };
      }
    },
    offsetParent: function offsetParent() {
      return this.map(function () {
        var e = this.offsetParent;

        while (e && "static" === S.css(e, "position")) {
          e = e.offsetParent;
        }

        return e || re;
      });
    }
  }), S.each({
    scrollLeft: "pageXOffset",
    scrollTop: "pageYOffset"
  }, function (t, i) {
    var o = "pageYOffset" === i;

    S.fn[t] = function (e) {
      return $(this, function (e, t, n) {
        var r;
        if (x(e) ? r = e : 9 === e.nodeType && (r = e.defaultView), void 0 === n) return r ? r[i] : e[t];
        r ? r.scrollTo(o ? r.pageXOffset : n, o ? n : r.pageYOffset) : e[t] = n;
      }, t, e, arguments.length);
    };
  }), S.each(["top", "left"], function (e, n) {
    S.cssHooks[n] = $e(y.pixelPosition, function (e, t) {
      if (t) return t = Be(e, n), Me.test(t) ? S(e).position()[n] + "px" : t;
    });
  }), S.each({
    Height: "height",
    Width: "width"
  }, function (a, s) {
    S.each({
      padding: "inner" + a,
      content: s,
      "": "outer" + a
    }, function (r, o) {
      S.fn[o] = function (e, t) {
        var n = arguments.length && (r || "boolean" != typeof e),
            i = r || (!0 === e || !0 === t ? "margin" : "border");
        return $(this, function (e, t, n) {
          var r;
          return x(e) ? 0 === o.indexOf("outer") ? e["inner" + a] : e.document.documentElement["client" + a] : 9 === e.nodeType ? (r = e.documentElement, Math.max(e.body["scroll" + a], r["scroll" + a], e.body["offset" + a], r["offset" + a], r["client" + a])) : void 0 === n ? S.css(e, t, i) : S.style(e, t, n, i);
        }, s, n ? e : void 0, n);
      };
    });
  }), S.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) {
    S.fn[t] = function (e) {
      return this.on(t, e);
    };
  }), S.fn.extend({
    bind: function bind(e, t, n) {
      return this.on(e, null, t, n);
    },
    unbind: function unbind(e, t) {
      return this.off(e, null, t);
    },
    delegate: function delegate(e, t, n, r) {
      return this.on(t, e, n, r);
    },
    undelegate: function undelegate(e, t, n) {
      return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n);
    },
    hover: function hover(e, t) {
      return this.mouseenter(e).mouseleave(t || e);
    }
  }), S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (e, n) {
    S.fn[n] = function (e, t) {
      return 0 < arguments.length ? this.on(n, null, e, t) : this.trigger(n);
    };
  });
  var Gt = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
  S.proxy = function (e, t) {
    var n, r, i;
    if ("string" == typeof t && (n = e[t], t = e, e = n), m(e)) return r = s.call(arguments, 2), (i = function i() {
      return e.apply(t || this, r.concat(s.call(arguments)));
    }).guid = e.guid = e.guid || S.guid++, i;
  }, S.holdReady = function (e) {
    e ? S.readyWait++ : S.ready(!0);
  }, S.isArray = Array.isArray, S.parseJSON = JSON.parse, S.nodeName = A, S.isFunction = m, S.isWindow = x, S.camelCase = X, S.type = w, S.now = Date.now, S.isNumeric = function (e) {
    var t = S.type(e);
    return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e));
  }, S.trim = function (e) {
    return null == e ? "" : (e + "").replace(Gt, "");
  }, "function" == typeof define && define.amd && define("jquery", [], function () {
    return S;
  });
  var Yt = C.jQuery,
      Qt = C.$;
  return S.noConflict = function (e) {
    return C.$ === S && (C.$ = Qt), e && C.jQuery === S && (C.jQuery = Yt), S;
  }, "undefined" == typeof e && (C.jQuery = C.$ = S), S;
});

(function (c) {
  function g(a) {
    var b = a || window.event,
        i = [].slice.call(arguments, 1),
        e = 0,
        h = 0,
        f = 0;
    a = c.event.fix(b);
    a.type = "mousewheel";
    if (b.wheelDelta) e = b.wheelDelta / 120;
    if (b.detail) e = -b.detail / 3;
    f = e;

    if (b.axis !== undefined && b.axis === b.HORIZONTAL_AXIS) {
      f = 0;
      h = -1 * e;
    }

    if (b.wheelDeltaY !== undefined) f = b.wheelDeltaY / 120;
    if (b.wheelDeltaX !== undefined) h = -1 * b.wheelDeltaX / 120;
    i.unshift(a, e, h, f);
    return (c.event.dispatch || c.event.handle).apply(this, i);
  }

  var d = ["DOMMouseScroll", "mousewheel"];
  if (c.event.fixHooks) for (var j = d.length; j;) {
    c.event.fixHooks[d[--j]] = c.event.mouseHooks;
  }
  c.event.special.mousewheel = {
    setup: function setup() {
      if (this.addEventListener) for (var a = d.length; a;) {
        this.addEventListener(d[--a], g, false);
      } else this.onmousewheel = g;
    },
    teardown: function teardown() {
      if (this.removeEventListener) for (var a = d.length; a;) {
        this.removeEventListener(d[--a], g, false);
      } else this.onmousewheel = null;
    }
  };
  c.fn.extend({
    mousewheel: function mousewheel(a) {
      return a ? this.bind("mousewheel", a) : this.trigger("mousewheel");
    },
    unmousewheel: function unmousewheel(a) {
      return this.unbind("mousewheel", a);
    }
  });
})(jQuery);

(function (e) {
  var m = function m() {
    if (!m.cache.hasOwnProperty(arguments[0])) {
      m.cache[arguments[0]] = m.parse(arguments[0]);
    }

    return m.format.call(null, m.cache[arguments[0]], arguments);
  };

  m.format = function (e, t) {
    var n = 1,
        r = e.length,
        i = "",
        a,
        o = [],
        u,
        s,
        l,
        f,
        c,
        p;

    for (u = 0; u < r; u++) {
      i = d(e[u]);

      if (i === "string") {
        o.push(e[u]);
      } else if (i === "array") {
        l = e[u];

        if (l[2]) {
          a = t[n];

          for (s = 0; s < l[2].length; s++) {
            if (!a.hasOwnProperty(l[2][s])) {
              throw m('[sprintf] property "%s" does not exist', l[2][s]);
            }

            a = a[l[2][s]];
          }
        } else if (l[1]) {
          a = t[l[1]];
        } else {
          a = t[n++];
        }

        if (/[^s]/.test(l[8]) && d(a) !== "number") {
          throw m("[sprintf] expecting number but found %s", d(a));
        }

        switch (l[8]) {
          case "b":
            a = a.toString(2);
            break;

          case "c":
            a = String.fromCharCode(a);
            break;

          case "d":
            a = parseInt(a, 10);
            break;

          case "e":
            a = l[7] ? a.toExponential(l[7]) : a.toExponential();
            break;

          case "f":
            a = l[7] ? parseFloat(a).toFixed(l[7]) : parseFloat(a);
            break;

          case "o":
            a = a.toString(8);
            break;

          case "s":
            a = (a = String(a)) && l[7] ? a.slice(0, l[7]) : a;
            break;

          case "u":
            a = a >>> 0;
            break;

          case "x":
            a = a.toString(16);
            break;

          case "X":
            a = a.toString(16).toUpperCase();
            break;
        }

        a = /[def]/.test(l[8]) && l[3] && a >= 0 ? " +" + a : a;
        c = l[4] ? l[4] === "0" ? "0" : l[4].charAt(1) : " ";
        p = l[6] - String(a).length;
        f = l[6] ? h(c, p) : "";
        o.push(l[5] ? a + f : f + a);
      }
    }

    return o.join("");
  };

  m.cache = {};

  m.parse = function (e) {
    var t = e,
        n = [],
        r = [],
        i = 0;

    while (t) {
      if ((n = /^[^\x25]+/.exec(t)) !== null) {
        r.push(n[0]);
      } else if ((n = /^\x25{2}/.exec(t)) !== null) {
        r.push("%");
      } else if ((n = /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(t)) !== null) {
        if (n[2]) {
          i |= 1;
          var a = [],
              o = n[2],
              u = [];

          if ((u = /^([a-z_][a-z_\d]*)/i.exec(o)) !== null) {
            a.push(u[1]);

            while ((o = o.slice(u[0].length)) !== "") {
              if ((u = /^\.([a-z_][a-z_\d]*)/i.exec(o)) !== null) {
                a.push(u[1]);
              } else if ((u = /^\[(\d+)\]/.exec(o)) !== null) {
                a.push(u[1]);
              } else {
                throw "[sprintf] huh?";
              }
            }
          } else {
            throw "[sprintf] huh?";
          }

          n[2] = a;
        } else {
          i |= 2;
        }

        if (i === 3) {
          throw "[sprintf] mixing positional and named placeholders is not (yet) supported";
        }

        r.push(n);
      } else {
        throw "[sprintf] huh?";
      }

      t = t.slice(n[0].length);
    }

    return r;
  };

  var t = function t(e, _t3, n) {
    n = _t3.slice(0);
    n.splice(0, 0, e);
    return m.apply(null, n);
  };

  function d(e) {
    return Object.prototype.toString.call(e).slice(8, -1).toLowerCase();
  }

  function h(e, t) {
    for (var n = []; t > 0; n[--t] = e) {}

    return n.join("");
  }

  e.sprintf = m;
  e.vsprintf = t;
})(typeof global !== "undefined" ? global : window);

(function (r, i) {
  var n = typeof window !== "undefined" ? window : global;

  if (typeof define === "function" && define.amd) {
    define(["jquery", "wcwidth"], function (e, t) {
      r(e, t, n);
      return e;
    });
  } else if ((typeof module === "undefined" ? "undefined" : _typeof(module)) === "object" && module.exports) {
    module.exports = function (e, t, n) {
      if (t === i) {
        if (window !== i) {
          t = require("jquery");
        } else {
          t = require("jquery")(e);
        }
      }

      if (n === i) {
        n = require("wcwidth");
      }

      r(t, n, e);
      return t;
    };
  } else {
    r(n.jQuery, n.wcwidth, n);
  }
})(function ($, wcwidth, root, undefined) {
  "use strict";

  function debug(e) {
    if (false) {
      console.log(e);
    }
  }

  function DelayQueue() {
    var t = $.Callbacks();
    var n = false;

    this.resolve = function () {
      t.fire();
      n = true;
    };

    this.add = function (e) {
      if (n) {
        e();
      } else {
        t.add(e);
      }
    };
  }

  $.omap = function (n, r) {
    var i = {};
    $.each(n, function (e, t) {
      i[e] = r.call(n, e, t);
    });
    return i;
  };

  $.fn.text_length = function () {
    return this.map(function () {
      return $(this).text().length;
    }).get().reduce(function (e, t) {
      return e + t;
    }, 0);
  };

  var Clone = {
    clone_object: function clone_object(e) {
      var t = {};

      if (_typeof(e) === "object") {
        if ($.isArray(e)) {
          return this.clone_array(e);
        } else if (e === null) {
          return e;
        } else {
          for (var n in e) {
            if ($.isArray(e[n])) {
              t[n] = this.clone_array(e[n]);
            } else if (_typeof(e[n]) === "object") {
              t[n] = this.clone_object(e[n]);
            } else {
              t[n] = e[n];
            }
          }
        }
      }

      return t;
    },
    clone_array: function clone_array(e) {
      if (!is_function(Array.prototype.map)) {
        throw new Error("Your browser don't support ES5 array map " + "use es5-shim");
      }

      return e.slice(0).map(function (e) {
        if (_typeof(e) === "object") {
          return this.clone_object(e);
        } else {
          return e;
        }
      }.bind(this));
    }
  };

  var clone = function clone(e) {
    return Clone.clone_object(e);
  };

  if (!("clear" in Map.prototype)) {
    Map.prototype.clear = function () {
      this.forEach(function (e, t, n) {
        n["delete"](t);
      });
    };
  }

  var localStorage;

  (function () {
    var e = function e() {
      try {
        var e = "test",
            t = window.localStorage;
        t.setItem(e, "1");
        t.removeItem(e);
        return true;
      } catch (e) {
        return false;
      }
    };

    var t = function t() {
      try {
        document.cookie.split(";");
        return true;
      } catch (e) {
        return false;
      }
    };

    var n = e();

    function r(e, t) {
      var n;

      if (typeof e === "string" && typeof t === "string") {
        localStorage[e] = t;
        return true;
      } else if (_typeof(e) === "object" && typeof t === "undefined") {
        for (n in e) {
          if (e.hasOwnProperty(n)) {
            localStorage[n] = e[n];
          }
        }

        return true;
      }

      return false;
    }

    function i(e, t) {
      var n, r, i;
      n = new Date();
      n.setTime(n.getTime() + 31536e6);
      r = "; expires=" + n.toGMTString();

      if (typeof e === "string" && typeof t === "string") {
        document.cookie = e + "=" + t + r + "; path=/";
        return true;
      } else if (_typeof(e) === "object" && typeof t === "undefined") {
        for (i in e) {
          if (e.hasOwnProperty(i)) {
            document.cookie = i + "=" + e[i] + r + "; path=/";
          }
        }

        return true;
      }

      return false;
    }

    function a(e) {
      return localStorage[e];
    }

    function o(e) {
      var t, n, r, i;
      t = e + "=";
      n = document.cookie.split(";");

      for (r = 0; r < n.length; r++) {
        i = n[r];

        while (i.charAt(0) === " ") {
          i = i.slice(1, i.length);
        }

        if (i.indexOf(t) === 0) {
          return i.slice(t.length, i.length);
        }
      }

      return null;
    }

    function u(e) {
      return delete localStorage[e];
    }

    function s(e) {
      return i(e, "", -1);
    }

    if (!t() && !n) {
      localStorage = {};
      $.extend({
        Storage: {
          set: r,
          get: a,
          remove: u
        }
      });
    } else {
      if (n) {
        localStorage = window.localStorage;
      }

      $.extend({
        Storage: {
          set: n ? r : i,
          get: n ? a : o,
          remove: n ? u : s
        }
      });
    }
  })();

  var debounce = function () {
    var x = "Expected a function";

    function F(e) {
      var t = _typeof(e);

      return e != null && (t == "object" || t == "function");
    }

    function $() {
      return Date.now();
    }

    return function e(r, i, t) {
      var n = Math.max,
          a = Math.min;
      var o,
          u,
          s,
          l,
          f,
          c,
          p = 0,
          m = false,
          d = false,
          h = true;

      if (typeof r != "function") {
        throw new TypeError(x);
      }

      i = i || 0;

      if (F(t)) {
        m = !!t.leading;
        d = "maxWait" in t;
        s = d ? n(t.maxWait || 0, i) : s;
        h = "trailing" in t ? !!t.trailing : h;
      }

      function D(e) {
        var t = o,
            n = u;
        o = u = undefined;
        p = e;
        l = r.apply(n, t);
        return l;
      }

      function v(e) {
        p = e;
        f = setTimeout(y, i);
        return m ? D(e) : l;
      }

      function g(e) {
        var t = e - c,
            n = e - p,
            r = i - t;
        return d ? a(r, s - n) : r;
      }

      function _(e) {
        var t = e - c,
            n = e - p;
        return c === undefined || t >= i || t < 0 || d && n >= s;
      }

      function y() {
        var e = $();

        if (_(e)) {
          return b(e);
        }

        f = setTimeout(y, g(e));
      }

      function b(e) {
        f = undefined;

        if (h && o) {
          return D(e);
        }

        o = u = undefined;
        return l;
      }

      function w() {
        if (f !== undefined) {
          clearTimeout(f);
        }

        p = 0;
        o = c = u = f = undefined;
      }

      function C() {
        return f === undefined ? l : b($());
      }

      function E() {
        var e = $(),
            t = _(e);

        o = arguments;
        u = this;
        c = e;

        if (t) {
          if (f === undefined) {
            return v(c);
          }

          if (d) {
            f = setTimeout(y, i);
            return D(c);
          }
        }

        if (f === undefined) {
          f = setTimeout(y, i);
        }

        return l;
      }

      E.cancel = w;
      E.flush = C;
      return E;
    };
  }();

  var jQuery = $;

  (function (e) {
    jQuery.fn.extend({
      everyTime: function everyTime(e, t, n, r, i) {
        return this.each(function () {
          jQuery.timer.add(this, e, t, n, r, i);
        });
      },
      oneTime: function oneTime(e, t, n) {
        return this.each(function () {
          jQuery.timer.add(this, e, t, n, 1);
        });
      },
      stopTime: function stopTime(e, t) {
        return this.each(function () {
          jQuery.timer.remove(this, e, t);
        });
      }
    });
    jQuery.extend({
      timer: {
        guid: 1,
        global: {},
        regex: /^([0-9]+)\s*(.*s)?$/,
        powers: {
          ms: 1,
          cs: 10,
          ds: 100,
          s: 1e3,
          das: 1e4,
          hs: 1e5,
          ks: 1e6
        },
        timeParse: function timeParse(e) {
          if (e === undefined || e === null) {
            return null;
          }

          var t = this.regex.exec(jQuery.trim(e.toString()));

          if (t[2]) {
            var n = parseInt(t[1], 10);
            var r = this.powers[t[2]] || 1;
            return n * r;
          } else {
            return e;
          }
        },
        add: function add(e, t, n, r, i, a) {
          var o = 0;

          if (jQuery.isFunction(n)) {
            if (!i) {
              i = r;
            }

            r = n;
            n = t;
          }

          t = jQuery.timer.timeParse(t);

          if (typeof t !== "number" || isNaN(t) || t <= 0) {
            return;
          }

          if (i && i.constructor !== Number) {
            a = !!i;
            i = 0;
          }

          i = i || 0;
          a = a || false;

          if (!e.$timers) {
            e.$timers = {};
          }

          if (!e.$timers[n]) {
            e.$timers[n] = {};
          }

          r.$timerID = r.$timerID || this.guid++;

          var u = function u() {
            if (a && u.inProgress) {
              return;
            }

            u.inProgress = true;

            if (++o > i && i !== 0 || r.call(e, o) === false) {
              jQuery.timer.remove(e, n, r);
            }

            u.inProgress = false;
          };

          u.$timerID = r.$timerID;

          if (!e.$timers[n][r.$timerID]) {
            e.$timers[n][r.$timerID] = window.setInterval(u, t);
          }

          if (!this.global[n]) {
            this.global[n] = [];
          }

          this.global[n].push(e);
        },
        remove: function remove(e, t, n) {
          var r = e.$timers,
              i;

          if (r) {
            if (!t) {
              for (var a in r) {
                if (r.hasOwnProperty(a)) {
                  this.remove(e, a, n);
                }
              }
            } else if (r[t]) {
              if (n) {
                if (n.$timerID) {
                  window.clearInterval(r[t][n.$timerID]);
                  delete r[t][n.$timerID];
                }
              } else {
                for (var o in r[t]) {
                  if (r[t].hasOwnProperty(o)) {
                    window.clearInterval(r[t][o]);
                    delete r[t][o];
                  }
                }
              }

              for (i in r[t]) {
                if (r[t].hasOwnProperty(i)) {
                  break;
                }
              }

              if (!i) {
                i = null;
                delete r[t];
              }
            }

            for (i in r) {
              if (r.hasOwnProperty(i)) {
                break;
              }
            }

            if (!i) {
              e.$timers = null;
            }
          }
        }
      }
    });

    if (/(msie) ([\w.]+)/.exec(navigator.userAgent.toLowerCase())) {
      e(window).one("unload", function () {
        var e = jQuery.timer.global;

        for (var t in e) {
          if (e.hasOwnProperty(t)) {
            var n = e[t],
                r = n.length;

            while (--r) {
              jQuery.timer.remove(n[r], t);
            }
          }
        }
      });
    }
  })(jQuery);

  (function (f) {
    if (!String.prototype.split.toString().match(/\[native/)) {
      return;
    }

    var c = String.prototype.split,
        p = /()??/.exec("")[1] === f,
        n;

    n = function n(e, t, _n) {
      if (Object.prototype.toString.call(t) !== "[object RegExp]") {
        return c.call(e, t, _n);
      }

      var r = [],
          i = (t.ignoreCase ? "i" : "") + (t.multiline ? "m" : "") + (t.extended ? "x" : "") + (t.sticky ? "y" : ""),
          a = 0,
          o,
          u,
          s,
          l;
      t = new RegExp(t.source, i + "g");
      e += "";

      if (!p) {
        o = new RegExp("^" + t.source + "$(?!\\s)", i);
      }

      _n = _n === f ? -1 >>> 0 : _n >>> 0;

      while (u = t.exec(e)) {
        s = u.index + u[0].length;

        if (s > a) {
          r.push(e.slice(a, u.index));

          if (!p && u.length > 1) {
            u[0].replace(o, function () {
              for (var e = 1; e < arguments.length - 2; e++) {
                if (arguments[e] === f) {
                  u[e] = f;
                }
              }
            });
          }

          if (u.length > 1 && u.index < e.length) {
            Array.prototype.push.apply(r, u.slice(1));
          }

          l = u[0].length;
          a = s;

          if (r.length >= _n) {
            break;
          }
        }

        if (t.lastIndex === u.index) {
          t.lastIndex++;
        }
      }

      if (a === e.length) {
        if (l || !t.test("")) {
          r.push("");
        }
      } else {
        r.push(e.slice(a));
      }

      return r.length > _n ? r.slice(0, _n) : r;
    };

    String.prototype.split = function (e, t) {
      return n(this, e, t);
    };

    return n;
  })();

  $.fn.caret = function (e) {
    var t = this[0];
    var n = t.contentEditable === "true";

    if (arguments.length === 0) {
      if (window.getSelection) {
        if (n) {
          t.focus();
          var r = window.getSelection().getRangeAt(0),
              i = r.cloneRange();
          i.selectNodeContents(t);
          i.setEnd(r.endContainer, r.endOffset);
          return i.toString().length;
        }

        return t.selectionStart;
      }

      if (document.selection) {
        t.focus();

        if (n) {
          var r = document.selection.createRange(),
              i = document.body.createTextRange();
          i.moveToElementText(t);
          i.setEndPoint("EndToEnd", r);
          return i.text.length;
        }

        var e = 0,
            a = t.createTextRange(),
            i = document.selection.createRange().duplicate(),
            o = i.getBookmark();
        a.moveToBookmark(o);

        while (a.moveStart("character", -1) !== 0) {
          e++;
        }

        return e;
      }

      return 0;
    }

    if (e === -1) e = this[n ? "text" : "val"]().length;

    if (window.getSelection) {
      if (n) {
        t.focus();
        window.getSelection().collapse(t.firstChild, e);
      } else t.setSelectionRange(e, e);
    } else if (document.body.createTextRange) {
      var a = document.body.createTextRange();
      a.moveToElementText(t);
      a.moveStart("character", e);
      a.collapse(true);
      a.select();
    }

    if (!n && !this.is(":focus")) {
      t.focus();
    }

    return e;
  };

  $.fn.resizer = function (u, e) {
    var s = $.extend({}, {
      prefix: ""
    }, e);
    var l = arguments.length === 0;
    var f = arguments[0] === "unbind";

    if (!l && !f && !is_function(u)) {
      throw new Error("Invalid argument, it need to a function or string " + '"unbind" or no arguments.');
    }

    if (f) {
      u = is_function(arguments[1]) ? arguments[1] : null;
    }

    return this.each(function () {
      var e = $(this);
      var t;
      var n;

      function r() {
        n.fire();
      }

      if (l || f) {
        n = e.data("callbacks");

        if (l) {
          n && n.fire();
        } else {
          if (u && n) {
            n.remove(u);

            if (!n.has()) {
              n = null;
            }
          } else {
            n = null;
          }

          if (!n) {
            e.removeData("callbacks");

            if (window.ResizeObserver) {
              var i = e.data("observer");

              if (i) {
                i.unobserve(this);
                e.removeData("observer");
              }
            } else {
              t = e.find("> iframe");

              if (t.length) {
                $(t[0].contentWindow).off("resize").remove();
                t.remove();
              } else if (e.is("body")) {
                $(window).off("resize.resizer");
              }
            }
          }
        }
      } else if (e.data("callbacks")) {
        $(this).data("callbacks").add(u);
      } else {
        n = $.Callbacks();
        n.add(u);
        e.data("callbacks", n);
        var a;
        var o = true;

        if (window.ResizeObserver) {
          a = new ResizeObserver(function () {
            if (!o) {
              r();
            }

            o = false;
          });
          a.observe(this);
          e.data("observer", a);
        } else if (e.is("body")) {
          $(window).on("resize.resizer", r);
        } else {
          t = $("<iframe/>").addClass(s.prefix + "resizer").appendTo(this)[0];
          $(t.contentWindow).on("resize", r);
        }
      }
    });
  };

  function jquery_resolve(e) {
    var t = jQuery.Deferred();
    t.resolve(e);
    return t.promise();
  }

  function unpromise(e, t, n) {
    if (e !== undefined) {
      if (is_function(e["catch"])) {
        e["catch"](n);
      }

      if (is_function(e.done)) {
        return e.done(t);
      } else if (is_function(e.then)) {
        return e.then(t);
      } else {
        return t(e);
      }
    }
  }

  $.fn.is_fully_in_viewport = function () {
    function t(e, t) {
      var n = e.getBoundingClientRect();
      var r = t[0].getBoundingClientRect();
      var i = n.top - r.top;
      var a = n.bottom - r.top;
      var o = t.height();
      return a > 0 && i <= o;
    }

    if (window.IntersectionObserver) {
      return function (e) {
        var t = this[0];
        var n = jQuery.Deferred();
        var r = new window.IntersectionObserver(function (e) {
          n.resolve(e[0].isIntersecting && e[0].ratio === 1);
          r.unobserve(t);
        }, {
          root: e[0]
        });
        r.observe(t);
        return n.promise();
      };
    } else {
      return function (e) {
        return jquery_resolve(t(this[0], e));
      };
    }
  }();

  var entity_re = /(&(?:[a-z\d]+|#\d+|#x[a-f\d]+);)/i;
  var combine_chr_re = /(.(?:[\u0300-\u036F]|[\u1AB0-\u1abE]|[\u1DC0-\u1DF9]|[\u1DFB-\u1DFF]|[\u20D0-\u20F0]|[\uFE20-\uFE2F])+)/;
  var astral_symbols_re = /([\uD800-\uDBFF][\uDC00-\uDFFF])/;
  var emoji_re = /(\uD83C\uDFF4(?:\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74)\uDB40\uDC7F|\u200D\u2620\uFE0F)|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC68(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDB0-\uDDB3])|(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDB0-\uDDB3]))|\uD83D\uDC69\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDB0-\uDDB3])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|\uD83D\uDC68(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83D\uDC69\u200D[\u2695\u2696\u2708])\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC68(?:\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDB0-\uDDB3])|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDD1-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDEEB\uDEEC\uDEF4-\uDEF9]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD70\uDD73-\uDD76\uDD7A\uDD7C-\uDDA2\uDDB0-\uDDB9\uDDC0-\uDDC2\uDDD0-\uDDFF])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEF9]|\uD83E[\uDD10-\uDD3A\uDD3C-\uDD3E\uDD40-\uDD45\uDD47-\uDD70\uDD73-\uDD76\uDD7A\uDD7C-\uDDA2\uDDB0-\uDDB9\uDDC0-\uDDC2\uDDD0-\uDDFF])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC69\uDC6E\uDC70-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD18-\uDD1C\uDD1E\uDD1F\uDD26\uDD30-\uDD39\uDD3D\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDD1-\uDDDD]))/;
  var mobile_re = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;
  var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i;
  var format_split_re = /(\[\[(?:-?[@!gbiuso])*;[^;]*;[^\]]*\](?:[^\]\\]*(?:\\\\)*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]*)\]?)/i;
  var format_parts_re = /\[\[((?:-?[@!gbiuso])*);([^;]*);([^;\]]*);?([^;\]]*);?([^\]]*)\]([^\]\\]*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]+)\]?/gi;
  var format_re = /\[\[((?:-?[@!gbiuso])*;[^;\]]*;[^;\]]*(?:;|[^\]()]*);?[^\]]*)\]([^\]]*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]*)\]?/gi;
  var format_exist_re = /\[\[((?:-?[@!gbiuso])*;[^;\]]*;[^;\]]*(?:;|[^\]()]*);?[^\]]*)\]([^\]]*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]*)\]/gi;
  var format_full_re = /^(\[\[(?:(?:-?[@!gbiuso])*;[^;\]]*;[^;\]]*(?:;|[^\]()]*);?[^\]]*)\])([^\]]*\\\][^\]]*|[^\]]*|[^[]*\[[^\]]*)(\])$/i;
  var format_begin_re = /(\[\[(?:-?[@!gbiuso])*;[^;]*;[^\]]*\])/i;
  var format_start_re = /^(\[\[(?:-?[@!gbiuso])*;[^;]*;[^\]]*\])/i;
  var format_end_re = /\[\[(?:-?[@!gbiuso])*;[^;]*;[^\]]*\]?$/i;
  var self_closing_re = /^(?:\[\[)?[^;]*@[^;]*;/;
  var color_hex_re = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;
  var url_re = /(\bhttps?:\/\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\s"'<>\][)])+)/gi;
  var url_nf_re = /\b(?![^"\s[\]]*])(https?:\/\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\s"'<>\][)])+)/gi;
  var email_re = /((([^<>('")[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,})))/g;
  var url_full_re = /^(https?:\/\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\s"'<>\][)])+)$/gi;
  var email_full_re = /^((([^<>('")[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,})))$/g;
  var command_re = /((?:"[^"\\]*(?:\\[\S\s][^"\\]*)*"|'[^'\\]*(?:\\[\S\s][^'\\]*)*'|\/[^\/\\]*(?:\\[\S\s][^\/\\]*)*\/[gimsuy]*(?=\s|$)|(?:\\\s|\S))+)(?=\s|$)/gi;
  var extended_command_re = /^\s*((terminal|cmd)::([a-z_]+)\(([\s\S]*)\))\s*$/;
  var format_exec_re = /(\[\[(?:[^\][]|\\\])+\]\])/;
  var float_re = /^[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?$/;
  var re_re = /^\/((?:\\\/|[^/]|\[[^\]]*\/[^\]]*\])+)\/([gimsuy]*)$/;
  var string_re = /("(?:[^"\\]|\\(?:\\\\)*"|\\\\)*"|'(?:[^'\\]|\\(?:\\\\)*'|\\\\)*')/;
  var unclosed_strings_re = /^(?=((?:[^"']+|"[^"\\]*(?:\\[^][^"\\]*)*"|'[^'\\]*(?:\\[^][^'\\]*)*')*))\1./;
  var broken_image = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 14"><title id="title2">rounded</title><path id="terminal-broken-image" d="m 14,10 h 2 v 1 a 3,3 0 0 1 -3,3 H 3 A 3,3 0 0 1 0,11 H 4.5 A 1.00012,1.00012 0 0 0 5.207,10.707 L 6.5,9.414 7.793,10.707 a 0.99963,0.99963 0 0 0 1.41406,0 l 2.36719,-2.36719 1.80127,1.44092 A 0.99807,0.99807 0 0 0 14,10 Z M 16,3 V 8 H 14.35059 L 12.12451,6.21924 A 0.99846,0.99846 0 0 0 10.793,6.293 L 8.5,8.586 7.207,7.293 a 0.99962,0.99962 0 0 0 -1.41406,0 L 4.08594,9 H 0 V 3 A 3,3 0 0 1 3,0 h 10 a 3,3 0 0 1 3,3 z M 6,4.5 A 1.5,1.5 0 1 0 4.5,6 1.5,1.5 0 0 0 6,4.5 Z" /></svg>';
  var use_broken_image = '<svg class="terminal-broken-image" role="presentation" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 14" xmlns:xlink="http://www.w3.org/1999/xlink"><use xlink:href="#terminal-broken-image"/></svg>';

  var animation_supported = function () {
    var e = false,
        t = "Webkit Moz O ms Khtml".split(" "),
        n = document.createElement("div");

    if (n.style.animationName) {
      e = true;
    }

    if (e === false) {
      for (var r = 0; r < t.length; r++) {
        var i = t[r] + "AnimationName";

        if (n.style[i] !== undefined) {
          e = true;
          break;
        }
      }
    }

    n = null;
    return e;
  }();

  var agent = window.navigator.userAgent;
  var is_IE = /MSIE|Trident/.test(agent) || /rv:11.0/i.test(agent);
  var is_IEMobile = /IEMobile/.test(agent);

  var is_ch_unit_supported = function () {
    if (is_IE && !is_IEMobile) {
      return false;
    }

    var e = document.createElement("div");
    e.style.width = "1ch";
    return e.style.width === "1ch";
  }();

  var is_css_variables_supported = window.CSS && window.CSS.supports && window.CSS.supports("--fake-var", 0);
  var is_android = navigator.userAgent.toLowerCase().indexOf("android") !== -1;

  var is_key_native = function e() {
    if (!("KeyboardEvent" in window && "key" in window.KeyboardEvent.prototype)) {
      return false;
    }

    var t = window.KeyboardEvent.prototype;
    var n = Object.getOwnPropertyDescriptor(t, "key").get;
    return !!n.toString().match(/\[native code\]/);
  }();

  var is_mobile = function (e) {
    var t = false;

    if (mobile_re.test(e) || tablet_re.test(e.substr(0, 4))) {
      t = true;
    }

    return t;
  }(navigator.userAgent || navigator.vendor || window.opera);

  var ch_unit_bug = false;
  $(function () {
    function e(e) {
      return e[0].getBoundingClientRect().width;
    }

    var t = '<span style="font-family: monospace;visibility:hidden;';
    var n = $(t + 'width:1ch;overflow: hidden">&nbsp;</span>').appendTo("body");
    var r = $(t + '">&nbsp;</span>').appendTo("body");
    ch_unit_bug = e(n) !== e(r);
    n.remove();
    r.remove();
  });

  function a11y_hide(e) {
    e.attr({
      role: "presentation",
      "aria-hidden": "true"
    });
  }

  var excepctions = [];

  function alert_exception(e, t) {
    if (arguments[0] instanceof $.terminal.Exception) {
      e = arguments[0].type;
      t = arguments[0];
    }

    var n = (e ? e + ": " : "") + exception_message(t);

    if (excepctions.indexOf(n) === -1) {
      excepctions.push(n);
      setTimeout(function () {
        throw t;
      }, 0);
    }
  }

  function scrollbar_event(e, t) {
    var n = t.offset().left;
    return t.outerWidth() <= e.clientX - n;
  }

  function exception_message(e) {
    if (typeof e === "string") {
      return e;
    } else if (typeof e.fileName === "string") {
      return e.fileName + ": " + e.message;
    } else {
      return e.message;
    }
  }

  function Cycle() {
    var r = [].slice.call(arguments);
    var i = 0;
    $.extend(this, {
      get: function get() {
        return r;
      },
      index: function index() {
        return i;
      },
      rotate: function rotate(e, t) {
        if (t === undefined) {
          t = i;
        } else if (t === i) {
          return;
        }

        if (!e) {
          var n = r.filter(function (e) {
            return typeof e !== "undefined";
          });

          if (!n.length) {
            return;
          }
        }

        if (!r.length) {
          return;
        }

        if (r.length === 1) {
          return r[0];
        } else {
          if (i === r.length - 1) {
            i = 0;
          } else {
            ++i;
          }

          if (typeof r[i] !== "undefined") {
            return r[i];
          } else {
            return this.rotate(true, t);
          }
        }
      },
      length: function length() {
        return r.length;
      },
      remove: function remove(e) {
        delete r[e];
      },
      set: function set(e) {
        for (var t = r.length; t--;) {
          if (r[t] === e) {
            i = t;
            return;
          }
        }

        this.append(e);
        i = r.length - 1;
      },
      front: function front() {
        if (r.length) {
          var e = i;
          var t = false;

          while (!r[e]) {
            e++;

            if (e > r.length) {
              if (t) {
                break;
              }

              e = 0;
              t = true;
            }
          }

          return r[e];
        }
      },
      map: function map(n) {
        return r.map(function (e, t) {
          if (typeof e !== "undefined") {
            return n(e, t);
          }

          return null;
        }).filter(Boolean);
      },
      forEach: function forEach(n) {
        return r.forEach(function (e, t) {
          if (typeof e !== "undefined") {
            n(e, t);
          }
        });
      },
      append: function append(e) {
        r.push(e);
      }
    });
  }

  function Stack(e) {
    var t = is_array(e) ? e : e ? [e] : [];
    $.extend(this, {
      data: function data() {
        return t;
      },
      map: function map(e) {
        return $.map(t, e);
      },
      size: function size() {
        return t.length;
      },
      pop: function pop() {
        if (t.length === 0) {
          return null;
        } else {
          var e = t[t.length - 1];
          t = t.slice(0, t.length - 1);
          return e;
        }
      },
      push: function push(e) {
        t = t.concat([e]);
        return e;
      },
      top: function top() {
        return t.length > 0 ? t[t.length - 1] : null;
      },
      clone: function clone() {
        return new Stack(t.slice(0));
      }
    });
  }

  function WorkerCache(e) {
    var t = $.extend({
      validation: $.noop,
      action: $.noop,
      onCache: $.noop
    }, e);
    this._onCache = t.onCache.bind(this);
    this._action = t.action.bind(this);
    this._validation = t.validation.bind(this);
    this._cache = new Map();
  }

  WorkerCache.prototype.validate = function (e) {
    var t = this._validation(e);

    var n = t === undefined || t === true;

    if (!n) {
      this._cache.clear();
    }

    return n;
  };

  WorkerCache.prototype.get = function (e) {
    var t;

    if (this.validate(e) && this._cache.has(e)) {
      t = this._cache.get(e);

      this._onCache({
        cache: t
      });

      return t;
    }

    t = this._action(e);

    this._cache.set(e, t);

    return t;
  };

  function History(e, t, n) {
    var r = true;
    var i = "";

    if (typeof e === "string" && e !== "") {
      i = e + "_";
    }

    i += "commands";
    var a;

    if (n) {
      a = [];
    } else {
      a = $.Storage.get(i);
      a = a ? JSON.parse(a) : [];
    }

    var o = a.length - 1;
    $.extend(this, {
      append: function append(e) {
        if (r) {
          if (a[a.length - 1] !== e) {
            a.push(e);

            if (t && a.length > t) {
              a = a.slice(-t);
            }

            o = a.length - 1;

            if (!n) {
              $.Storage.set(i, JSON.stringify(a));
            }
          }
        }
      },
      set: function set(e) {
        if (is_array(e)) {
          a = e;

          if (!n) {
            $.Storage.set(i, JSON.stringify(a));
          }
        }
      },
      data: function data() {
        return a;
      },
      reset: function reset() {
        o = a.length - 1;
      },
      last: function last() {
        return a[a.length - 1];
      },
      end: function end() {
        return o === a.length - 1;
      },
      position: function position() {
        return o;
      },
      current: function current() {
        return a[o];
      },
      next: function next() {
        var e = o;

        if (o < a.length - 1) {
          ++o;
        }

        if (e !== o) {
          return a[o];
        }
      },
      previous: function previous() {
        var e = o;

        if (o > 0) {
          --o;
        }

        if (e !== o) {
          return a[o];
        }
      },
      clear: function clear() {
        a = [];
        this.purge();
      },
      enabled: function enabled() {
        return r;
      },
      enable: function enable() {
        r = true;
      },
      purge: function purge() {
        if (!n) {
          $.Storage.remove(i);
        }
      },
      disable: function disable() {
        r = false;
      },
      toggle: function toggle(e) {
        if (typeof e === "undefined") {
          r = !r;
        } else {
          r = e;
        }
      }
    });
  }

  var cmd_index = 0;
  $.cmd = {
    defaults: {
      mask: false,
      caseSensitiveSearch: true,
      historySize: 60,
      prompt: "> ",
      enabled: true,
      history: true,
      onPositionChange: $.noop,
      onCommandChange: $.noop,
      inputStyle: "textarea",
      mobileDelete: is_mobile,
      onPaste: $.noop,
      clickTimeout: 200,
      holdTimeout: 400,
      holdRepeatTimeout: 200,
      mobileIngoreAutoSpace: [],
      repeatTimeoutKeys: [],
      tabindex: 1,
      tabs: 4
    }
  };

  $.fn.cmd = function (e) {
    var x = $.extend({}, $.cmd.defaults, e);

    function o(e) {
      return x.mobileIngoreAutoSpace.length && x.mobileIngoreAutoSpace.indexOf(e) !== -1 && is_android;
    }

    var F = this;
    var t = F.data("cmd");

    if (t) {
      return t;
    }

    var u = cmd_index++;
    F.addClass("cmd");
    var k = $('<div class="cmd-wrapper"/>').appendTo(F);
    k.append('<span class="cmd-prompt"></span>');
    k.append('<div class="cmd-cursor-line">' + "<span></span>" + '<span class="cmd-cursor"><span>' + "<span>&nbsp;</span></span></span>" + "<span></span>" + "</div>");
    a11y_hide(k.find(".cmd-cursor-line"));
    var A = $("<textarea>").attr({
      autocapitalize: "off",
      spellcheck: "false",
      tabindex: x.tabindex
    }).addClass("cmd-clipboard").appendTo(F);

    if (!is_mobile) {
      A.val(" ");
    }

    if (x.width) {
      F.width(x.width);
    }

    var T;
    var m;
    var s;
    var S;
    var R;
    var c = F.find(".cmd-prompt");
    var l = false;
    var f = "";
    var p = null;
    var n;
    var B = "";
    var r;
    var a = "";
    var j = 0;
    var i;
    var d;
    var L = 0;
    var h, D;
    var O = F.find(".cmd-cursor");
    var v;
    var I;
    var g = 0;
    var _ = "￿";
    var z = /\uFFFF$/;

    function y(e) {
      var t = $(e.target);

      if (t.is("span,img,a")) {
        t = t.closest("[data-text]");
        return t.index() + t.parent("span").prevAll().find("[data-text]").length + t.closest('[role="presentation"]').prevUntil(".cmd-prompt").find("[data-text]").length;
      } else if (t.is('div[role="presentation"]')) {
        var n = !t.next().length;
        return t.find("[data-text]").length + t.prevUntil(".cmd-prompt").find("[data-text]").length - (n ? 0 : 1);
      }
    }

    var b = {
      SPACEBAR: " ",
      UP: "ArrowUP",
      DOWN: "ArrowDown",
      LEFT: "ArrowLeft",
      RIGHT: "ArrowRight",
      DEL: "Delete",
      MULTIPLY: "*",
      DIVIDE: "/",
      SUBTRACT: "-",
      ADD: "+"
    };

    function w(e) {
      var t = e.key.toUpperCase();

      if (b[t]) {
        return b[t];
      }

      return t;
    }

    function C(e) {
      if (e.key) {
        var t = w(e).toUpperCase();

        if (t === "CONTROL") {
          return "CTRL";
        } else {
          var n = [];

          if (e.ctrlKey) {
            n.push("CTRL");
          }

          if (e.metaKey && t !== "META") {
            n.push("META");
          }

          if (e.shiftKey && t !== "SHIFT") {
            n.push("SHIFT");
          }

          if (e.altKey && t !== "ALT") {
            n.push("ALT");
          }

          if (n.length && t === " ") {
            t = "SPACEBAR";
          }

          if (e.key) {
            n.push(t);
          }

          return n.join("+");
        }
      }
    }

    var E = {
      3: "Cancel",
      6: "Help",
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      28: "Convert",
      29: "NonConvert",
      30: "Accept",
      31: "ModeChange",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      41: "Select",
      42: "Print",
      43: "Execute",
      44: "PrintScreen",
      45: "Insert",
      46: "Delete",
      48: ["0", ")"],
      49: ["1", "!"],
      50: ["2", "@"],
      51: ["3", "#"],
      52: ["4", "$"],
      53: ["5", "%"],
      54: ["6", "^"],
      55: ["7", "&"],
      56: ["8", "*"],
      57: ["9", "("],
      91: "OS",
      93: "ContextMenu",
      144: "NumLock",
      145: "ScrollLock",
      181: "VolumeMute",
      182: "VolumeDown",
      183: "VolumeUp",
      186: [";", ":"],
      187: ["=", "+"],
      188: [",", "<"],
      189: ["-", "_"],
      190: [".", ">"],
      191: ["/", "?"],
      192: ["`", "~"],
      219: ["[", "{"],
      220: ["\\", "|"],
      221: ["]", "}"],
      222: ["'", '"'],
      224: "Meta",
      225: "AltGraph",
      246: "Attn",
      247: "CrSel",
      248: "ExSel",
      249: "EraseEof",
      250: "Play",
      251: "ZoomOut"
    };
    var P;

    for (P = 1; P < 25; P++) {
      E[111 + P] = "F" + P;
    }

    var N = "";

    for (P = 65; P < 91; P++) {
      N = String.fromCharCode(P);
      E[P] = [N.toLowerCase(), N.toUpperCase()];
    }

    var H = {};
    Object.keys(E).forEach(function (t) {
      if (is_array(E[t])) {
        E[t].forEach(function (e) {
          H[e.toUpperCase()] = t;
        });
      } else {
        H[E[t].toUpperCase()] = t;
      }
    });
    var M;
    var U = {
      "ALT+D": q({
        clipboard: true
      }),
      "HOLD+ALT+D": q({
        clipboard: true,
        hold: true
      }),
      "HOLD+DELETE": q({
        clipboard: false,
        hold: true
      }),
      "HOLD+SHIFT+DELETE": q({
        clipboard: false,
        hold: true
      }),
      ENTER: function ENTER() {
        if (D && B && !x.mask && (is_function(x.historyFilter) && x.historyFilter(B) || x.historyFilter instanceof RegExp && B.match(x.historyFilter) || !x.historyFilter)) {
          D.append(B);
        }

        var e = B;
        D.reset();
        Ue = "";
        Ie = true;
        F.set("");
        var t;

        if (x.commands) {
          t = x.commands.call(F, e);
        }

        if (is_function(i)) {
          if (t && is_function(t.then)) {
            t.then(ke);
          } else {
            ke();
          }
        }

        A.val("");
        return false;
      },
      "SHIFT+ENTER": function SHIFTENTER() {
        F.insert("\n");
        return true;
      },
      BACKSPACE: ne,
      "SHIFT+BACKSPACE": ne,
      TAB: function TAB() {
        F.insert("\t");
      },
      "CTRL+D": function CTRLD() {
        F["delete"](1);
        return false;
      },
      DELETE: function DELETE() {
        F["delete"](1);
        return true;
      },
      "HOLD+ARROWUP": ee,
      ARROWUP: ee,
      "CTRL+P": Y,
      ARROWDOWN: te,
      "HOLD+ARROWDOWN": te,
      "CTRL+N": G,
      ARROWLEFT: re,
      "HOLD+ARROWLEFT": debounce(re, 10),
      "CTRL+B": re,
      "CTRL+ARROWLEFT": function CTRLARROWLEFT() {
        var e = j - 1;
        var t = 0;

        if (B[e] === " ") {
          --e;
        }

        for (var n = e; n > 0; --n) {
          if (B[n] === " " && B[n + 1] !== " ") {
            t = n + 1;
            break;
          } else if (B[n] === "\n" && B[n + 1] !== "\n") {
            t = n;
            break;
          }
        }

        F.position(t);
      },
      "CTRL+R": function CTRLR() {
        if (l) {
          de(true);
        } else {
          n = i;
          pe();
          r = B;
          F.set("");
          xe();
          l = true;
        }

        return false;
      },
      "CTRL+G": function CTRLG() {
        if (l) {
          i = n;
          ke();
          F.set(r);
          xe();
          l = false;
          f = "";
          return false;
        }
      },
      ARROWRIGHT: ie,
      "HOLD+ARROWRIGHT": debounce(ie, 10),
      "CTRL+F": ie,
      "CTRL+ARROWRIGHT": function CTRLARROWRIGHT() {
        if (B[j] === " ") {
          ++j;
        }

        var e = /\S[\n\s]{2,}|[\n\s]+\S?/;
        var t = B.slice(j).match(e);

        if (!t || t[0].match(/^\s+$/)) {
          F.position(bare_text(B).length);
        } else if (t[0][0] !== " ") {
          j += t.index + 1;
        } else {
          j += t.index + t[0].length - 1;

          if (t[0][t[0].length - 1] !== " ") {
            --j;
          }
        }

        xe();
      },
      F12: K,
      END: oe(true),
      "CTRL+END": oe(),
      "CTRL+E": oe(),
      HOME: ae(true),
      "CTRL+HOME": ae(),
      "CTRL+A": ae(),
      "SHIFT+INSERT": J,
      "CTRL+SHIFT+T": K,
      "CTRL+W": W({
        clipboard: true,
        hold: false
      }),
      "HOLD+BACKSPACE": W({
        clipboard: false,
        hold: true
      }),
      "HOLD+SHIFT+BACKSPACE": W({
        clipboard: false,
        hold: true
      }),
      "CTRL+H": function CTRLH() {
        if (B !== "" && j > 0) {
          F["delete"](-1);
        }

        return false;
      },
      "CTRL+X": K,
      "CTRL+C": K,
      "CTRL+T": K,
      "CTRL+Y": function CTRLY() {
        if (a !== "") {
          F.insert(a);
        }
      },
      "CTRL+V": J,
      "META+V": J,
      "CTRL+K": function CTRLK() {
        var e = text(B).length;

        if (e > j) {
          a = F["delete"](e - j);
          text_to_clipboard(A, a);
        }

        return false;
      },
      "CTRL+U": function CTRLU() {
        if (B !== "" && j !== 0) {
          a = F["delete"](-j);
          text_to_clipboard(A, a);
        }

        return false;
      },
      "CTRL+TAB": function CTRLTAB() {
        return false;
      },
      "META+`": K,
      "META+R": K,
      "META+L": K
    };

    function q(i) {
      i = i || {};

      if (i.hold && !x.mobileDelete) {
        return function e() {
          F["delete"](1);
          return false;
        };
      }

      return function e() {
        var t = / *[^ ]+ *(?= )|[^ ]+$/;
        var n = B.slice(j);
        var r = n.match(t);

        if (r) {
          a = r[0];

          if (i.clipboard) {
            text_to_clipboard(A, a);
          }
        }

        F.set(B.slice(0, j) + B.slice(j).replace(t, ""), true);
        return false;
      };
    }

    function W(n) {
      n = n || {};

      if (n.hold && !x.mobileDelete) {
        return function e() {
          F["delete"](-1);
        };
      }

      return function e() {
        if (B !== "" && j !== 0) {
          var t = B.slice(0, j).match(/([^ ]* *$)/);

          if (t[0].length) {
            a = F["delete"](-t[0].length);

            if (n.clipboard) {
              text_to_clipboard(A, a);
            }
          }
        }

        return false;
      };
    }

    function K() {
      return true;
    }

    function J() {
      A.val("");
      g = 0;

      if (F.isenabled() && !A.is(":focus")) {
        A.trigger("focus", [true]);
      }

      A.one("input", Q);
      return true;
    }

    function Q() {
      if (g++ > 0) {
        return;
      }

      function n() {
        A.val(B);
        le();
      }

      function r(e) {
        F.insert(e);
        n();
      }

      if (F.isenabled()) {
        F.oneTime(100, function () {
          var e = A.val();

          if (is_function(x.onPaste)) {
            var t = x.onPaste.call(F, {
              target: F,
              text: e
            });

            if (t !== undefined) {
              if (t && is_function(t.then || t.done)) {
                (t.then || t.done).call(t, r);
              } else if (typeof t === "string") {
                r(t);
              } else if (t === false) {
                n();
              }

              return;
            }
          }

          r(e);
        });
      }
    }

    function Y() {
      if (Se) {
        r = B;
        F.set(D.current());
      } else {
        F.set(D.previous());
      }

      Se = false;
      return false;
    }

    function G() {
      F.set(D.end() ? r : D.next());
      return false;
    }

    function V(e) {
      return e.match(/\n/);
    }

    function X(e) {
      var t = e.split("\n").map(function (e) {
        return $.terminal.length(e);
      });
      var n = t.filter(function (e) {
        return e > T;
      });
      return !!n.length;
    }

    function Z(e, t, n) {
      var r = t.match(e);

      if (V(t)) {
        return r && r[1].length % T <= n;
      } else {
        return r && r[1].length % T <= n - R;
      }
    }

    function ee() {
      var e = B.substring(0, j);
      var t = /\n?([^\n]+)$/;
      var n = F.column();

      if (V(e) || X(e)) {
        for (var r = e.length - n - 1; r--;) {
          if (e[r] === "\n") {
            break;
          }

          var i = e.substring(0, r);

          if (Z(t, i, n)) {
            break;
          }
        }

        F.position(r);
        return false;
      } else {
        return Y();
      }
    }

    function te() {
      var e = B.substring(j);
      var t = F.column();

      if (V(e) || X(e)) {
        var n = e.match(/^([^\n]*)(\n?)([^\n]*)/);

        if (n) {
          var r = B.substring(0, j);
          var i = n[1].length;
          var a = !V(r) && !X(r);
          var o;

          if (i > T) {
            o = T;
          } else if (!n[2]) {
            return G();
          } else {
            o = i + t + 1;

            if (a) {
              o += R;
            }
          }

          F.position(o, true);
        }

        return false;
      } else {
        return G();
      }
    }

    function ne() {
      if (l) {
        f = f.slice(0, -1);
        pe();
      } else if (B !== "" && j > 0) {
        F["delete"](-1);
      }

      F.oneTime(1, function () {
        Ie = true;
      });
    }

    function re() {
      if (j > 0) {
        F.position(-1, true);
      }
    }

    function ie() {
      if (j < bare_text(B).length) {
        F.position(1, true);
      }

      return false;
    }

    function ae(e) {
      function t() {
        F.position(0);
      }

      if (e) {
        return function () {
          if (B.match(/\n/)) {
            var e = B.substring(0, F.position());
            F.position(e.lastIndexOf("\n") + 1);
          } else {
            t();
          }
        };
      } else {
        return t;
      }
    }

    function oe(e) {
      function i() {
        F.position(text(B).length);
      }

      if (e) {
        return function () {
          if (B.match(/\n/)) {
            var e = B.split("\n");
            var t = F.position();
            var n = 0;

            for (var r = 0; r < e.length; ++r) {
              n += e[r].length;

              if (n > t) {
                F.position(n + r);
                return;
              }
            }
          }

          i();
        };
      } else {
        return i;
      }
    }

    function ue() {
      var e = A.is(":focus");

      if (d) {
        if (!e) {}

        F.oneTime(10, function () {
          if (!A.is(":focus") && d) {
            A.trigger("focus", [true]);
          }
        });
      } else if (e && (is_mobile || !d)) {
        A.trigger("blur", [true]);
      }
    }

    function se() {
      if (animation_supported) {
        var e = window.getComputedStyle(O[0]);
        var t = e.getPropertyValue("--animation");
        t = t.replace(/^\s*|\s*$/g, "");
        var n = F.attr("class");

        if (n.match(/-animation/)) {
          n = n.replace(/[a-z]+-animation/g, "");
        }

        if (t && !t.match(/blink/)) {
          var r = t.replace(/terminal-/, "") + "-animation";

          if (!n.match(r)) {
            n += " " + r;
          }
        }

        n = n.replace(/\s+/g, " ");

        if (n !== F.attr("class").replace(/\s+/g, " ")) {
          F.attr("class", n);
        }
      }
    }

    function le(e) {
      if (!F.isenabled()) {
        return;
      }

      F.oneTime(10, function () {
        if (!is_mobile && A.val() !== B && !e) {
          A.val(" " + B);
        }

        if (d) {
          F.oneTime(10, function () {
            try {
              if (!is_mobile && A.caret() !== j + 1) {
                A.caret(j + 1);
              }
            } catch (e) {}
          });
        }
      });
    }

    if (animation_supported && !is_android) {
      v = function v(e) {
        if (e) {
          O.addClass("cmd-blink");
        } else {
          O.removeClass("cmd-blink");
        }
      };

      I = function I() {
        var e = O.clone();
        e.insertBefore(O);
        O.remove();
        O = e;
      };
    } else {
      var fe = false;

      v = function v(e) {
        if (e && !fe) {
          fe = true;
          O.addClass("cmd-inverted cmd-blink");
          F.everyTime(500, "blink", ce);
        } else if (fe && !e) {
          fe = false;
          F.stopTime("blink", ce);
          O.removeClass("cmd-inverted cmd-blink");
        }
      };

      I = function I() {
        v(false);
        v(true);
      };
    }

    function ce() {
      O.toggleClass("cmd-inverted");
    }

    function pe() {
      i = "(reverse-i-search)`" + f + "': ";
      ke();
    }

    function me() {
      i = n;
      l = false;
      p = null;
      f = "";
    }

    function de(e) {
      var t = D.data();
      var n, r;
      var i = t.length;

      if (e && p > 0) {
        i -= p;
      }

      if (f.length > 0) {
        for (var a = f.length; a > 0; a--) {
          r = $.terminal.escape_regex(f.slice(0, a));

          if (x.caseSensitiveSearch) {
            n = new RegExp(r);
          } else {
            n = new RegExp(r, "i");
          }

          for (var o = i; o--;) {
            if (n.test(t[o])) {
              p = t.length - o;
              F.position(t[o].indexOf(r));
              F.set(t[o], true);
              xe();

              if (f.length !== a) {
                f = f.slice(0, a);
                pe();
              }

              return;
            }
          }
        }
      }

      f = "";
    }

    function he() {
      var e = F.find(".cmd-prompt");
      var t = e.html();
      e.html("<span>&nbsp;</span>");
      var n = e.find("span")[0].getBoundingClientRect().width;
      e.html(t);
      return n;
    }

    function De(e) {
      var t = F.width();
      return Math.floor(t / e);
    }

    function ve(e) {
      function t(e) {
        return $.terminal.split_equal(e, T);
      }

      function n(e) {
        return e.filter(function (e) {
          return !$.terminal.strip(e).match(/^ $/);
        });
      }

      var r = c.find(".cmd-line");
      var i;

      if (r.length) {
        i = r.nextUntil(".cmd-line").text();
      } else {
        i = c.text();
      }

      i = $.terminal.escape_brackets(i);
      var a = new RegExp("^" + $.terminal.escape_regex(i));
      var o;

      if (e.match(/\n/)) {
        var u = e.split("\n");
        var s = T - R - 1;

        for (var l = 0; l < u.length - 1; ++l) {
          u[l] += _;
        }

        if (strlen(u[0]) > s) {
          o = t(i + u[0]);
          o[0] = o[0].replace(a, "");
          o = n(o);
        } else {
          o = [u[0]];
        }

        for (l = 1; l < u.length; ++l) {
          if (strlen(u[l]) > T) {
            var f = t(u[l]);

            if (l < u.length - 1) {
              f = n(f);
            }

            o = o.concat(f);
          } else {
            o.push(u[l]);
          }
        }
      } else {
        o = t(i + e, T);
        o[0] = o[0].replace(a, "");
      }

      if (o.length > 1 && o[o.length - 1].length === T) {
        o.push("");
      }

      return o;
    }

    var ge = new WorkerCache({
      validation: function validation(e) {
        var t = false;

        if ((!this._previous_value || this._previous_value === e) && (!this._cols || this._cols === T)) {
          t = true;
        }

        this._previous_value = e;
        this._cols = T;
        return t;
      },
      action: ve
    });

    function _e(e) {
      return ge.get(e);
    }

    function ye(t, e) {
      try {
        t = $.terminal.escape_formatting(t);
        var n = $.extend({}, x, {
          unixFormattingEscapeBrackets: true,
          position: j
        });
        var r = $.terminal.apply_formatters(t, n);
        var i = $.terminal.normalize(r[0]);
        var a = $.terminal.length(i);

        if (!e) {
          L = r[1];

          if (L > a) {
            L = a;
          }
        }

        i = $.terminal.normalize(i);
        return i;
      } catch (e) {
        alert_exception("[Formatting]", e.stack);
        return t;
      }
    }

    function be(e, t) {
      var n = $.terminal.encode(we(e), {
        tabs: x.tabs,
        before: t
      });
      e = $.terminal.format(n, {
        char_width: x.char_width,
        allowedAttributes: x.allowedAttributes || []
      });
      var r = /(<span[^>]+data-text[^>]+>)(.*?)(<\/span>)/g;
      return e.replace(r, "$1<span>$2</span>$3");
    }

    function we(e) {
      return $.terminal.partition(e).join("");
    }

    function Ce(e, t) {
      return $.terminal.length(e, t);
    }

    function Ee(e, t, n) {
      return $.terminal.substring(e, t, n);
    }

    var xe = function () {
      var g = O.prev();

      var _ = O.next();

      var y = O.parent();

      function b(e, t) {
        var n = e.match(z);

        if (n) {
          e = e.replace(z, " ");
        }

        var r = false;
        var i = $.extend({
          prompt: "",
          last: false
        }, t);
        var a = i.position;
        var o = Ce(e);
        var u = i.prompt;

        if (ch_unit_bug) {
          O.width(m);
        }

        var s;

        if (a === o) {
          g.html(be(e));
          O.html("<span><span>&nbsp;</span></span>");

          _.html("");
        } else if (a === 0) {
          g.html("");
          s = Ee(e, 0, 1);
          O.html(be(s));

          _.html(be(Ee(e, 1), u + s));
        } else {
          var l = $.terminal.substring(e, 0, a);
          g.html(be(l, u));
          s = Ee(e, a, a + 1);
          var f = (u + l).replace(/^.*\t/, "");
          O.html(be(s, f));

          if (a === o - 1) {
            r = true;

            _.html("");
          } else {
            if (s.match(/\t/)) {
              f = "";
            } else {
              f += s;
            }

            _.html(be(Ee(e, a + 1), f));
          }
        }

        O.toggleClass("cmd-end-line", r);
        se();
        var c = $.terminal.length(O.text());

        if (c > 1) {
          var p = O.find("[data-text]")[0];
          p.style.setProperty("--length", c);
        }

        I();
      }

      function w(e, t) {
        var n = e.match(z);
        var r = '<div role="presentation" aria-hidden="true"';

        if (n) {
          e = e.replace(z, " ");
          r += ' class="cmd-end-line"';
        }

        r += ">" + be(e, t || "") + "</div>";
        return r;
      }

      function C(e) {
        var n = y;
        $.each(e, function (e, t) {
          n = $(w(t)).insertAfter(n);
        });
      }

      function E(e) {
        $.each(e, function (e, t) {
          y.before(w(t, e === 0 ? S : ""));
        });
      }

      return function () {
        var e;

        switch (_typeof(x.mask)) {
          case "boolean":
            e = x.mask ? B.replace(/./g, "*") : B;
            break;

          case "string":
            e = B.replace(/./g, x.mask);
            break;
        }

        var t = ye(e);
        var n;

        if (Ce(t) === text(e).length) {
          n = j;
        } else {
          n = L;
        }

        var r;
        k.css({
          display: "none"
        });
        k.find("div:not(.cmd-cursor-line)").remove();
        g.html("");

        if (strlen(text(t)) > T - R - 1 || t.match(/\n/)) {
          var i = t.match(/\t/g);
          var a = t;

          if (i) {
            t = t.replace(/\t/g, "\0\0\0\0");
          }

          var o = _e(t);

          if (i) {
            o = $.map(o, function (e) {
              return e.replace(/\x00\x00\x00\x00/g, "\t");
            });
          }

          var u = Ce(o[0]);

          if (u === 0 && o.length === 1) {} else if (n < u) {
            b(o[0], {
              length: o.length,
              position: n,
              prompt: S
            });
            C(o.slice(1));
          } else if (n === u) {
            y.before(w(o[0], S));
            b(o[1] || "", {
              length: o.length,
              position: 0,
              last: o.length <= 2
            });

            if (o.length > 2) {
              C(o.slice(2));
            }
          } else {
            var s = o.slice(-1)[0];
            var l = Ce(a);
            var f = l - n;
            var c = Ce(s);
            var p = 0;

            if (f === -1) {
              f = 0;
            }

            if (f <= c) {
              E(o.slice(0, -1));

              if (c === f) {
                p = 0;
              } else {
                p = c - f;
              }

              b(s, {
                length: o.length,
                position: p,
                last: true
              });
            } else {
              var m;
              var d;
              p = n;

              for (r = 0; r < o.length; ++r) {
                var h = $.terminal.length(o[r]);

                if (p > h) {
                  p -= h;
                } else {
                  break;
                }
              }

              d = o[r];
              m = r;

              if (p === Ce(d)) {
                p = 0;
                d = o[++m];

                if (d === undefined) {
                  var D = $.terminal.defaults.strings.redrawError;
                  throw new Error(D);
                }
              }

              b(d, {
                length: o.length,
                position: p
              });
              E(o.slice(0, m));
              C(o.slice(m + 1));
            }
          }

          F.find(".cmd-cursor-line ~ div:last-of-type").append("<span></span>");
        } else if (t === "") {
          g.html("");
          O.html("<span><span>&nbsp;</span></span>");

          _.html("");
        } else {
          b(t, {
            length: 1,
            position: n
          });
        }

        var v = y.prevUntil(".cmd-prompt").length;

        if (is_css_variables_supported) {
          F[0].style.setProperty("--cursor-line", v);
        } else {
          A.css("top", v * 14 + "px");
        }

        k.css({
          display: ""
        });
      };
    }();

    var Fe = function () {
      function a(e, t) {
        var n = $.extend({}, x, {
          position: t
        });
        return $.terminal.apply_formatters(e, n)[1];
      }

      function s(e, t, n) {
        var r = a(n, t);

        if (r === e) {
          var i = a(n, t + 1);

          if (i > e) {
            return 0;
          }

          return 1;
        } else if (r < e) {
          return 1;
        } else {
          return -1;
        }
      }

      return function (e, t) {
        if (t === 0) {
          return 0;
        }

        e = bare_text(e);
        var n = e.length;
        var r = $.terminal.escape_brackets(B);
        var i = binary_search(0, n, t, s, [r]);
        var a = $.terminal.split_characters(e);

        if (n > a.length) {
          var o = 0;

          for (var u = 0; u < a.length; ++u) {
            o += a[u].length;

            if (o >= i) {
              return o;
            }
          }
        }

        return i;
      };
    }();

    var $e;

    var ke = function () {
      function t(e) {
        e = $.terminal.apply_formatters(e, {});
        e = $.terminal.normalize(e);
        e = crlf(e);
        s = e;
        var t = $.terminal.split_equal(e, T).map(function (e) {
          if (!$.terminal.have_formatting(e)) {
            return "[[;;]" + e + "]";
          }

          return e;
        });
        var n = {
          char_width: x.char_width
        };
        S = t[t.length - 1];
        var r = $.terminal.encode(t[t.length - 1], {
          tabs: x.tabs
        });
        var i = $.terminal.format(r, n);
        var a = t.slice(0, -1).map(function (e) {
          e = $.terminal.encode(e, {
            tabs: x.tabs
          });
          return '<span class="cmd-line">' + $.terminal.format(e, n) + "</span>";
        }).concat([i]).join("\n");

        if (c.html() !== a) {
          c.html(a);
          R = strlen(text(r));
        }
      }

      return function () {
        if ($e && $e.set) {
          $e.set = $.noop;
          $e = null;
        }

        switch (_typeof(i)) {
          case "string":
            t(i);
            break;

          case "function":
            var n = $e = {
              set: t
            };
            var e = i.call(F, function (e) {
              n.set(e);
            });

            if (e && e.then) {
              e.then(n.set)["catch"](function (e) {
                var t = $.terminal.escape_brackets("[ERR]> ");
                n.set("[[;red;]" + t + "]");
                alert_exception("Prompt", e);
              });
            }

            break;
        }
      };
    }();

    function Ae() {
      if (is_function(x.onCommandChange)) {
        x.onCommandChange.call(F, B);
      }
    }

    function Te(e) {
      return e.replace(/((?!\\).)\\(?:&#93;|])/g, "$1&#93;");
    }

    $.extend(F, {
      option: function option(e, t) {
        if (typeof t === "undefined") {
          return x[e];
        } else {
          x[e] = t;
        }

        return F;
      },
      name: function name(e) {
        if (e !== undefined) {
          h = e;
          var t = D && D.enabled() || !D;
          D = new History(h, x.historySize, x.history === "memory");

          if (!t) {
            D.disable();
          }

          return F;
        } else {
          return h;
        }
      },
      purge: function purge() {
        D.clear();
        return F;
      },
      history: function history() {
        return D;
      },
      "delete": function _delete(e, t) {
        var n, r;

        if (e === 0) {
          return "";
        } else if (e < 0) {
          if (j > 0) {
            n = B.slice(0, j).slice(e);
            r = bare_text(B);
            r = r.slice(0, j + e) + r.slice(j, r.length);

            if (!t) {
              F.position(j + e);
            }
          }
        } else if (B !== "") {
          r = text(B);

          if (j < r.length) {
            n = r.slice(j).slice(0, e);
            r = r.slice(0, j) + r.slice(j + e, r.length);
          }
        }

        if (n) {
          B = Te(r);
        }

        xe();
        le();
        Ae();
        return n;
      },
      set: function set(e, t, n) {
        if (e !== undefined) {
          B = Te(e);

          if (!t) {
            F.position(bare_text(B).length);
          }

          xe();
          le();

          if (!n) {
            Ae();
          }
        }

        return F;
      },
      keymap: function keymap(e, t) {
        function n(e, t) {
          var n = U[e];

          if (is_function(n)) {
            n = n.bind(F);
          }

          return function (e) {
            return t.call(F, e, n);
          };
        }

        if (typeof e === "undefined") {
          return M;
        } else if (typeof e === "string") {
          if (typeof t === "undefined") {
            if (M[e]) {
              return M[e];
            } else if (U[e]) {
              return U[e];
            }
          } else {
            M[e] = n(e, t);
          }
        } else {
          M = $.extend({}, M ? M : U, $.omap(e || {}, n));
          return F;
        }
      },
      insert: function insert(e, t) {
        var n = bare_text(B);
        var r = bare_text(e).length;

        if (j === n.length) {
          e = n + e;
        } else if (j === 0) {
          e = e + n;
        } else {
          e = n.slice(0, j) + e + n.slice(j);
        }

        B = Te(e);

        if (!t) {
          F.position(r, true, true);
        }

        le();
        xe();
        Ae();
        return F;
      },
      get: function get() {
        return B;
      },
      commands: function commands(e) {
        if (e) {
          x.commands = e;
          return F;
        } else {
          return e;
        }
      },
      destroy: function destroy() {
        Xe.unbind("keypress.cmd", Ze);
        Xe.unbind("keydown.cmd", Ge);
        Xe.unbind("input.cmd", nt);
        F.stopTime("blink", ce);
        F.find(".cmd-wrapper").remove();
        F.find(".cmd-prompt, .cmd-clipboard").remove();
        F.removeClass("cmd").removeData("cmd").off(".cmd");
        return F;
      },
      column: function column(e) {
        var t = B.substring(0, j);

        if (j === 0 || !B.length) {
          return 0;
        }

        var n = /\n?([^\n]*)$/;
        var r = t.match(n);
        var i = r[1].length % T;

        if (!V(t) && (e || X(t))) {
          i += R;
        }

        return i;
      },
      prompt: function prompt(e) {
        if (e === true) {
          return s;
        } else if (e === undefined) {
          return i;
        } else {
          var t = e !== i;

          if (typeof e === "string" || typeof e === "function") {
            i = e;
          } else {
            throw new Error("prompt must be a function or string");
          }

          if (t) {
            ke();
            xe();
          }

          return F;
        }
      },
      kill_text: function kill_text() {
        return a;
      },
      position: function position(e, t, n) {
        if (typeof e === "number") {
          var r = j;
          var i = bare_text(B).length;

          if (t) {
            j += e;
          } else if (e < 0) {
            j = 0;
          } else if (e > i) {
            j = i;
          } else {
            j = e;
          }

          if (r !== j && !n) {
            xe();

            if (is_function(x.onPositionChange)) {
              x.onPositionChange(j, L);
            }

            le(true);
          }

          return F;
        } else {
          return j;
        }
      },
      refresh: function refresh() {
        ke();
        xe();
        le(true);
        return F;
      },
      display_position: function display_position(e, t) {
        if (e === undefined) {
          return L;
        } else {
          var n = ye($.terminal.escape_formatting(B), true);
          var r = Ce(n);
          var i = bare_text(B).length;
          var a;

          if (t) {
            a = L + e;
          } else if (e > r) {
            a = r;
          } else {
            a = e;
          }

          if (text(n).length === Ce(B, true)) {
            L = a;
            return F.position(a);
          }

          if (r === a) {
            L = a;
            return F.position(i);
          }

          var o = Fe(B, a);

          if (o !== -1) {
            L = a;
            F.position(o);
          }

          return F;
        }
      },
      visible: function () {
        var e = F.visible;
        return function () {
          e.apply(F, []);
          xe();
          ke();
          return F;
        };
      }(),
      show: function () {
        var e = F.show;
        return function () {
          e.apply(F, []);
          xe();
          ke();
          return F;
        };
      }(),
      resize: function resize(e) {
        m = he();
        var t;

        if (typeof e === "number") {
          t = e;
        } else {
          t = De(m);
        }

        if (T !== t || arguments[0] === true) {
          T = t;
          xe();
          ke();
        }

        return F;
      },
      invoke_key: function invoke_key(e) {
        var t = e.toUpperCase().split("+");
        var n = t.pop();
        var r = t.indexOf("CTRL") !== -1;
        var i = t.indexOf("SHIFT") !== -1;
        var a = t.indexOf("ALT") !== -1;
        var o = t.indexOf("META") !== -1;
        var u = $.Event("keydown", {
          ctrlKey: r,
          shiftKey: i,
          altKey: a,
          metaKey: o,
          which: H[n],
          key: n
        });
        var s = $(document.documentElement || window);
        s.trigger(u);
        u = $.Event("keypress");
        u.key = n;
        u.which = u.keyCode = 0;
        s.trigger(u);
        return F;
      },
      enable: function enable(e) {
        if (!d) {
          d = true;
          F.addClass("enabled");

          try {
            if (A.is(":not(:focus)")) {
              A.focus();
            }

            A.caret(j);
          } catch (e) {}

          v(true);

          if (!e && is_function(i)) {
            ke();
          }

          se();
          le();
        }

        ue();
        return F;
      },
      isenabled: function isenabled() {
        return d;
      },
      disable: function disable(e) {
        d = false;
        F.removeClass("enabled");
        v(false);

        if (!e) {
          ue();
        }

        return F;
      },
      mask: function mask(e) {
        if (typeof e === "undefined") {
          return x.mask;
        } else {
          x.mask = e;
          xe();
          return F;
        }
      }
    });
    F.name(x.name || x.prompt || "");

    if (x.prompt !== false) {
      i = x.prompt;
      ke();
    }

    if (x.enabled === true) {
      F.enable();
    }

    m = he();
    T = De(m);

    if (!x.history) {
      D.disable();
    }

    var Se = true;
    var Re = false;
    var Be = false;
    var je = false;
    var Le = false;
    var Oe = false;
    var Ie = true;
    var ze = false;
    var Pe = false;
    var Ne = false;
    var He = false;
    var Me;
    var Ue = "";
    var qe;

    function We(e) {
      return e.key.toUpperCase() === "BACKSPACE" || e.which === 8;
    }

    function Ke(e) {
      return e.key && e.key.length === 1 && !e.ctrlKey;
    }

    function Je(e) {
      var t = ["HOLD+SHIFT+BACKSPACE", "HOLD+BACKSPACE"];
      return t.indexOf(e) !== -1 && x.mobileDelete || x.repeatTimeoutKeys.indexOf(e) !== -1;
    }

    function Qe(e) {
      return e.which === 35 || e.which === 36 || e.which === 37 || e.which === 38 || e.which === 39 || e.which === 40 || e.which === 13 || e.which === 27;
    }

    var Ye = false;

    function Ge(e) {
      debug('keydown "' + e.key + '" ' + e.fake + " " + e.which);
      var t;
      Pe = (e.key || "").toLowerCase() === "process" || e.which === 0;
      Be = Le && je && !We(e);

      try {
        if (!e.fake) {
          je = Ke(e);
          Oe = String(e.key).toLowerCase() === "unidentified";
          ze = We(e);
        }
      } catch (e) {}

      if (e.key === "Unidentified") {
        Ie = true;
        return;
      }

      if (!e.fake) {
        Ie = false;
      }

      Le = true;
      A.off("input", Q);
      var n = C(e);

      if (is_function(x.keydown)) {
        e.key = w(e);
        t = x.keydown.call(F, e);

        if (t !== undefined) {
          if (!t) {
            Me = true;
          }

          return t;
        }
      }

      if (n !== qe) {
        Ve();
      }

      if (d || n === "CTRL+C" && is_terminal_selected(F)) {
        if (Ne) {
          qe = n;
          n = "HOLD+" + n;

          if (He) {
            return;
          }

          if (x.holdRepeatTimeout > 0 && Je(n)) {
            He = true;
            F.oneTime(x.holdRepeatTimeout, "delay", function () {
              He = false;
            });
          }
        } else {
          F.oneTime(x.holdTimeout, "hold", function () {
            Ne = true;
          });
          qe = n;
        }

        if (!e.fake && is_android) {
          if (Ye) {
            Ve();
            Ye = false;
            return false;
          }

          if (o(n)) {
            Ye = true;
          } else if (o(qe)) {
            Ye = false;
          }
        }

        I();
        Me = ["CTRL+V", "META+V"].indexOf(n) !== -1;

        if (e.which !== 38 && !(e.which === 80 && e.ctrlKey)) {
          Se = true;
        }

        if (l && Qe(e)) {
          me();
          ke();

          if (e.which === 27) {
            F.set("");
          }

          xe();

          if (e.which === 13) {
            Ge.call(this, e);
          }
        } else if (is_function(M[n])) {
          t = M[n](e);

          if (t === true) {
            return;
          }

          if (t !== undefined) {
            return t;
          }
        } else if (e.altKey) {
          return;
        } else {
          Re = false;
          return;
        }
      }
    }

    function Ve() {
      F.stopTime("hold");
      F.stopTime("delay");
      He = Ne = false;
    }

    var Xe = $(document.documentElement || window);
    F.keymap(x.keymap || {});

    function Ze(e) {
      debug('keypress "' + e.key + '" ' + e.fake);
      Ve();
      var t;

      if (!e.fake) {
        Le = false;
      }

      if ((e.ctrlKey || e.metaKey) && !e.altKey) {
        return;
      }

      if (Re) {
        return;
      }

      if (is_function(x.keypress)) {
        t = x.keypress.call(F, e);

        if (t !== undefined) {
          if (!t) {
            Me = true;
          }

          return t;
        }
      }

      if (d) {
        if (e.fake) {
          return;
        }

        var n;

        if (is_key_native) {
          n = e.key;
          var r = n.toUpperCase();

          if (b[r]) {
            n = b[r];
          }
        }

        if (!n || Oe) {
          n = String.fromCharCode(e.which);
        }

        if ($.inArray(e.which, [13, 0, 8]) > -1) {
          if (e.keyCode === 123) {
            return;
          }

          return false;
        } else if (n && (!e.ctrlKey || e.ctrlKey && e.ctrlKey) && (!(e.altKey && e.which === 100) || e.altKey) && !Be) {
          if (l) {
            f += n;
            de();
            pe();
          } else if (n.length === 1) {
            F.insert(n);
          }
        }
      }
    }

    function et(e, t, n) {
      var r = $.Event(e);
      r.which = n;
      r.key = t;
      r.fake = true;
      Xe.trigger(r);
    }

    var tt = false;

    function nt() {
      debug("input " + Ie + " || " + Pe + " ((" + Le + " || " + Be + ") && !" + Me + " && (" + je + " || " + Oe + ") && !" + ze + ")");
      var e = A.val();

      if (!is_mobile) {
        e = e.replace(/^ /, "");
      }

      if ((Ie || Pe || (Le || Be) && !Me && (je || Oe) && !ze) && e !== B) {
        var t = j;

        if (Ie) {
          var n = Ue;
          ze = n.slice(0, n.length - 1).length === e.length;
        }

        if (tt) {
          tt = false;
          A.val(B);
          return;
        }

        if (l) {
          f = e;
          de();
          pe();
        } else {
          var r = e.slice(j);

          if (r.length === 1 || ze) {
            var i = get_next_character(r);

            if (o(i)) {
              tt = true;
            }

            if (Ie) {
              var a;

              if (ze) {
                a = 8;
              } else {
                a = r.toUpperCase().charCodeAt(0);
              }

              et("keydown", ze ? "Backspace" : r, a);
            }

            if (Le && !ze) {
              et("keypress", i, r.charCodeAt(0));
            }
          }

          if (ze) {
            Ue = B;
            return;
          }

          if (Me) {
            Me = false;
            return;
          }

          F.set(e);
        }

        if (ze) {
          F.position(t - 1);
        } else {
          F.position(t + Math.abs(e.length - Ue.length));
        }
      }

      Ue = B;
      Me = false;
      Ie = true;
    }

    Xe.bind("keypress.cmd", Ze);
    Xe.bind("keydown.cmd", Ge);
    Xe.bind("keyup.cmd", Ve);
    Xe.bind("input.cmd", nt);

    (function () {
      var a = false;
      var o = 0;
      F.on("mousedown.cmd", function () {
        a = true;
      }).on("mouseup.cmd", function (n) {
        function e() {
          var e = $(n.target);
          var t = e.is(".cmd-prompt");

          if (!t && i && get_selected_html() === "") {
            if (d) {
              if (e.is(".cmd")) {
                F.position(text(B).length);
              } else {
                F.display_position(y(n));
              }
            }
          }

          o = 0;
        }

        var t;

        if (n.originalEvent === undefined) {
          t = n.button;
        } else {
          t = n.originalEvent.button;
        }

        if (t === 0 && get_selected_html() === "") {
          var r = "click_" + u;

          if (++o === 1) {
            var i = a;

            if (d) {
              if (x.clickTimeout === 0) {
                e();
              } else {
                F.oneTime(x.clickTimeout, r, e);
              }
            } else {
              o = 0;
            }
          } else {
            F.stopTime(r);
            o = 0;
          }
        }

        a = false;
      });
    })();

    F.data("cmd", F);

    if (!("KeyboardEvent" in window && "key" in window.KeyboardEvent.prototype)) {
      setTimeout(function () {
        throw new Error("key event property not supported try https://github." + "com/inexorabletash/polyfill/blob/master/keyboard.js");
      }, 0);
    }

    return F;
  };

  var strlen = function () {
    if (typeof wcwidth === "undefined") {
      return function (e) {
        return $.terminal.length(e);
      };
    } else {
      return wcwidth;
    }
  }();

  function count_selfclosing_formatting(e) {
    var n = 0;

    if ($.terminal.have_formatting(e)) {
      var r = new RegExp(format_parts_re, "i");
      $.terminal.format_split(e).forEach(function (e) {
        if ($.terminal.is_formatting(e)) {
          var t = e.match(r);

          if (t && t[1].match(/@/) && t[6] === "") {
            n++;
          }
        }
      });
    }

    return n;
  }

  function bare_text(e) {
    if (!e.match(/&/)) {
      return e;
    }

    return $("<span>" + safe(e) + "</span>").text();
  }

  function text(e) {
    return bare_text($.terminal.strip(e));
  }

  function safe(e) {
    if (!e.match(/[<>&]/)) {
      return e;
    }

    return e.replace(/&(?![^;]+;)/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;");
  }

  function crlf(e) {
    return e.replace(/\r/g, "");
  }

  function char_len(e) {
    return entity_re.test(e) ? 1 : e.length;
  }

  function make_re_fn(n) {
    return function (e) {
      var t = e.match(n);

      if (starts_with(t)) {
        return t[1];
      }
    };
  }

  function starts_with(e) {
    return e && e.index === 0;
  }

  function make_next_char_fun(t) {
    var i = [];
    [entity_re, emoji_re, combine_chr_re].forEach(function (e) {
      if (t.match(e)) {
        i.push(make_re_fn(e));
      }
    });

    if (t.match(astral_symbols_re)) {
      i.push(function (e) {
        var t = e.match(astral_symbols_re);

        if (starts_with(t)) {
          var n = e.match(combine_chr_re);

          if (n && n.index === 1) {
            return e.slice(0, 3);
          }

          return t[1];
        }
      });
    }

    return function (e) {
      for (var t = 0; t < i.length; ++t) {
        var n = i[t];
        var r = n(e);

        if (r) {
          return r;
        }
      }

      return e[0];
    };
  }

  function get_next_character(e) {
    var t = e.match(entity_re);

    if (starts_with(t)) {
      return t[1];
    }

    var n = e.match(combine_chr_re);

    if (starts_with(n)) {
      return n[1];
    }

    var r = e.match(emoji_re);

    if (starts_with(r)) {
      return r[1];
    } else if (e.charCodeAt(0) < 255) {
      return e[0];
    } else {
      var i = e.match(astral_symbols_re);

      if (starts_with(i)) {
        n = e.match(combine_chr_re);

        if (n && n.index === 1) {
          return e.slice(0, 3);
        }

        return e.slice(0, 2);
      } else {
        return e[0];
      }
    }
  }

  function normalize_position(e, r) {
    if (r === 0) {
      return r;
    }

    e = $.terminal.strip(e);
    var t = $.terminal.split_characters(e).reduce(function (e, t) {
      if (typeof e === "number") {
        return e;
      }

      var n = e.length + char_len(t);

      if (n >= r) {
        return e.position + 1;
      }

      return {
        position: e.position + 1,
        length: n
      };
    }, {
      position: 0,
      length: 0
    });

    if (typeof t === "number") {
      return t;
    } else {
      return t.position;
    }
  }

  function char_width_prop(e, t) {
    if (is_ch_unit_supported) {
      return "width: " + e + "ch";
    } else if (!is_css_variables_supported) {
      if (t.char_width) {
        return "width: " + t.char_width * e + "px";
      }
    } else {
      return "--length: " + e;
    }

    return "";
  }

  function extra_css(e, t) {
    if (typeof wcwidth !== "undefined") {
      var n = bare_text(e);
      var r = strlen(n);

      if (r !== $.terminal.length(n)) {
        return char_width_prop(r, t);
      }
    }

    return "";
  }

  function wide_characters(e, n) {
    if (typeof wcwidth !== "undefined") {
      var t = bare_text(e);
      var r = $.terminal.split_characters(t);

      if (r.length === 1) {
        return e;
      }

      var i = r.map(function (e) {
        return {
          len: strlen(e),
          chr: e
        };
      }).reduce(function (e, t) {
        var n = e[e.length - 1];

        if (n) {
          if (n.len !== t.len) {
            return e.concat([{
              sum: t.len,
              len: t.len,
              specs: [t]
            }]);
          } else {
            e.pop();
            return e.concat([{
              sum: n.sum + t.len,
              len: n.len,
              specs: n.specs.concat(t)
            }]);
          }
        }

        return [{
          sum: t.len,
          specs: [t],
          len: t.len
        }];
      }, []);
      return i.map(function (e) {
        if (e.len === 1) {
          return e.chr;
        }

        var t = char_width_prop(e.sum, n);

        if (e.sum === r.length || !t.length) {
          return "<span>" + a(e) + "</span>";
        } else if (e.specs.length > 1) {
          return o(t, e.specs.map(function (e) {
            return o(char_width_prop(e.len), e.chr);
          }).join(""));
        } else {
          return o(t, a(e));
        }
      }).join("");
    }

    function a(e) {
      return e.specs.map(function (e) {
        return e.chr;
      }).join("");
    }

    function o(e, t) {
      return '<span style="' + e + '">' + t + "</span>";
    }

    return e;
  }

  function binary_search(e, t, n, r, i) {
    var a = t - e;
    var o = e + Math.floor(a / 2);
    var u = [n, o].concat(i);
    var s = r.apply(null, u);

    if (s === 0) {
      return o;
    } else if (s > 0 && a > 1) {
      return binary_search(o, t, n, r, i);
    } else if (s < 0 && a > 1) {
      return binary_search(e, o, n, r, i);
    } else {
      return -1;
    }
  }

  function is_terminal_selected(e) {
    if (is_function(window.getSelection)) {
      var t = window.getSelection();

      if (t.toString()) {
        var n = t.getRangeAt(0).startContainer.parentNode;
        var r = $(n).closest(".terminal");
        return r.length && (e && r.find(".cmd").is(e) || !e);
      }
    }
  }

  function get_selected_html() {
    var e = "";

    if (is_function(window.getSelection)) {
      var t = window.getSelection();

      if (t.rangeCount) {
        var n = document.createElement("div");

        for (var r = 0, i = t.rangeCount; r < i; ++r) {
          n.appendChild(t.getRangeAt(r).cloneContents());
        }

        e = n.innerHTML;
      }
    }

    return e;
  }

  function with_selection(e) {
    var t = "";
    var n = [];

    if (is_function(window.getSelection)) {
      var r = window.getSelection();

      if (r.rangeCount) {
        var i = document.createElement("div");

        for (var a = 0, o = r.rangeCount; a < o; ++a) {
          var u = r.getRangeAt(a).cloneRange();
          n.push(u);
          i.appendChild(u.cloneContents());
        }

        t = i.innerHTML;
      }
    }

    e(t);

    if (n.length) {
      r.removeAllRanges();
      n.forEach(function (e) {
        r.addRange(e);
      });
    }

    return t !== "";
  }

  function process_selected_line() {
    var e = $(this);
    var t = e.text();

    if (e.hasClass("cmd-end-line")) {
      t += "\n";
    }

    return t;
  }

  function process_div(e) {
    return $(e).find("> div, > span").map(process_selected_line).get().join("\n").replace(/\n$/, "");
  }

  function process_selected_html(e) {
    var t;
    var n = "";
    var r = $("<div>" + e + "</div>");

    if (e.match(/<\/div>/)) {
      t = r.find("div[data-index]").map(function () {
        return process_div(this);
      }).get().join("\n");

      if (!t && e.match(/style="width: 100%;?"/)) {
        t = process_div(r);
      }

      n = t;
    }

    var i = r.find(".cmd-prompt");

    if (i.length) {
      if (n.length) {
        n += "\n";
      }

      n += i.text();
    }

    var a = r.find('[role="presentation"]');

    if (a.length) {
      n += a.map(process_selected_line).get().join("");
    }

    if (!n.length && e) {
      n = r.text();
    }

    return n.replace(/\xA0/g, " ");
  }

  var text_to_clipboard;

  if (is_function(document.queryCommandSupported) && document.queryCommandSupported("copy")) {
    text_to_clipboard = function e(t, n) {
      var r = t.val();
      var i = t.is(":focus");
      var a = t.caret();
      t.val(n).focus();
      t[0].select();
      document.execCommand("copy");
      t.val(r);

      if (i) {
        t.caret(a);
      }

      return true;
    };
  } else {
    text_to_clipboard = $.noop;
  }

  var get_textarea_selection = function () {
    var e = document.createElement("textarea");
    var t = ("selectionStart" in e);
    e = null;

    if (t) {
      return function (e) {
        var t = e.selectionEnd - e.selectionStart;
        return e.value.substr(e.selectionStart, t);
      };
    } else if (document.selection) {
      return function () {
        var e = document.selection.createRange();
        return e.text();
      };
    } else {
      return function () {
        return "";
      };
    }
  }();

  function clear_textarea_selection(e) {
    e.selectionStart = e.selectionEnd = 0;
  }

  function common_string(e, t, n) {
    if (!t.length) {
      return "";
    }

    var r = string_case(e);
    var i = [];

    for (var a = e.length; a < t[0].length; ++a) {
      var o = false;
      var u = t[0].charAt(a),
          s = u.toLowerCase();

      for (var l = 1; l < t.length; ++l) {
        o = true;
        var f = t[l].charAt(a),
            c = f.toLowerCase();

        if (u !== f) {
          if (n || r === "mixed") {
            o = false;
            break;
          } else if (s === c) {
            if (r === "lower") {
              u = u.toLowerCase();
            } else if (r === "upper") {
              u = u.toUpperCase();
            } else {
              o = false;
              break;
            }
          } else {
            o = false;
            break;
          }
        }
      }

      if (o) {
        i.push(u);
      } else {
        break;
      }
    }

    return e + i.join("");
  }

  function trigger_terminal_change(t) {
    terminals.forEach(function (e) {
      e.settings().onTerminalChange.call(e, t);
    });
  }

  var select = function () {
    if (window.getSelection) {
      var e = window.getSelection();

      if (e.setBaseAndExtent) {
        return function (e, t) {
          var n = window.getSelection();
          n.setBaseAndExtent(e, 0, t, 1);
        };
      } else {
        return function (e, t) {
          var n = window.getSelection();
          var r = document.createRange();
          r.setStart(e, 0);
          r.setEnd(t, t.childNodes.length);
          n.removeAllRanges();
          n.addRange(r);
        };
      }
    } else {
      return $.noop;
    }
  }();

  function process_command(e, t) {
    var n = e.match(command_re) || [];

    if (n.length) {
      var r = n.shift();
      var i = $.map(n, function (e) {
        if (e.match(/^["']/)) {
          e = e.replace(/\n/g, "\\u0000\\u0000\\u0000\\u0000");
          e = t(e);
          return e.replace(/\x00\x00\x00\x00/g, "\n");
        }

        return t(e);
      });
      var a = $.map(n, function (e) {
        var t = e.match(/^(['"]).*\1$/);
        return t && t[1] || "";
      });
      var o = e.slice(r.length).trim();
      return {
        command: e,
        name: r,
        args: i,
        args_quotes: a,
        rest: o
      };
    } else {
      return {
        command: e,
        name: "",
        args: [],
        args_quotes: a,
        rest: ""
      };
    }
  }

  $.terminal = {
    version: "2.14.1",
    date: "Mon, 24 Feb 2020 12:40:29 +0000",
    color_names: ["transparent", "currentcolor", "black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "green", "greenyellow", "grey", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen", "rebeccapurple"],
    Cycle: Cycle,
    History: History,
    Stack: Stack,
    valid_color: function e(t) {
      if (t.match(color_hex_re)) {
        return true;
      } else {
        return $.inArray(t.toLowerCase(), $.terminal.color_names) !== -1;
      }
    },
    unclosed_strings: function e(t) {
      return !!t.match(unclosed_strings_re);
    },
    escape_regex: function e(t) {
      if (typeof t === "string") {
        var n = /([-\\^$[\]()+{}?*.|])/g;
        return t.replace(n, "\\$1");
      }
    },
    have_formatting: function e(t) {
      return typeof t === "string" && !!t.match(format_exist_re);
    },
    is_formatting: function e(t) {
      return typeof t === "string" && !!t.match(format_full_re);
    },
    format_split: function e(t) {
      return t.split(format_split_re).filter(Boolean);
    },
    tracking_replace: function e(t, n, r, i) {
      if (!(n instanceof RegExp)) {
        throw new Error("tracking_replace: Second argument need to be RegExp");
      }

      function a(e, t, n) {
        return e.slice(t, n);
      }

      function o(e) {
        return $.terminal.strip(e).length;
      }

      var u = "";
      var s;
      var l = 0;
      var f;
      var c = i;
      var p;
      n.lastIndex = 0;

      while (s = n.exec(t)) {
        if (n.global) {
          var m = o(a(t, 0, n.lastIndex));
          p = m - o(s[0]);
        } else {
          p = s.index;
          m = p + o(s[0]);
        }

        if (l < p) {
          u += a(t, l, p);
        }

        l = m;

        if (typeof r === "function") {
          f = r.apply(null, s);
        } else {
          f = r.replace(/\$(\$|\d)/g, function (e, t) {
            if (t === "$") {
              return "$";
            }

            return s[t];
          });
        }

        u += f;

        if (p < i) {
          var d = o(f);
          d += count_selfclosing_formatting(f);

          if (m < i) {
            c = Math.max(0, c + d - o(s[0]));
          } else {
            c += d - (i - p);
          }
        }

        if (!n.global) {
          break;
        }
      }

      if (l < o(t)) {
        u += a(t, l);
      }

      if (t === u) {
        return [t, i];
      }

      return [u, c];
    },
    iterate_formatting: function e(t, n) {
      function r(e) {
        return t.slice(e - 6, e) === "&nbsp;" || t.slice(e - 1, e).match(/\s/);
      }

      function i(e) {
        return t.slice(e).match(entity_re);
      }

      function a(e) {
        return t[e] === "[" && t[e + 1] === "[";
      }

      function o(e) {
        return t[e - 1] !== "\\" && t[e] === "\\" && t[e + 1] === "]";
      }

      function u(e) {
        return F && (t[e] !== "]" || !m) && !k;
      }

      var s = make_next_char_fun(t);

      function l() {
        var e = s(x);

        if (e.length > 1 && $.terminal.length(x) > 1) {
          return e.length - 1;
        }

        return 0;
      }

      function f() {
        return r(E) && (F || k) && (g === -1 && y !== E || g !== -1);
      }

      var c = false;

      function p() {
        if (E === t.length - 1 && !c) {
          c = true;
        } else {
          c = !!x.match(/^.]$/);
        }

        return c;
      }

      var m = $.terminal.have_formatting(t);
      var d = "";
      var h = false;
      var D = 0;
      var v;
      var g = -1;

      var _ = -1;

      var y;
      var b = 0;
      var w = 0;
      var C = /(&[^;]+);$/;

      for (var E = 0; E < t.length; E++) {
        var x = t.slice(E);
        v = x.match(format_start_re);

        if (v) {
          d = v[1];
          h = false;
        } else if (d) {
          if (t[E] === "]") {
            if (h) {
              d = "";
              h = false;
            } else {
              h = true;
            }
          }
        } else {
          h = true;
        }

        var F = d && h || !d;
        var k = a(E);

        if (f()) {
          g = E;
          _ = D;
        }

        var A = t[E].match(/[[\]]/);
        w = 0;

        if (F) {
          if (t[E] === "&") {
            v = i(E);

            if (v) {
              E += v[1].length - 2;
              continue;
            }

            ++D;
            ++b;
          } else if (o(E)) {
            ++D;
            ++b;
            w = 1;
            E += 1;
          } else if (!A || !m) {
            ++D;
            ++b;
          }
        }

        if (u(E)) {
          if (strlen(t[E]) === 2) {
            b++;
          }

          var T = s(x);
          var S = T.length;

          if (T === ";") {
            v = t.slice(0, E + 1).match(C);

            if (v) {
              w = v[1].length;
              S = w + 1;
            }
          }

          var R = {
            last: p(),
            count: D,
            index: E - w,
            formatting: d,
            length: b,
            text: h,
            size: S,
            space: g,
            space_count: _
          };
          var B = n(R);

          if (B === false) {
            break;
          } else if (B) {
            if (B.count !== undefined) {
              D = B.count;
            }

            if (B.length !== undefined) {
              b = B.length;
            }

            if (B.space !== undefined) {
              y = g;
              g = B.space;
            }

            if (B.index !== undefined) {
              E = B.index;
              continue;
            }
          }
        } else if (E === t.length - 1 && !c) {
          n({
            count: D + 1,
            index: E,
            formatting: d,
            length: 0,
            text: h,
            space: g
          });
        }

        if (h) {
          E += l();
        }
      }
    },
    partition: function e(n) {
      if (!$.terminal.have_formatting(n)) {
        var t = $.terminal.split_characters(n);
        return t.map(i);
      }

      var r = [];

      function i(e) {
        if (e.match(/\\$/)) {
          e += "\\";
        }

        return "[[;;]" + e + "]";
      }

      function a(e) {
        if ($.terminal.is_formatting(e)) {
          if (e.match(/\\]$/)) {
            e = e.replace(/\\]/g, "\\\\]");
          }
        } else {
          e = i(e);
        }

        return e;
      }

      $.terminal.iterate_formatting(n, function (e) {
        if (e.text) {
          var t = [];

          if (e.formatting) {
            t.push(e.formatting);
          }

          t.push(n.substring(e.index, e.index + e.size));

          if (e.formatting) {
            t.push("]");
          }

          r.push(a(t.join("")));
        }
      });
      return r;
    },
    substring: function e(t, n, r) {
      var i = $.terminal.split_characters(t);

      if (!i.slice(n, r).length) {
        return "";
      }

      if (!$.terminal.have_formatting(t)) {
        return i.slice(n, r).join("");
      }

      var a = 0;
      var o;
      var u = "";
      var s = "";
      var l;
      var f = 1;
      $.terminal.iterate_formatting(t, function (e) {
        if (n && e.count === n + 1) {
          a = e.index;

          if (e.formatting) {
            u = e.formatting;
          }
        }

        if (r && e.count === r) {
          s = e.formatting;
          l = e.index;
          f = e.size;
        }

        if (e.count === r + 1) {
          o = e.index;

          if (e.formatting) {
            o = l + f;
          }
        }
      });

      if (n && !a) {
        return "";
      }

      if (o === undefined) {
        o = t.length;
      }

      t = u + t.slice(a, o);

      if (s) {
        t = t.replace(/(\[\[^\]]+)?\]$/, "");
        t += "]";
      }

      return t;
    },
    normalize: function e(t) {
      t = t.replace(format_re, function (e, t, n) {
        if (t.match(self_closing_re) && n === "") {
          return "[[" + t + "] ]";
        }

        if (n === "") {
          return "";
        }

        function r(e) {
          return e.replace(/\\\]/g, "&#93;").replace(/\n/g, "\\n").replace(/&nbsp;/g, " ");
        }

        t = r(t);
        var i = t.match(/;/g).length;

        if (i >= 4) {
          var a = t.split(/;/);
          var o = a.slice(0, 4).join(";");
          var u = a.slice(4).join(";");
          return "[[" + o + ";" + (u || n) + "]" + n + "]";
        } else if (i === 2) {
          i = ";;";
        } else if (i === 3) {
          i = ";";
        }

        t += i + r(n);
        return "[[" + t + "]" + n + "]";
      });
      return $.terminal.amp(t);
    },
    split_equal: function e(t, c, p) {
      var m = "";
      var d = [];
      var n = $.terminal.normalize(t).split(/\n/g);

      for (var r = 0, i = n.length; r < i; ++r) {
        if (n[r] === "") {
          d.push("");
          continue;
        }

        var h = n[r];
        var D = make_next_char_fun(h);
        var v = 0;
        var g;
        var _ = h.length;
        var y = !!h.match(/\[\[[^\]]+\](?:[^\][]|\\\])+\]$/);
        $.terminal.iterate_formatting(h, function (e) {
          var t, n;

          if (e.length >= c || e.last || e.length === c - 1 && strlen(h[e.index + 1]) === 2) {
            var r = false;

            if (p && e.space !== -1) {
              var i = text(h).substring(e.space_count);
              i = i.slice(0, c).trim();
              var a = strlen(i);

              if (i.match(/\s/) || a < c) {
                r = true;
              }
            }

            var o = e.index + e.size;

            if (y) {
              o += 1;
            }

            var u;

            if (p && e.space !== -1 && o !== _ && r) {
              g = h.slice(v, e.space);
              u = e.space - 1;
            } else {
              n = h.slice(e.index);
              t = D(n);
              g = h.slice(v, e.index) + t;

              if (e.last && y && t !== "]") {
                g += "]";
              }

              u = e.index + t.length - 1;
            }

            if (p) {
              g = g.replace(/^(&nbsp;|\s)+|(&nbsp;|\s)+$/g, "");
            }

            v = (u || e.index) + 1;

            if (m) {
              var s = g.match(/^[^\]]*\]/);
              g = m + g;

              if (s) {
                m = "";
              }
            }

            var l = g.match(format_re);

            if (l) {
              var f = l[l.length - 1];

              if (f[f.length - 1] !== "]") {
                m = f.match(format_begin_re)[1];
                g += "]";
              } else if (g.match(format_end_re)) {
                g = g.replace(format_end_re, "");
                m = f.match(format_begin_re)[1];
              }
            }

            d.push(g);
            return {
              index: u,
              length: 0,
              space: -1
            };
          }
        });
      }

      return d;
    },
    amp: function e(t) {
      return t.replace(/&(?!#[0-9]+;|#x[0-9a-f]+;|[a-z]+;)/gi, "&amp;");
    },
    encode: function e(t, n) {
      var s = $.extend({
        tabs: 4,
        before: ""
      }, n);
      return $.terminal.amp(t).replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/ /g, "&nbsp;").split("\n").map(function (e) {
        var u = e.split(/((?:\[\[[^\]]+\])?\t(?:\])?)/);
        u = u.filter(Boolean);
        return u.map(function (e, o) {
          if (e.match(/\t/)) {
            return e.replace(/\t([^\t]*)$/, function (e, t) {
              if (o !== 0 && u[o - 1].match(/\t\]?$/)) {
                var n = new Array(s.tabs + 1).join("&nbsp;");
                return n + t;
              } else {
                var r = u.slice(o - 1, o).join("");

                if (s.before && o <= 1) {
                  r = s.before + r;
                }

                var i = $.terminal.length(r);
                var a = s.tabs - i % s.tabs;

                if (a === 0) {
                  a = 4;
                }

                return new Array(a + 1).join("&nbsp;") + t;
              }
            });
          }

          return e;
        }).join("");
      }).join("\n");
    },
    nested_formatting: function e(t) {
      if (!$.terminal.have_formatting(t)) {
        return t;
      }

      var a = [];
      var n = /((?:\[\[(?:[^\][]|\\\])+\])?(?:[^\][]|\\\])*\]?)/;
      var o = /\[\[([^\][]+)\][\s\S]*/;
      var u = /^\[\[([^;]*);([^;]*);([^\]]*)\]/;

      function s(e) {
        var t = [[], "", ""];

        if (!e.length) {
          return t;
        }

        for (var n = e.length; n--;) {
          var r = e[n].split(";");
          var i = r[0].split(/(-?[@!gbiuso])/g).filter(Boolean);
          i.forEach(function (e) {
            if (t[0].indexOf(e) === -1) {
              t[0].push(e);
            }
          });

          for (var a = 1; a < t.length; ++a) {
            var o = r[a].trim();

            if (o && !t[a]) {
              t[a] = o;
            }
          }
        }

        var u = t[0].filter(function (e) {
          return e[0] === "-";
        }).map(function (e) {
          return e[1];
        });
        t[0] = t[0].filter(function (e) {
          return u.indexOf(e) === -1 && u.indexOf(e[1]) === -1;
        }).join("");
        return t.join(";");
      }

      return t.split(n).filter(Boolean).map(function (e) {
        var t;

        if (e.match(/^\[\[/)) {
          var n = e.replace(o, "$1");
          var r = $.terminal.is_formatting(e);
          e = e.replace(u, "");
          a.push(n);

          if ($.terminal.nested_formatting.__inherit__) {
            t = s(a);
          } else {
            t = n;
          }

          if (!r) {
            e += "]";
          } else {
            a.pop();
          }

          e = "[[" + t + "]" + e;
        } else {
          var i = false;

          if (e.match(/\]/)) {
            i = true;
          }

          if (a.length) {
            if ($.terminal.nested_formatting.__inherit__) {
              t = s(a);
            } else {
              t = a[a.length - 1];
            }

            e = "[[" + t + "]" + e;
          }

          if (i) {
            a.pop();
          } else if (a.length) {
            e += "]";
          }
        }

        return e;
      }).join("");
    },
    escape_formatting: function e(t) {
      return $.terminal.escape_brackets(t);
    },
    apply_formatters: function e(t, i) {
      if (t === "") {
        if (i && typeof i.position === "number") {
          return ["", i.position];
        } else {
          return "";
        }
      }

      function a(e, t, n, r) {
        if (!e.__no_warn__ && $.terminal.length(n) !== $.terminal.length(r)) {
          warn("Your formatter[" + t + "] change length of the string, " + "you should use [regex, replacement] formatter or function " + " that return [replacement, position] instead");
        }
      }

      var n = $.terminal.defaults.formatters;
      i = i || {};
      var f = 0;

      function c(e, t) {
        var n = $.extend({}, i, {
          position: t[1]
        });
        var r = e(t[0], n);

        if (typeof r === "string") {
          a(e, f - 1, r, t[0]);

          if (typeof r === "string") {
            return [r, n.position];
          }

          return t;
        } else if (is_array(r) && r.length === 2) {
          return r;
        } else {
          return t;
        }
      }

      var r;

      if (typeof i.position === "number") {
        r = [t, i.position];
      } else {
        r = [t, 0];
      }

      try {
        var o = n.reduce(function (o, u) {
          f++;

          if (typeof u === "function" && u.__meta__) {
            return c(u, o);
          } else {
            var s = 0;
            var l = false;
            var e = $.terminal.format_split(o[0]);
            var t = e.map(function (e) {
              var t;
              var n = text(e).length;

              if (o[1] <= s + n && !l) {
                t = o[1] - s;
                l = true;
              } else {
                t = -1;
              }

              var r = s;
              var i;
              s += n;

              if ($.terminal.is_formatting(e)) {
                return [e, -1];
              } else {
                if (is_array(u)) {
                  var a = u[2] || {};
                  i = [e, t < 0 ? 0 : t];

                  if (i[0].match(u[0])) {
                    if (a.loop) {
                      while (i[0].match(u[0])) {
                        i = $.terminal.tracking_replace(i[0], u[0], u[1], i[1]);
                      }
                    } else {
                      i = $.terminal.tracking_replace(i[0], u[0], u[1], i[1]);
                    }
                  }

                  if (t < 0) {
                    return [i[0], -1];
                  }
                } else if (typeof u === "function") {
                  i = c(u, [e, t]);
                }

                if (typeof i !== "undefined") {
                  if (i[1] !== -1) {
                    i[1] += r;
                  }

                  return i;
                }

                return [e, -1];
              }
            });
            var n = t.filter(function (e) {
              return e[1] !== -1;
            })[0];
            var r = t.map(function (e) {
              return e[0];
            }).join("");
            var i;

            if (typeof n === "undefined") {
              i = o[1];
            } else {
              i = n[1];
            }

            var a = text(r).length;
            a += count_selfclosing_formatting(r);

            if (i > a) {
              i = a;
            }

            if (r === o[0]) {
              return o;
            }

            return [r, i];
          }
        }, r);

        if (typeof i.position === "number") {
          var u = $.terminal.strip(o[0]).length;

          if ($.terminal.length(o[0]) < u) {
            var s = o[1];
            s = normalize_position(o[0], s);
            var l = $.terminal.length(o[0]);

            if (s > l) {
              s = l;
            }

            o[1] = s;
          }

          return o;
        } else {
          return o[0];
        }
      } catch (e) {
        var p = "Error in formatter [" + (f - 1) + "]";
        n.splice(f - 1);
        throw new $.terminal.Exception("formatting", p, e.stack);
      }
    },
    format: function n(e, t) {
      var h = $.extend({}, {
        linksNoReferrer: false,
        linksNoFollow: false,
        allowedAttributes: [],
        char_width: undefined,
        escape: true,
        anyLinks: false
      }, t || {});

      function r(e) {
        if (e.length && h.allowedAttributes.length) {
          return e.filter(function (e) {
            if (e === "data-text") {
              return false;
            }

            var t = false;
            var n = h.allowedAttributes;

            for (var r = 0; r < n.length; ++r) {
              if (n[r] instanceof RegExp) {
                if (n[r].test(e)) {
                  t = true;
                  break;
                }
              } else if (n[r] === e) {
                t = true;
                break;
              }
            }

            return t;
          });
        }

        return [];
      }

      function D(e, t) {
        if (e === "") {
          return t;
        } else {
          return e.replace(/&#93;/g, "]").replace(/>/g, "&gt;").replace(/</g, "&lt;");
        }
      }

      function v(n) {
        if (n) {
          var e = r(Object.keys(n));

          if (e.length) {
            return " " + e.map(function (e) {
              var t = n[e].replace(/"/g, "&quot;");
              return e + '="' + t + '"';
            }).join(" ");
          }
        }

        return "";
      }

      function g() {
        var e = ["noopener"];

        if (h.linksNoReferrer) {
          e.unshift("noreferrer");
        }

        if (h.linksNoFollow) {
          e.unshift("nofollow");
        }

        return e;
      }

      function i(e) {
        return e.match(/^\.{1,2}\//) || e.match(/^\//) || !(e.match(/\//) || e.match(/^[^:]+:/));
      }

      function a(n) {
        return function (e) {
          if (h.anyLinks) {
            return true;
          }

          var t = n(e);

          if (!t) {
            warn("Invalid URL " + e + " only https ftp and Path " + "are allowed");
          }

          return t;
        };
      }

      var _ = a(function (e) {
        return e.match(/^((https?|ftp):\/\/|\.{0,2}\/)/) || i(e);
      });

      var y = a(function (e) {
        return e.match(/^(https?:|blob:|data:)/) || i(e);
      });

      function n(e, t, n, r, i, a, o) {
        var u;

        if (a.match(/;/)) {
          try {
            var s = a.split(";");
            var l = s.slice(1).join(";").replace(/&nbsp;/g, " ").replace(/&lt;/g, "<").replace(/&gt;/g, ">");

            if (l.match(/^\s*\{[^}]*\}\s*$/)) {
              u = JSON.parse(l);
              a = s[0];
            }
          } catch (e) {}
        }

        if (o === "" && !t.match(/@/)) {
          return "";
        }

        o = safe(o);
        o = o.replace(/\\\]/g, "&#93;");

        if (h.escape) {
          o = o.replace(/\\\\/g, "\\");
        }

        var f = "";

        if (t.indexOf("b") !== -1) {
          f += "font-weight:bold;";
        }

        var c = [];

        if (t.indexOf("u") !== -1) {
          c.push("underline");
        }

        if (t.indexOf("s") !== -1) {
          c.push("line-through");
        }

        if (t.indexOf("o") !== -1) {
          c.push("overline");
        }

        if (c.length) {
          f += "text-decoration:" + c.join(" ") + ";";
        }

        if (t.indexOf("i") !== -1) {
          f += "font-style:italic;";
        }

        if ($.terminal.valid_color(n)) {
          f += "color:" + n + ";" + "--color:" + n + ";";

          if (t.indexOf("!") !== -1) {
            f += "--link-color:" + n + ";";
          }

          if (t.indexOf("g") !== -1) {
            f += "text-shadow:0 0 5px " + n + ";";
          }
        }

        if ($.terminal.valid_color(r)) {
          f += "background-color:" + r + ";";
        }

        var p = D(a, o);
        var m = extra_css(o, h);

        if (m) {
          o = wide_characters(o, h);
          f += m;
        }

        var d;

        if (t.indexOf("!") !== -1) {
          if (p.match(email_re)) {
            d = '<a href="mailto:' + p + '"';
          } else {
            if (!_(p)) {
              p = "";
            }

            d = '<a target="_blank"';

            if (p) {
              d += ' href="' + p + '"';
            }

            d += ' rel="' + g().join(" ") + '"';
          }

          d += ' tabindex="1000"';
        } else if (t.indexOf("@") !== -1) {
          d = "<img";

          if (y(p)) {
            d += ' src="' + p + '"';
          }
        } else {
          d = "<span";
        }

        d += v(u);

        if (f !== "") {
          d += ' style="' + f + '"';
        }

        if (i !== "") {
          d += ' class="' + i + '"';
        }

        if (t.indexOf("!") !== -1) {
          d += " data-text>" + o + "</a>";
        } else if (t.indexOf("@") !== -1) {
          d += " data-text/>";
        } else {
          d += ' data-text="' + p.replace(/"/g, "&quot;") + '">' + o + "</span>";
        }

        return d;
      }

      if (typeof e === "string") {
        var o = $.terminal.format_split(e);
        e = $.map(o, function (e) {
          if (e === "") {
            return e;
          } else if ($.terminal.is_formatting(e)) {
            e = e.replace(/\[\[[^\]]+\]/, function (e) {
              return e.replace(/&nbsp;/g, " ");
            });
            return e.replace(format_parts_re, n);
          } else {
            e = safe(e);
            e = e.replace(/\\\]/, "&#93;");
            var t = extra_css(e, h);

            if (t.length) {
              e = wide_characters(e, h);
              return '<span style="' + t + '">' + e + "</span>";
            } else {
              return "<span>" + e + "</span>";
            }
          }
        }).join("");
        return e.replace(/<span><br\s*\/?><\/span>/gi, "<br/>");
      } else {
        return "";
      }
    },
    escape_brackets: function e(t) {
      return t.replace(/\[/g, "&#91;").replace(/\]/g, "&#93;");
    },
    unescape_brackets: function e(t) {
      return t.replace(/&#91;/g, "[").replace(/&#93;/g, "]");
    },
    length: function length(e, t) {
      return $.terminal.split_characters(t ? e : text(e)).length;
    },
    split_characters: function e(t) {
      var n = [];
      var r = make_next_char_fun(t);

      while (t.length) {
        var i = r(t);
        t = t.slice(i.length);
        n.push(i);
      }

      return n;
    },
    columns: function columns(e, t, n) {
      var r = e.map(function (e) {
        return $.terminal.strip(e);
      });
      var i = r.map(function (e) {
        return strlen(e);
      });

      if (typeof n === "undefined") {
        n = 4;
      }

      var a = Math.max.apply(null, i) + n;
      var o = Math.floor(t / a) - 1;

      if (o < 1) {
        return e.join("\n");
      }

      var u = [];

      for (var s = 0, l = e.length; s < l; s += o) {
        var f = e.slice(s, s + o);
        var c = f.pop();
        u.push(f.reduce(function (e, t) {
          var n = $.terminal.strip(t);
          var r = new Array(a - n.length + 1).join(" ");
          e.push(t + r);
          return e;
        }, []).join("") + c);
      }

      return u.join("\n");
    },
    strip: function e(t) {
      t = t.replace(format_parts_re, "$6");
      return t.replace(/\\([[\]])/g, function (e, t) {
        return t;
      });
    },
    active: function e() {
      return terminals.front();
    },
    last_id: function e() {
      var t = terminals.length();
      return t - 1;
    },
    parse_argument: function e(t, n) {
      function r(e) {
        return e.split(string_re).map(function (e) {
          if (e.match(/^['"]/)) {
            if (e === '""' || e === "''") {
              return "";
            }

            var t = e[0];
            var n = new RegExp("(^|(?:\\\\(?:\\\\)*)?)" + t, "g");
            e = e.replace(n, "$1");
          }

          e = '"' + e + '"';
          return JSON.parse(e);
        }).join("");
      }

      if (n === false) {
        if (t[0] === "'" && t[t.length - 1] === "'") {
          return t.replace(/^'|'$/g, "");
        } else if (t[0] === '"' && t[t.length - 1] === '"') {
          return t.replace(/^"|"$/g, "").replace(/\\([" ])/g, "$1");
        } else if (t.match(/\/.*\/[gimy]*$/)) {
          return t;
        } else if (t.match(/['"]]/)) {
          return r(t);
        } else {
          return t.replace(/\\ /g, " ");
        }
      }

      var i = t.match(re_re);

      if (i) {
        return new RegExp(i[1], i[2]);
      } else if (t.match(/['"]/)) {
        return r(t);
      } else if (t.match(/^-?[0-9]+$/)) {
        return parseInt(t, 10);
      } else if (t.match(float_re)) {
        return parseFloat(t);
      } else {
        return t.replace(/\\(['"() ])/g, "$1");
      }
    },
    parse_arguments: function e(t) {
      return $.map(t.match(command_re) || [], $.terminal.parse_argument);
    },
    split_arguments: function e(t) {
      return $.map(t.match(command_re) || [], function (e) {
        return $.terminal.parse_argument(e, false);
      });
    },
    parse_command: function e(t) {
      return process_command(t, $.terminal.parse_argument);
    },
    split_command: function e(t) {
      return process_command(t, function (e) {
        return $.terminal.parse_argument(e, false);
      });
    },
    parse_options: function e(t, n) {
      var o = $.extend({}, {
        "boolean": []
      }, n);

      if (typeof t === "string") {
        return e($.terminal.split_arguments(t), n);
      }

      var u = {
        _: []
      };

      function s(e) {
        this.value = e;
      }

      var r = t.reduce(function (e, t) {
        var n = typeof t === "string" ? t : "";

        if (n.match(/^-/) && e instanceof s) {
          u[e.value] = true;
        }

        if (n.match(/^--/)) {
          var r = n.replace(/^--/, "");

          if (o["boolean"].indexOf(r) === -1) {
            return new s(r);
          } else {
            u[r] = true;
          }
        } else if (n.match(/^-/)) {
          var i = n.replace(/^-/, "").split("");

          if (o["boolean"].indexOf(i.slice(-1)[0]) === -1) {
            var a = i.pop();
          }

          i.forEach(function (e) {
            u[e] = true;
          });

          if (a) {
            return new s(a);
          }
        } else if (e instanceof s) {
          u[e.value] = t;
        } else if (t) {
          u._.push(t);
        }

        return null;
      }, null);

      if (r instanceof s) {
        u[r.value] = true;
      }

      return u;
    },
    extended_command: function extended_command(term, string, options) {
      var settings = $.extend({
        invokeMethods: false
      }, options);

      try {
        change_hash = false;
        var m = string.match(extended_command_re);

        if (m) {
          if (!settings.invokeMethods) {
            warn("To invoke terminal or cmd methods you need to enable " + "invokeMethods option");
            return;
          }

          string = m[1];
          var obj = m[2] === "terminal" ? term : term.cmd();
          var fn = m[3];

          try {
            var args = eval("[" + m[4] + "]");

            if (!obj[fn]) {
              term.error("Unknow function " + fn);
            } else {
              obj[fn].apply(term, args);
            }
          } catch (e) {
            term.error("Invalid invocation in " + $.terminal.escape_brackets(string));
          }
        } else {
          term.exec(string, true).done(function () {
            change_hash = true;
          });
        }
      } catch (e) {}
    },
    iterator: function iterator(t) {
      function n(e) {
        if ($.terminal.is_formatting(e)) {
          if (e.match(/\]\\\]/)) {
            e = e.replace(/\]\\\]/g, "]\\\\]");
          }
        }

        return e;
      }

      if (typeof Symbol === "function" && _typeof(Symbol.iterator) === "symbol") {
        var r = $.terminal.length(t);
        var i = 0;
        var e = {};

        e[Symbol.iterator] = function () {
          return {
            next: function next() {
              if (i < r) {
                var e = $.terminal.substring(t, i, i + 1);
                i++;
                return {
                  value: n(e)
                };
              } else {
                return {
                  done: true
                };
              }
            }
          };
        };

        return e;
      }
    },
    formatter: new function () {
      try {
        this[Symbol.split] = function (e) {
          return $.terminal.format_split(e);
        };

        this[Symbol.match] = function (e) {
          return e.match(format_re);
        };

        this[Symbol.replace] = function (e, t) {
          return e.replace(format_parts_re, t);
        };

        this[Symbol.search] = function (e) {
          return e.search(format_re);
        };
      } catch (e) {}
    }(),
    new_formatter: function new_formatter(e) {
      var t = $.terminal.defaults.formatters;

      for (var n = 0; n < t.length; ++n) {
        if (t[n] === $.terminal.nested_formatting) {
          t.splice(n, 0, e);
          return;
        }
      }

      t.push(e);
    }
  };

  $.terminal.Exception = function e(t, n, r) {
    if (arguments.length === 1) {
      this.message = arguments[0];
      this.type = "TERMINAL";
    } else {
      this.type = t;
      this.message = n;

      if (r) {
        this.stack = r;
      }
    }
  };

  $.terminal.Exception.prototype = new Error();

  $.terminal.Exception.prototype.toString = function () {
    return this.message + "\n" + this.stack;
  };

  $.fn.visible = function () {
    return this.css("visibility", "visible");
  };

  $.fn.hidden = function () {
    return this.css("visibility", "hidden");
  };

  var warnings = [];

  function warn(e) {
    e = "[jQuery Terminal] " + e;

    if (warnings.indexOf(e) === -1) {
      warnings.push(e);

      if (console) {
        if (console.warn) {
          console.warn(e);
        } else if (console.log) {
          console.log(e);
        }
      } else {
        setTimeout(function () {
          throw new Error("WARN: " + e);
        }, 0);
      }
    }
  }

  var ids = {};

  $.jrpc = function (e, t, n, r, i) {
    var o = new $.Deferred();
    var u;

    if ($.isPlainObject(e)) {
      u = e;
    } else {
      u = {
        url: e,
        method: t,
        params: n,
        success: r,
        error: i
      };
    }

    function s(e) {
      return $.isNumeric(e.id) && (typeof e.result !== "undefined" || typeof e.error !== "undefined");
    }

    ids[u.url] = ids[u.url] || 0;
    var a = {
      jsonrpc: "2.0",
      method: u.method,
      params: u.params,
      id: ++ids[u.url]
    };
    $.ajax({
      url: u.url,
      beforeSend: function e(t, n) {
        if (is_function(u.request)) {
          u.request(t, a);
        }

        n.data = JSON.stringify(a);
      },
      success: function e(t, n, r) {
        var i = r.getResponseHeader("Content-Type");

        if (!i.match(/(application|text)\/json/)) {
          warn("Response Content-Type is neither application/json" + " nor text/json");
        }

        var a;

        try {
          a = JSON.parse(t);
        } catch (e) {
          if (u.error) {
            u.error(r, "Invalid JSON", e);
          } else {
            throw new $.terminal.Exception("JSON", "Invalid JSON", e.stack);
          }

          o.reject({
            message: "Invalid JSON",
            response: t
          });
          return;
        }

        if (is_function(u.response)) {
          u.response(r, a);
        }

        if (s(a) || u.method === "system.describe") {
          if (u.success) {
            u.success(a, n, r);
          }

          o.resolve(a);
        } else {
          if (u.error) {
            u.error(r, "Invalid JSON-RPC");
          }

          o.reject({
            message: "Invalid JSON-RPC",
            response: t
          });
        }
      },
      error: u.error,
      contentType: "application/json",
      dataType: "text",
      async: true,
      cache: false,
      type: "POST"
    });
    return o.promise();
  };

  function terminal_ready(e) {
    return !!(e.closest("body").length && e.is(":visible") && e.find(".cmd-prompt").length);
  }

  function get_char_size(e) {
    var t;

    if (terminal_ready(e)) {
      var n = e.find(".cmd-prompt").clone().css({
        visiblity: "hidden",
        position: "absolute"
      });
      n.appendTo(e.find(".cmd")).html("&nbsp;");
      t = n[0].getBoundingClientRect();
      n.remove();
    } else {
      var r = $('<div class="terminal terminal-temp"><div class="terminal-' + 'wrapper"><div class="terminal-output"><div><div class="te' + 'rminal-line" style="float: left"><span>&nbsp;</span></div' + "></div></div></div>").appendTo("body");
      r.addClass(e.attr("class")).attr("id", e.attr("id"));

      if (e) {
        var i = e.attr("style");

        if (i) {
          i = i.split(/\s*;\s*/).filter(function (e) {
            return !e.match(/display\s*:\s*none/i);
          }).join(";");
          r.attr("style", i);
        }
      }

      t = r.find(".terminal-line")[0].getBoundingClientRect();
    }

    var a = {
      width: t.width,
      height: t.height
    };

    if (r) {
      r.remove();
    }

    return a;
  }

  function get_num_chars(e, t) {
    var n = e.find(".terminal-fill").width();
    var r = Math.floor(n / t.width);
    return r || 1e3;
  }

  function get_num_rows(e, t) {
    var n = e.find(".terminal-fill").height();
    return Math.floor(n / t.height);
  }

  function all(e, t) {
    var n = e.filter(function (e) {
      return e[t]() === e;
    });
    return n.length === e.length;
  }

  function string_case(e) {
    var t = e.split("");

    if (all(t, "toLowerCase")) {
      return "lower";
    } else if (all(t, "toUpperCase")) {
      return "upper";
    } else {
      return "mixed";
    }
  }

  function same_case(e) {
    return string_case(e) !== "mixed";
  }

  function is_function(e) {
    return get_type(e) === "function";
  }

  function is_promise(e) {
    return is_function(e && (e.then || e.done));
  }

  function is_array(e) {
    return get_type(e) === "array";
  }

  function get_type(e) {
    return typeof e === "function" ? "function" : $.type(e);
  }

  var version_set = !$.terminal.version.match(/^\{\{/);
  var copyright = "Copyright (c) 2011-2019 Jakub T. Jankiewicz " + "<https://jcubic.pl/me>";
  var version_string = version_set ? " v. " + $.terminal.version : " ";
  var reg = new RegExp(" {" + version_string.length + "}$");
  var name_ver = "jQuery Terminal Emulator" + (version_set ? version_string : "");
  var signatures = [["jQuery Terminal", "(c) 2011-2019 jcubic"], [name_ver, copyright.replace(/^Copyright | *<.*>/g, "")], [name_ver, copyright.replace(/^Copyright /, "")], ["      _______                 ________                        __", "     / / _  /_ ____________ _/__  ___/______________  _____  / /", " __ / / // / // / _  / _/ // / / / _  / _/     / /  \\/ / _ \\/ /", "/  / / // / // / ___/ // // / / / ___/ // / / / / /\\  / // / /__", "\\___/____ \\\\__/____/_/ \\__ / /_/____/_//_/_/_/_/_/  \\/\\__\\_\\___/", "         \\/          /____/                                   ".replace(reg, " ") + version_string, copyright], ["      __ _____                     ________                            " + "  __", "     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ " + " / /", " __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ " + "\\/ /", "/  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // " + "/ /__", "\\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\" + "__\\_\\___/", ("          \\/              /____/                                     " + "     ").replace(reg, "") + version_string, copyright]];
  $.terminal.nested_formatting.__meta__ = true;
  $.terminal.nested_formatting.__inherit__ = false;
  $.terminal.nested_formatting.__no_warn__ = true;
  $.terminal.defaults = {
    prompt: "> ",
    history: true,
    exit: true,
    clear: true,
    enabled: true,
    maskChar: "*",
    wrap: true,
    checkArity: true,
    raw: false,
    tabindex: 1,
    invokeMethods: false,
    exceptionHandler: null,
    pauseEvents: true,
    softPause: false,
    memory: false,
    cancelableAjax: true,
    processArguments: true,
    linksNoReferrer: false,
    anyLinks: false,
    linksNoFollow: false,
    processRPCResponse: null,
    completionEscape: true,
    onCommandChange: null,
    mobileDelete: is_mobile,
    onPositionChange: null,
    convertLinks: true,
    extra: {},
    tabs: 4,
    historySize: 60,
    scrollObject: null,
    historyState: false,
    importHistory: false,
    historyFilter: null,
    echoCommand: true,
    scrollOnEcho: true,
    login: null,
    outputLimit: -1,
    formatters: [$.terminal.nested_formatting],
    onAjaxError: null,
    pasteImage: true,
    scrollBottomOffset: 20,
    wordAutocomplete: true,
    caseSensitiveAutocomplete: true,
    caseSensitiveSearch: true,
    clickTimeout: 200,
    holdTimeout: 400,
    holdRepeatTimeout: 200,
    repeatTimeoutKeys: [],
    mobileIngoreAutoSpace: [],
    request: $.noop,
    response: $.noop,
    describe: "procs",
    onRPCError: null,
    doubleTab: null,
    doubleTabEchoCommand: false,
    ansiParser: {},
    completion: false,
    onInit: $.noop,
    onClear: $.noop,
    onBlur: $.noop,
    onFocus: $.noop,
    onTerminalChange: $.noop,
    onExit: $.noop,
    onPush: $.noop,
    onPop: $.noop,
    keypress: $.noop,
    keydown: $.noop,
    renderHandler: null,
    onAfterRedraw: $.noop,
    onEchoCommand: $.noop,
    onPaste: $.noop,
    onFlush: $.noop,
    onBeforeCommand: null,
    onAfterCommand: null,
    onBeforeEcho: null,
    onAfterEcho: null,
    onBeforeLogin: null,
    onAfterLogout: null,
    onBeforeLogout: null,
    allowedAttributes: ["title", /^aria-/, "id", /^data-/],
    strings: {
      comletionParameters: "From version 1.0.0 completion function need to" + " have two arguments",
      wrongPasswordTryAgain: "Wrong password try again!",
      wrongPassword: "Wrong password!",
      ajaxAbortError: "Error while aborting ajax call!",
      wrongArity: "Wrong number of arguments. Function '%s' expects %s got" + " %s!",
      commandNotFound: "Command '%s' Not Found!",
      oneRPCWithIgnore: "You can use only one rpc with describe == false " + "or rpc without system.describe",
      oneInterpreterFunction: "You can't use more than one function (rpc " + "without system.describe or with option describe == false count" + "s as one)",
      loginFunctionMissing: "You didn't specify a login function",
      noTokenError: "Access denied (no token)",
      serverResponse: "Server responded",
      wrongGreetings: "Wrong value of greetings parameter",
      notWhileLogin: "You can't call `%s' function while in login",
      loginIsNotAFunction: "Authenticate must be a function",
      canExitError: "You can't exit from main interpreter",
      invalidCompletion: "Invalid completion",
      invalidSelector: "Sorry, but terminal said that you use invalid " + "selector!",
      invalidTerminalId: "Invalid Terminal ID",
      login: "login",
      password: "password",
      recursiveLoop: "Recursive loop in echo detected, skip",
      notAString: "%s function: argument is not a string",
      redrawError: "Internal error, wrong position in cmd redraw",
      invalidStrings: "Command %s have unclosed strings",
      defunctTerminal: "You can't call method on terminal that was destroyed"
    }
  };
  var requests = [];
  var terminals = new Cycle();
  var _save_state = [];
  var hash_commands;
  var change_hash = false;
  var fire_hash_change = true;
  var first_instance = true;

  $.fn.terminal = function (e, t) {
    function n(n) {
      if (n) {
        this.storage = {};
      }

      this.set = function (e, t) {
        if (n) {
          this.storage[e] = t;
        } else {
          $.Storage.set(e, t);
        }
      };

      this.get = function (e) {
        if (n) {
          return this.storage[e];
        } else {
          return $.Storage.get(e);
        }
      };

      this.remove = function (e) {
        if (n) {
          delete this.storage[e];
        } else {
          $.Storage.remove(e);
        }
      };
    }

    function f(e) {
      if ($.terminal.unclosed_strings(e)) {
        var t = $.terminal.escape_brackets(e);
        var n = sprintf(te().invalidStrings, "`" + t + "`");
        throw new $.terminal.Exception(n);
      } else if (is_function(xe.processArguments)) {
        return process_command(e, xe.processArguments);
      } else if (xe.processArguments) {
        return $.terminal.parse_command(e);
      } else {
        return $.terminal.split_command(e);
      }
    }

    function o(e) {
      if (is_function(xe.renderHandler)) {
        var t = xe.renderHandler.call(ne, e, ne);

        if (t === false) {
          return false;
        }

        if (typeof t === "string" || i(t) || is_promise(t)) {
          return t;
        } else {
          return e;
        }
      }

      return e;
    }

    function a(e) {
      var t = e.data("index");
      var n = ke[t];
      var r = n[1];

      if (is_function(r.unmount)) {
        r.unmount.call(ne, e);
      }
    }

    function u(n, r) {
      if (i(n)) {
        var e = $.extend({}, r, {
          raw: true,
          finalize: function finalize(e) {
            var t;

            if (n instanceof $.fn.init) {
              t = n.clone(true, true);
            } else {
              t = n;
            }

            e.find(".terminal-render-item").replaceWith(t);

            if (r && is_function(r.finalize)) {
              r.finalize(e, ne);
            }
          }
        });
        return ['<div class="terminal-render-item"/>', e];
      }
    }

    function s(e, t) {
      var n = u(e, t);

      if (n) {
        ne.echo.apply(ne, n);
        return true;
      }
    }

    function r(e) {
      return ue.find("[data-index=" + e + "]");
    }

    function i(e) {
      return e instanceof $.fn.init || e instanceof Element;
    }

    function p(e) {
      e = o(e);

      if (e === false) {
        return;
      }

      if (s(e)) {
        return;
      }

      if (typeof e === "string") {
        ne.echo(e);
      } else if (is_array(e)) {
        ne.echo($.map(e, function (e) {
          return JSON.stringify(e);
        }).join(" "));
      } else if (_typeof(e) === "object") {
        ne.echo(JSON.stringify(e));
      } else {
        ne.echo(e);
      }
    }

    function m(e, o) {
      var t = /(.*):([0-9]+):([0-9]+)$/;
      var u = e.match(t);

      if (u) {
        ne.pause(xe.softPause);
        $.get(u[1], function (e) {
          var t = u[1];
          var n = e.split("\n");
          var i = +u[2] - 1;
          var r = i > 2 ? i - 2 : 0;
          var a = n.slice(r, i + 3).map(function (e, t) {
            var n = "[" + (i + t - 1) + "]: ";
            var r = o - n.length - 4;

            if (e.length > r) {
              e = e.substring(0, r) + "...";
            }

            if (i > 2 ? t === 2 : t === i) {
              e = "[[;#f00;]" + $.terminal.escape_brackets(e) + "]";
            }

            return n + e;
          }).filter(Boolean).join("\n");

          if (a.length) {
            ne.echo("[[b;white;]" + t + "]");
            ne.echo(a).resume();
          }
        }, "text");
      }
    }

    function c(e) {
      if (is_function(xe.onRPCError)) {
        xe.onRPCError.call(ne, e);
      } else {
        ne.error("&#91;RPC&#93; " + e.message);

        if (e.error && e.error.message) {
          e = e.error;
          var t = "\t" + e.message;

          if (e.file) {
            t += ' in file "' + e.file.replace(/.*\//, "") + '"';
          }

          if (e.at) {
            t += " at line " + e.at;
          }

          ne.error(t);
        }
      }
    }

    function d(n, r) {
      var i = function i(e, t) {
        ne.pause(xe.softPause);
        $.jrpc({
          url: n,
          method: e,
          params: t,
          request: function request(e, t) {
            try {
              xe.request.call(ne, e, t, ne);
            } catch (e) {
              _(e, "USER");
            }
          },
          response: function response(e, t) {
            try {
              xe.response.call(ne, e, t, ne);
            } catch (e) {
              _(e, "USER");
            }
          },
          success: function e(t) {
            if (t.error) {
              c(t.error);
            } else if (is_function(xe.processRPCResponse)) {
              xe.processRPCResponse.call(ne, t.result, ne);
            } else {
              p(t.result);
            }

            ne.resume();
          },
          error: D
        });
      };

      return function (e, t) {
        if (e === "") {
          return;
        }

        try {
          e = f(e);
        } catch (e) {
          _(e, "TERMINAL (get_processed_command)");

          return;
        }

        if (!r || e.name === "help") {
          i(e.name, e.args);
        } else {
          var n = t.token();

          if (n) {
            i(e.name, [n].concat(e.args));
          } else {
            t.error("&#91;AUTH&#93; " + te().noTokenError);
          }
        }
      };
    }

    function h(o, u, s, l) {
      return function (e, t) {
        if (e === "") {
          return;
        }

        var n;

        try {
          n = f(e);
        } catch (e) {
          if (is_function(xe.exception)) {
            xe.exception(e, ne);
          } else {
            ne.error("Error: " + (e.message || e));
          }

          return;
        }

        var r = o[n.name];
        var i = get_type(r);

        if (i === "function") {
          if (u && r.length !== n.args.length) {
            ne.error("&#91;Arity&#93; " + sprintf(te().wrongArity, n.name, r.length, n.args.length));
          } else {
            return r.apply(ne, n.args);
          }
        } else if (i === "object" || i === "string") {
          var a = [];

          if (i === "object") {
            a = Object.keys(r);
            r = h(r, u, s);
          }

          t.push(r, {
            prompt: n.name + "> ",
            name: n.name,
            completion: i === "object" ? a : undefined
          });
        } else if (is_function(l)) {
          l(e, ne);
        } else if (is_function(xe.onCommandNotFound)) {
          xe.onCommandNotFound.call(ne, e, ne);
        } else {
          t.error(sprintf(te().commandNotFound, n.name));
        }
      };
    }

    function D(e, t, n) {
      ne.resume();

      if (is_function(xe.onAjaxError)) {
        xe.onAjaxError.call(ne, e, t, n);
      } else if (t !== "abort") {
        ne.error("&#91;AJAX&#93; " + t + " - " + te().serverResponse + ":\n" + $.terminal.escape_brackets(e.responseText));
      }
    }

    function v(a, u, r) {
      function s(e) {
        if (e.error) {
          c(e.error);
        } else if (is_function(xe.processRPCResponse)) {
          xe.processRPCResponse.call(ne, e.result, ne);
        } else {
          p(e.result);
        }

        ne.resume();
      }

      function l(e, t) {
        try {
          xe.request.call(ne, e, t, ne);
        } catch (e) {
          _(e, "USER");
        }
      }

      function f(e, t) {
        try {
          xe.response.call(ne, e, t, ne);
        } catch (e) {
          _(e, "USER");
        }
      }

      function e(e) {
        var n = e;

        if (xe.describe !== false && xe.describe !== "") {
          xe.describe.split(".").forEach(function (e) {
            n = n[e];
          });
        }

        if (n && n.length) {
          var t = {};
          $.each(n, function (e, i) {
            if ($.isPlainObject(i) && typeof i.name === "string") {
              t[i.name] = function () {
                var e = u && i.name !== "help";
                var t = Array.prototype.slice.call(arguments);
                var n = t.length + (e ? 1 : 0);

                if (xe.checkArity && i.params && i.params.length !== n) {
                  ne.error("&#91;Arity&#93; " + sprintf(te().wrongArity, i.name, i.params.length, n));
                } else {
                  ne.pause(xe.softPause);

                  if (e) {
                    var r = ne.token(true);

                    if (r) {
                      t = [r].concat(t);
                    } else {
                      ne.error("&#91;AUTH&#93; " + te().noTokenError);
                    }
                  }

                  $.jrpc({
                    url: a,
                    method: i.name,
                    params: t,
                    request: l,
                    response: f,
                    success: s,
                    error: D
                  });
                }
              };
            }
          });
          var o = typeof u === "string" ? u : "login";

          t.help = t.help || function (i) {
            if (typeof i === "undefined") {
              var e = n.map(function (e) {
                return e.name;
              }).join(", ") + ", help";
              ne.echo("Available commands: " + e);
            } else {
              var a = false;
              $.each(n, function (e, t) {
                if (t.name === i) {
                  a = true;
                  var n = "";
                  n += "[[bu;;]" + t.name + "]";

                  if (t.params) {
                    var r = t.params;

                    if (u && t.name !== o) {
                      r = r.slice(1);
                    }

                    n += " " + r.join(" ");
                  }

                  if (t.help) {
                    n += "\n" + t.help;
                  }

                  ne.echo(n);
                  return false;
                }
              });

              if (!a) {
                if (i === "help") {
                  ne.echo("[[bu;;]help] [method]\ndisplay help " + "for the method or list of methods if not" + " specified");
                } else {
                  var t = "Method `" + i + "' not found ";
                  ne.error(t);
                }
              }
            }
          };

          r(t);
        } else {
          r(null);
        }
      }

      return $.jrpc({
        url: a,
        method: "system.describe",
        params: [],
        success: e,
        request: l,
        response: f,
        error: function e() {
          r(null);
        }
      });
    }

    function l(t, o, n) {
      n = n || $.noop;
      var e = get_type(t);
      var u;
      var r = {};
      var s = 0;
      var l;

      if (e === "array") {
        u = {};

        (function t(e, n) {
          if (e.length) {
            var r = e[0];
            var i = e.slice(1);
            var a = get_type(r);

            if (a === "string") {
              ne.pause(xe.softPause);

              if (xe.describe === false) {
                if (++s === 1) {
                  l = d(r, o);
                } else {
                  ne.error(te().oneRPCWithIgnore);
                }

                t(i, n);
              } else {
                v(r, o, function (e) {
                  if (e) {
                    $.extend(u, e);
                  } else if (++s === 1) {
                    l = d(r, o);
                  } else {
                    ne.error(te().oneRPCWithIgnore);
                  }

                  ne.resume();
                  t(i, n);
                });
              }
            } else if (a === "function") {
              if (l) {
                ne.error(te().oneInterpreterFunction);
              } else {
                l = r;
              }

              t(i, n);
            } else if (a === "object") {
              $.extend(u, r);
              t(i, n);
            }
          } else {
            n();
          }
        })(t, function () {
          n({
            interpreter: h(u, false, o, l && l.bind(ne)),
            completion: Object.keys(u)
          });
        });
      } else if (e === "string") {
        if (xe.describe === false) {
          u = {
            interpreter: d(t, o)
          };

          if ($.isArray(xe.completion)) {
            u.completion = xe.completion;
          }

          n(u);
        } else {
          ne.pause(xe.softPause);
          v(t, o, function (e) {
            if (e) {
              r.interpreter = h(e, false, o);
              r.completion = Object.keys(e);
            } else {
              r.interpreter = d(t, o);
            }

            n(r);
            ne.resume();
          });
        }
      } else if (e === "object") {
        n({
          interpreter: h(t, xe.checkArity, o),
          completion: Object.keys(t)
        });
      } else {
        if (e === "undefined") {
          t = $.noop;
        } else if (e !== "function") {
          var i = e + " is invalid interpreter value";
          throw new $.terminal.Exception(i);
        }

        n({
          interpreter: t,
          completion: xe.completion
        });
      }
    }

    function g(r, e) {
      var i = get_type(e) === "boolean" ? "login" : e;
      return function (e, t, n) {
        ne.pause(xe.softPause);
        $.jrpc({
          url: r,
          method: i,
          params: [e, t],
          request: function request(e, t) {
            try {
              xe.request.call(ne, e, t, ne);
            } catch (e) {
              _(e, "USER");
            }
          },
          response: function response(e, t) {
            try {
              xe.response.call(ne, e, t, ne);
            } catch (e) {
              _(e, "USER");
            }
          },
          success: function e(t) {
            if (!t.error && t.result) {
              n(t.result);
            } else {
              n(null);
            }

            ne.resume();
          },
          error: D
        });
      };
    }

    function _(e, t, n) {
      if (is_function(xe.exceptionHandler)) {
        xe.exceptionHandler.call(ne, e, t);
      } else {
        ne.exception(e, t);

        if (!n) {
          setTimeout(function () {
            throw e;
          }, 0);
        }
      }
    }

    var y = [];
    var b = 1;
    var w;

    if ("Map" in root) {
      w = new Map();
    }

    function C(e, t, n) {
      var r, i;
      y.push(b);
      var a = {
        linksNoReferrer: xe.linksNoReferrer,
        linksNoFollow: xe.linksNoFollow,
        anyLinks: xe.anyLinks,
        char_width: Fe.width,
        escape: false,
        allowedAttributes: n.allowedAttributes || []
      };
      var o = xe.useCache && w;

      function u(e, t) {
        var n = JSON.stringify([e, a]);

        if (o) {
          if (w.has(n)) {
            return w.get(n);
          }
        }

        var r = {
          line: $.terminal.format(e, a),
          newline: t
        };

        if (o) {
          w.set(n, r);
        }

        return r;
      }

      if (e instanceof Array) {
        for (r = 0, i = e.length; r < i; ++r) {
          if (e[r] === "" || e[r] === "\r") {
            y.push({
              line: "<span></span>"
            });
          } else {
            y.push(u(e[r], r === i - 1));
          }
        }
      } else if (!n.raw) {
        y.push(u(e));
      } else {
        y.push({
          line: e
        });
      }

      y.push({
        finalize: n.finalize,
        index: t
      });
    }

    function E(e) {
      function t(e, n, r, i, a, o, t) {
        function u(e, t) {
          return "[[" + [n + (e || ""), r, i, a, t || o].join(";") + "]";
        }

        function s(e) {
          return "]" + u("!", e) + e + "]" + u();
        }

        if (!n.match(/!/)) {
          var l = t.match(email_full_re) || t.match(url_full_re);

          if (l) {
            return u("!", l[1]) + t + "]";
          } else if (t.match(email_re) || t.match(url_nf_re)) {
            var f = t.replace(email_re, s).replace(url_nf_re, s);
            return u("", o) + f + "]";
          }
        }

        return e;
      }

      if (!$.terminal.have_formatting(e)) {
        return e.replace(email_re, "[[!;;]$1]").replace(url_nf_re, "[[!;;]$1]");
      }

      return $.terminal.format_split(e).map(function (e) {
        if ($.terminal.is_formatting(e)) {
          return e.replace(format_parts_re, t);
        } else {
          return e.replace(email_re, "[[!;;]$1]").replace(url_nf_re, "[[!;;]$1]");
        }
      }).join("");
    }

    function x(e, t) {
      return (strlen(text(e)) > t.cols || e.match(/\n/)) && (xe.wrap === true && t.wrap === undefined || xe.wrap === false && t.wrap === true);
    }

    var F;

    if ("Map" in root) {
      F = new Map();
    }

    function k(e) {
      try {
        var n = $.extend({
          exec: true,
          raw: false,
          finalize: $.noop,
          invokeMethods: false,
          formatters: true,
          convertLinks: xe.convertLinks
        }, e.options || {});
        var t;
        t = Qe(e.value);

        if (t !== "") {
          if (!n.raw) {
            if (n.formatters) {
              try {
                t = $.terminal.apply_formatters(t, xe);
              } catch (e) {
                _(e, "FORMATTING");
              }
            }

            if (xe.useCache) {
              var r = t;

              if (F && F.has(r)) {
                t = F.get(r);
                C(t, e.index, n);
                return;
              }
            }

            if (n.exec) {
              var i = t.split(format_exec_re);
              t = $.map(i, function (e) {
                if (e && e.match(format_exec_re) && !$.terminal.is_formatting(e)) {
                  e = e.replace(/^\[\[|\]\]$/g, "");

                  if (n.exec) {
                    var t = e.trim();

                    if (ae && ae === t) {
                      ae = "";
                      ne.error(te().recursiveLoop);
                    } else {
                      ae = t;
                      $.terminal.extended_command(ne, e, {
                        invokeMethods: n.invokeMethods
                      });
                    }
                  }

                  return "";
                } else {
                  return e;
                }
              }).join("");
            }

            if (t === "") {
              return;
            }

            if (n.convertLinks) {
              t = E(t);
            }

            t = crlf($.terminal.normalize(t));
            t = $.terminal.encode(t, {
              tabs: xe.tabs
            });
            var a;
            var o = n.cols = ne.cols();

            if (x(t, n)) {
              var u = n.keepWords;
              a = $.terminal.split_equal(t, o, u);
            } else if (t.match(/\n/)) {
              a = t.split(/\n/);
            }
          }
        }

        var s = a || t;

        if (F && r) {
          F.set(r, s);
        }

        C(s, e.index, n);
      } catch (e) {
        y = [];

        if (is_function(xe.exceptionHandler)) {
          xe.exceptionHandler.call(ne, e, "TERMINAL");
        } else {
          alert_exception("[Internal Exception(process_line)]", e);
        }
      }
    }

    function A(e) {
      e = $.extend({}, {
        update: false,
        scroll: true
      }, e || {});

      if (!e.update) {
        Le.resize(fe);
        var t = ue.empty().detach();
      }

      var i = [];

      if (xe.outputLimit >= 0) {
        var n;

        if (xe.outputLimit === 0) {
          n = ne.rows();
        } else {
          n = xe.outputLimit;
        }

        ke.forEach(function (e, t) {
          var n = e[0];
          var r = e[1];
          i.push({
            value: n,
            index: t,
            options: r
          });
        });
        var r = i.length - n - 1;
        i = i.slice(r);
      } else {
        i = ke.map(function (e, t) {
          return {
            value: e[0],
            index: t,
            options: e[1]
          };
        });
      }

      try {
        y = [];
        $.each(i, function (e, t) {
          k(t);
        });

        if (!e.update) {
          Le.before(t);
        }

        ne.flush(e);
        q("onAfterRedraw");
      } catch (e) {
        if (is_function(xe.exceptionHandler)) {
          xe.exceptionHandler.call(ne, e, "TERMINAL (redraw)");
        } else {
          alert_exception("[redraw]", e);
        }
      }
    }

    function T() {
      if (xe.outputLimit >= 0) {
        var e;

        if (xe.outputLimit === 0) {
          e = ne.rows();
        } else {
          e = xe.outputLimit;
        }

        var t = ue.find("> div > div");

        if (t.length + 1 > e) {
          var n = t.length - e + 1;
          var r = t.slice(0, n);
          var i = r.parent();
          r.remove();
          i.each(function () {
            var e = $(this);

            if (e.is(":empty")) {
              a(e);
              e.remove();
            }
          });
        }
      }
    }

    function S() {
      if (xe.greetings === undefined) {
        ne.echo(ne.signature, {
          finalize: a11y_hide,
          formatters: false
        });
      } else if (xe.greetings) {
        var e = _typeof(xe.greetings);

        if (e === "string") {
          ne.echo(xe.greetings);
        } else if (e === "function") {
          try {
            var t = xe.greetings.call(ne, ne.echo);
            var n = L("Greetings");
            unpromise(t, ne.echo, function (e) {
              n(e);
              xe.greetings = null;
            });
          } catch (e) {
            xe.greetings = null;

            _(e, "greetings");
          }
        } else {
          ne.error(te().wrongGreetings);
        }
      }
    }

    function R(n) {
      if (typeof n === "undefined") {
        n = ne.get_command();
      }

      var e = Le.prompt(true);
      var t = Le.mask();

      switch (_typeof(t)) {
        case "string":
          n = n.replace(/./g, t);
          break;

        case "boolean":
          if (t) {
            n = n.replace(/./g, xe.maskChar);
          } else {
            n = $.terminal.escape_formatting(n);
          }

          break;
      }

      var r = {
        convertLinks: false,
        exec: false,
        finalize: function e(t) {
          a11y_hide(t.addClass("terminal-command"));
          q("onEchoCommand", [t, n]);
        }
      };
      ne.echo(e + n, r);
    }

    function B() {
      return He.outerWidth() !== ne.outerWidth();
    }

    function j(e) {
      var t = terminals.get()[e[0]];

      if (!t) {
        throw new $.terminal.Exception(te().invalidTerminalId);
      }

      var n = e[1];

      if (_save_state[n]) {
        t.import_view(_save_state[n]);
      } else {
        change_hash = false;
        var r = e[2];

        if (r) {
          t.exec(r).done(function () {
            change_hash = true;
            _save_state[n] = t.export_view();
          });
        }
      }
    }

    function L(t) {
      return function (e) {
        ne.error("[" + t + "] " + (e.message || e)).resume();
      };
    }

    function O() {
      if (change_hash) {
        fire_hash_change = false;
        location.hash = "#" + JSON.stringify(hash_commands);
        setTimeout(function () {
          fire_hash_change = true;
        }, 100);
      }
    }

    var I = true;
    var z = [];

    function P(n, e, t) {
      function r() {
        if (xe.historyState || xe.execHash && t) {
          if (!_save_state.length) {
            ne.save_state();
          } else {
            ne.save_state(null);
          }
        }
      }

      function i() {
        if (!t) {
          change_hash = true;

          if (xe.historyState) {
            ne.save_state(n, false);
          }

          change_hash = l;
        }

        s.resolve();
        q("onAfterCommand", [n]);
      }

      function a(e) {
        if (typeof e !== "undefined") {
          p(e);
        }

        i();
        ne.resume();
      }

      function o() {
        var e = u.interpreter.call(ne, n, ne);

        if (e) {
          if (!le) {
            ne.pause(xe.softPause);
          }

          le = false;
          var t = L("Command");

          if (is_function(e.done || e.then)) {
            return unpromise(e, a, t);
          } else {
            return $.when(e).done(a)["catch"](t);
          }
        } else if (Re) {
          z.push(function () {
            i();
          });
        } else {
          i();
        }
      }

      if (I) {
        I = false;
        r();
      }

      try {
        if (q("onBeforeCommand", [n]) === false) {
          return;
        }

        if (t) {
          ae = n.trim();
        } else {
          ie = $.terminal.split_command(n);
        }

        if (!Y()) {
          if (t && (is_function(xe.historyFilter) && xe.historyFilter(n) || n.match(xe.historyFilter))) {
            Le.history().append(n);
          }
        }

        var u = je.top();

        if (!e && xe.echoCommand) {
          R(n);
        }

        var s = new $.Deferred();
        var l = change_hash;

        if (n.match(/^\s*login\s*$/) && ne.token(true)) {
          if (ne.level() > 1) {
            ne.logout(true);
          } else {
            ne.logout();
          }

          i();
        } else if (xe.exit && n.match(/^\s*exit\s*$/) && !ye) {
          var f = ne.level();

          if (f === 1 && ne.get_token() || f > 1) {
            if (ne.get_token(true)) {
              ne.set_token(undefined, true);
            }

            ne.pop();
          }

          i();
        } else if (xe.clear && n.match(/^\s*clear\s*$/) && !ye) {
          ne.clear();
          i();
        } else {
          var c = o();

          if (c) {
            return c;
          }
        }

        return s.promise();
      } catch (e) {
        _(e, "USER", t);

        ne.resume();

        if (t) {
          throw e;
        }
      }
    }

    function N() {
      if (q("onBeforeLogout", [], true) === false) {
        return;
      }

      H();
      q("onAfterlogout", [], true);
      ne.login(We, true, Q);
    }

    function H() {
      var e = ne.prefix_name(true) + "_";
      Ae.remove(e + "token");
      Ae.remove(e + "login");
    }

    function M(e) {
      var t = ne.prefix_name() + "_interpreters";
      var n = Ae.get(t);

      if (n) {
        n = JSON.parse(n);
      } else {
        n = [];
      }

      if ($.inArray(e, n) === -1) {
        n.push(e);
        Ae.set(t, JSON.stringify(n));
      }
    }

    function U(e) {
      var t = je.top();
      var n = ne.prefix_name(true);

      if (!Y()) {
        M(n);
      }

      var r = ne.login_name(true);
      Le.name(n + (r ? "_" + r : ""));
      var i = t.prompt;

      if (is_function(i)) {
        i = Ye(i);
      }

      if (i !== Le.prompt()) {
        if (is_function(t.prompt)) {
          Le.prompt("");
        }

        Le.prompt(t.prompt);
      }

      if (typeof t.history !== "undefined") {
        ne.history().toggle(t.history);
      }

      if ($.isPlainObject(t.keymap)) {
        Le.keymap($.omap(t.keymap, function (e, t) {
          return function () {
            var e = [].slice.call(arguments);

            try {
              return t.apply(ne, e);
            } catch (e) {
              _(e, "USER KEYMAP");
            }
          };
        }));
      }

      Le.set("");
      he.resolve();

      if (!e && is_function(t.onStart)) {
        t.onStart.call(ne, ne);
      }
    }

    function q(t, e, n) {
      e = (e || []).concat([ne]);
      var r = je && je.top();

      if (r && is_function(r[t]) && !n) {
        try {
          return r[t].apply(ne, e);
        } catch (e) {
          delete r[t];

          _(e, t);
        }
      } else if (is_function(xe[t])) {
        try {
          return xe[t].apply(ne, e);
        } catch (e) {
          xe[t] = null;

          _(e, t);
        }
      }
    }

    var W = function () {
      function e(e) {
        if (!e) {
          try {
            ne.scroll_to(ne.find(".cmd-cursor"));
            return true;
          } catch (e) {
            return true;
          }
        }
      }

      if (typeof global !== "undefined" && typeof global.it === "function") {
        return e;
      }

      return debounce(e, 100, {
        leading: true,
        trailing: false
      });
    }();

    function K() {
      var e = ne.find(".cmd-cursor-line");
      return e.is_fully_in_viewport(ne).then(W);
    }

    function J() {
      if (fire_hash_change && xe.execHash) {
        try {
          if (location.hash) {
            var e = location.hash.replace(/^#/, "");
            hash_commands = JSON.parse(decodeURIComponent(e));
          } else {
            hash_commands = [];
          }

          if (hash_commands.length) {
            j(hash_commands[hash_commands.length - 1]);
          } else if (_save_state[0]) {
            ne.import_view(_save_state[0]);
          }
        } catch (e) {
          _(e, "TERMINAL");
        }
      }
    }

    function Q() {
      U();
      S();

      if (ke.length) {
        ne.refresh();
      }

      var e = false;

      if (is_function(xe.onInit)) {
        be = function be() {
          e = true;
        };

        try {
          xe.onInit.call(ne, ne);
        } catch (e) {
          _(e, "OnInit");
        } finally {
          be = $.noop;

          if (!e && ne.enabled()) {
            ne.resume(true);
          }
        }
      }

      if (first_instance) {
        first_instance = false;
        $(window).on("hashchange", J);
      }
    }

    function Y() {
      return ye || Le.mask() !== false;
    }

    function G(e) {
      var t,
          n = je.top();

      if (is_function(n.keydown)) {
        t = n.keydown.call(ne, e, ne);

        if (t !== undefined) {
          return t;
        }
      } else if (is_function(xe.keydown)) {
        t = xe.keydown.call(ne, e, ne);

        if (t !== undefined) {
          return t;
        }
      }
    }

    var V = {
      "CTRL+D": function CTRLD(e, t) {
        if (!ye) {
          if (Le.get() === "") {
            if (je.size() > 1 || is_function(We)) {
              ne.pop("");
            } else {
              ne.resume();
              ne.echo("");
            }
          } else {
            t();
          }
        }

        return false;
      },
      "CTRL+C": function CTRLC() {
        with_selection(function (e) {
          if (e === "") {
            var t = ne.get_command();
            var n = ne.get_position();
            t = t.slice(0, n) + "^C" + t.slice(n + 2);
            R(t);
            ne.set_command("");
          } else {
            var r = ne.find("textarea");
            text_to_clipboard(r, process_selected_html(e));
          }
        });
        return false;
      },
      "CTRL+L": function CTRLL() {
        ne.clear();
      },
      TAB: function TAB(e, t) {
        var n = je.top(),
            r,
            i;

        if (typeof n.caseSensitiveAutocomplete !== "undefined") {
          i = n.caseSensitiveAutocomplete;
        } else {
          i = xe.caseSensitiveAutocomplete;
        }

        if (xe.completion && get_type(xe.completion) !== "boolean" && n.completion === undefined) {
          r = xe.completion;
        } else {
          r = n.completion;
        }

        if (r === "settings") {
          r = xe.completion;
        }

        function a(e) {
          e = e.slice();

          if (!ne.before_cursor(false).match(/\s/)) {
            if (xe.clear && $.inArray("clear", e) === -1) {
              e.push("clear");
            }

            if (xe.exit && $.inArray("exit", e) === -1) {
              e.push("exit");
            }
          }

          ne.complete(e, {
            echo: true,
            word: xe.wordAutocomplete,
            escape: xe.completionEscape,
            caseSensitive: i,
            echoCommand: xe.doubleTabEchoCommand,
            doubleTab: xe.doubleTab
          });
        }

        if (r) {
          switch (get_type(r)) {
            case "function":
              var o = ne.before_cursor(xe.wordAutocomplete);

              if (r.length === 3) {
                var u = new Error(te().comletionParameters);

                _(u, "USER");

                return false;
              }

              var s = r.call(ne, o, a);
              unpromise(s, a, L("Completion"));
              break;

            case "array":
              a(r);
              break;

            default:
              throw new $.terminal.Exception(te().invalidCompletion);
          }
        } else {
          t();
        }

        return false;
      },
      "CTRL+V": function CTRLV(e, t) {
        t(e);
        ne.oneTime(200, function () {
          ne.scroll_to_bottom();
        });
        return true;
      },
      "CTRL+TAB": function CTRLTAB() {
        if (terminals.length() > 1) {
          ne.focus(false);
          return false;
        }
      },
      PAGEDOWN: function PAGEDOWN() {
        ne.scroll(ne.height());
      },
      PAGEUP: function PAGEUP() {
        ne.scroll(-ne.height());
      }
    };

    function X(t) {
      var e, n;

      if (ne.enabled()) {
        if (!ne.paused()) {
          e = G(t);

          if (e !== undefined) {
            return e;
          }

          if (t.which !== 9) {
            oe = 0;
          }
        } else {
          if (!xe.pauseEvents) {
            e = G(t);

            if (e !== undefined) {
              return e;
            }
          }

          if (t.which === 68 && t.ctrlKey) {
            if (xe.pauseEvents) {
              e = G(t);

              if (e !== undefined) {
                return e;
              }
            }

            if (requests.length) {
              for (n = requests.length; n--;) {
                var r = requests[n];

                if (r.readyState !== 4) {
                  try {
                    r.abort();
                  } catch (e) {
                    if (is_function(xe.exceptionHandler)) {
                      xe.exceptionHandler.call(ne, t, "AJAX ABORT");
                    } else {
                      ne.error(te().ajaxAbortError);
                    }
                  }
                }
              }

              requests = [];
            }

            ne.resume();
          }

          return false;
        }
      }
    }

    function Z(e) {
      var t = je.top();

      if (Te && (!Re || !xe.pauseEvents)) {
        if (is_function(t.keypress)) {
          return t.keypress.call(ne, e, ne);
        } else if (is_function(xe.keypress)) {
          return xe.keypress.call(ne, e, ne);
        }
      }
    }

    function ee(t) {
      return function (e) {
        t.add(e);
      };
    }

    function te() {
      return $.extend({}, $.terminal.defaults.strings, xe && xe.strings || {});
    }

    var ne = this;

    if (ne.is("body,html")) {
      ne = $("<div/>").appendTo("body");
      $("body").addClass("full-screen-terminal");
    }

    if (this.length > 1) {
      return this.each(function () {
        $.fn.terminal.call($(this), e, $.extend({
          name: ne.selector
        }, t));
      });
    }

    if (ne.data("terminal")) {
      return ne.data("terminal");
    }

    $.extend(ne, $.omap({
      id: function id() {
        return se;
      },
      clear: function clear() {
        if (q("onClear") !== false) {
          ke.forEach(function (e, t) {
            var n = e[1];

            if (is_function(n.onClear)) {
              n.onClear.call(ne, r(t));
            }
          });
          ke = [];
          ue[0].innerHTML = "";
          ne.prop({
            scrollTop: 0
          });
        }

        return ne;
      },
      export_view: function export_view() {
        var e = q("onExport");
        e = e || {};
        return $.extend({}, {
          focus: Te,
          mask: Le.mask(),
          prompt: ne.get_prompt(),
          command: ne.get_command(),
          position: Le.position(),
          lines: clone(ke),
          interpreters: je.clone(),
          history: Le.history().data
        }, e);
      },
      import_view: function import_view(t) {
        if (ye) {
          throw new Error(sprintf(te().notWhileLogin, "import_view"));
        }

        q("onImport", [t]);
        De(function e() {
          ne.set_prompt(t.prompt);
          ne.set_command(t.command);
          Le.position(t.position);
          Le.mask(t.mask);

          if (t.focus) {
            ne.focus();
          }

          ke = clone(t.lines).filter(function (e) {
            return e[0];
          });

          if (t.interpreters instanceof Stack) {
            je = t.interpreters;
          }

          if (xe.importHistory) {
            Le.history().set(t.history);
          }

          A();
        });
        return ne;
      },
      save_state: function save_state(e, t, n) {
        if (typeof n !== "undefined") {
          _save_state[n] = ne.export_view();
        } else {
          _save_state.push(ne.export_view());
        }

        if (!$.isArray(hash_commands)) {
          hash_commands = [];
        }

        if (e !== undefined && !t) {
          var r = [se, _save_state.length - 1, e];
          hash_commands.push(r);
          O();
        }

        return ne;
      },
      exec: function exec(n, r, e) {
        var i = e || new $.Deferred();
        ve(function e() {
          if ($.isArray(n)) {
            (function e() {
              var t = n.shift();

              if (t) {
                ne.exec(t, r).done(e);
              } else {
                i.resolve();
              }
            })();
          } else if (Re) {
            Ee.push([n, r, i]);
          } else {
            var t = P(n, r, true);
            unpromise(t, function () {
              i.resolve();
            }, function () {
              i.reject();
            });
          }
        });
        return i.promise();
      },
      autologin: function autologin(e, t, n) {
        ne.trigger("terminal.autologin", [e, t, n]);
        return ne;
      },
      login: function login(r, i, a, o) {
        me.push([].slice.call(arguments));

        if (ye) {
          throw new Error(sprintf(te().notWhileLogin, "login"));
        }

        if (!is_function(r)) {
          throw new Error(te().loginIsNotAFunction);
        }

        ye = true;

        if (ne.token() && ne.level() === 1 && !Be) {
          ye = false;
          ne.logout(true);
        } else if (ne.token(true) && ne.login_name(true)) {
          ye = false;

          if (is_function(a)) {
            a();
          }

          return ne;
        }

        if (xe.history) {
          Le.history().disable();
        }

        function u() {
          while (ne.level() > e) {
            ne.pop(undefined, true);
          }

          if (xe.history) {
            Le.history().enable();
          }
        }

        var e = ne.level();

        function s(e, t, n) {
          if (ne.paused()) {
            ne.resume();
          }

          if (t) {
            u();
            var r = ne.prefix_name(true) + "_";
            Ae.set(r + "token", t);
            Ae.set(r + "login", e);
            ye = false;
            q("onAfterLogin", [e, t]);

            if (is_function(a)) {
              a();
            }
          } else {
            if (i) {
              if (!n) {
                ne.error(te().wrongPasswordTryAgain);
              }

              ne.pop(undefined, true).set_mask(false);
            } else {
              ye = false;

              if (!n) {
                ne.error(te().wrongPassword);
              }

              ne.pop(undefined, true).pop(undefined, true);
            }

            if (is_function(o)) {
              o();
            }
          }

          ne.off("terminal.autologin");
        }

        ne.on("terminal.autologin", function (e, t, n, r) {
          if (q("onBeforeLogin", [t, n]) === false) {
            return;
          }

          s(t, n, r);
        });
        ne.push(function (n) {
          ne.set_mask(xe.maskChar).push(function (e) {
            try {
              if (q("onBeforeLogin", [n, e]) === false) {
                u();
                return;
              }

              ne.pause();
              var t = r.call(ne, n, e, function (e, t) {
                s(n, e, t);
              });

              if (t && is_function(t.then || t.done)) {
                (t.then || t.done).call(t, function (e) {
                  s(n, e);
                });
              }
            } catch (e) {
              _(e, "AUTH");
            }
          }, {
            prompt: te().password + ": ",
            name: "password"
          });
        }, {
          prompt: te().login + ": ",
          name: "login"
        });
        return ne;
      },
      settings: function settings() {
        return xe;
      },
      before_cursor: function before_cursor(e) {
        var t = Le.position();
        var n = Le.get().slice(0, t);
        var r = n.split(" ");
        var i;

        if (e) {
          if (r.length === 1) {
            i = r[0];
          } else {
            var a = n.match(/(\\?")/g);
            var o = a ? a.filter(function (e) {
              return !e.match(/^\\/);
            }).length : 0;
            a = n.match(/'/g);
            var u = a ? a.length : 0;

            if (u % 2 === 1) {
              i = n.match(/('[^']*)$/)[0];
            } else if (o % 2 === 1) {
              i = n.match(/("(?:[^"]|\\")*)$/)[0];
            } else {
              i = r[r.length - 1];

              for (Ue = r.length - 1; Ue > 0; Ue--) {
                var s = r[Ue - 1];

                if (s[s.length - 1] === "\\") {
                  i = r[Ue - 1] + " " + i;
                } else {
                  break;
                }
              }
            }
          }
        } else {
          i = n;
        }

        return i;
      },
      complete: function complete(r, i) {
        i = $.extend({
          word: true,
          echo: false,
          escape: true,
          echoCommand: false,
          caseSensitive: true,
          doubleTab: null
        }, i || {});
        var a = i.caseSensitive;
        var o = ne.before_cursor(i.word).replace(/\\"/g, '"');
        var s = false;

        if (i.word) {
          if (o.match(/^"/)) {
            s = '"';
          } else if (o.match(/^'/)) {
            s = "'";
          }

          if (s) {
            o = o.replace(/^["']/, "");
          }
        }

        if (oe % 2 === 0) {
          pe = ne.before_cursor(i.word);
        } else {
          var e = ne.before_cursor(i.word);

          if (e !== pe) {
            return;
          }
        }

        var t = $.terminal.escape_regex(o);

        if (i.escape) {
          t = t.replace(/(\\+)(["'() ])/g, function (e, t, n) {
            if (n.match(/[()]/)) {
              return t + "\\?\\" + n;
            } else {
              return t + "?" + n;
            }
          });
        }

        function u(e) {
          if (s === '"') {
            e = e.replace(/"/g, '\\"');
          }

          if (!s && i.escape) {
            e = e.replace(/(["'() ])/g, "\\$1");
          }

          return e;
        }

        function n() {
          var e = [];

          for (var t = r.length; t--;) {
            if (r[t].match(/\n/) && i.word) {
              warn("If you use commands with newlines you " + "should use word option for complete or" + " wordAutocomplete terminal option");
            }

            if (f.test(r[t])) {
              var n = u(r[t]);

              if (!a && same_case(n)) {
                if (o.toLowerCase() === o) {
                  n = n.toLowerCase();
                } else if (o.toUpperCase() === o) {
                  n = n.toUpperCase();
                }
              }

              e.push(n);
            }
          }

          return e;
        }

        var l = a ? "" : "i";
        var f = new RegExp("^" + t, l);
        var c = n();

        function p(e, t) {
          var n = ne.get_command();
          var r = ne.get_position();
          var i = new RegExp("^" + e, "i");
          var a = n.slice(0, r);
          var o = n.slice(r);
          var u = t.replace(i, "") + (s || "");
          ne.set_command(a + u + o);
          ne.set_position((a + u).length);
        }

        if (c.length === 1) {
          if (i.escape) {
            p(t, c[0]);
          } else {
            ne.insert(c[0].replace(f, "") + (s || ""));
          }

          pe = ne.before_cursor(i.word);
          return true;
        } else if (c.length > 1) {
          if (++oe >= 2) {
            oe = 0;

            if (i.echo) {
              if (is_function(i.doubleTab)) {
                if (i.echoCommand) {
                  R();
                }

                var m = i.doubleTab.call(ne, o, c, R);

                if (typeof m === "undefined") {
                  return true;
                } else {
                  return m;
                }
              } else if (i.doubleTab !== false) {
                R();
                var d = c.slice().reverse().join("\t\t");
                ne.echo($.terminal.escape_brackets(d), {
                  keepWords: true,
                  formatters: false
                });
              }

              return true;
            }
          } else {
            var h = common_string(u(o), c, a);

            if (h) {
              p(t, h);
              pe = ne.before_cursor(i.word);
              return true;
            }
          }
        }
      },
      commands: function commands() {
        return je.top().interpreter;
      },
      set_interpreter: function set_interpreter(e, t) {
        function n() {
          ne.pause(xe.softPause);
          l(e, t, function (e) {
            ne.resume();
            var t = je.top();
            $.extend(t, e);
            U(true);
          });
        }

        if (is_function(t)) {
          ne.login(t, true, n);
        } else if (get_type(e) === "string" && t) {
          ne.login(g(e, t), true, n);
        } else {
          n();
        }

        return ne;
      },
      greetings: function greetings() {
        S();
        return ne;
      },
      paused: function paused() {
        return Re;
      },
      pause: function pause(t) {
        ve(function e() {
          be();
          Re = true;
          Le.disable(t || is_android);

          if (!t) {
            Le.find(".cmd-prompt").hidden();
          }

          q("onPause");
        });
        return ne;
      },
      resume: function resume(i) {
        ve(function e() {
          Re = false;

          if (Te && terminals.front() === ne) {
            Le.enable(i);
          }

          Le.find(".cmd-prompt").visible();
          var t = Ee;
          Ee = [];

          for (var n = 0; n < t.length; ++n) {
            ne.exec.apply(ne, t[n]);
          }

          ne.trigger("resume");
          var r = z.shift();

          if (r) {
            r();
          }

          ne.scroll_to_bottom();
          q("onResume");
        });
        return ne;
      },
      cols: function cols() {
        if (xe.numChars) {
          return xe.numChars;
        }

        if (typeof fe === "undefined" || fe === 1e3) {
          fe = get_num_chars(ne, Fe);
        }

        return fe;
      },
      rows: function rows() {
        if (xe.numRows) {
          return xe.numRows;
        }

        if (typeof ce === "undefined") {
          ce = get_num_rows(ne, Fe);
        }

        return ce;
      },
      history: function history() {
        return Le.history();
      },
      history_state: function history_state(e) {
        function t() {
          xe.historyState = true;

          if (!_save_state.length) {
            ne.save_state();
          } else if (terminals.length() > 1) {
            ne.save_state(null);
          }
        }

        if (e) {
          if (typeof window.setImmediate === "undefined") {
            setTimeout(t, 0);
          } else {
            setImmediate(t);
          }
        } else {
          xe.historyState = false;
        }

        return ne;
      },
      clear_history_state: function clear_history_state() {
        hash_commands = [];
        _save_state = [];
        return ne;
      },
      next: function next() {
        if (terminals.length() === 1) {
          return ne;
        } else {
          terminals.front().disable();
          var e = terminals.rotate().enable();
          var t = e.offset().top - 50;
          $("html,body").animate({
            scrollTop: t
          }, 500);

          try {
            trigger_terminal_change(e);
          } catch (e) {
            _(e, "onTerminalChange");
          }

          return e;
        }
      },
      focus: function focus(n, r) {
        ve(function e() {
          if (terminals.length() === 1) {
            if (n === false) {
              ne.disable(r);
            } else {
              ne.enable(r);
            }
          } else if (n === false) {
            ne.next();
          } else {
            var t = terminals.front();

            if (t !== ne) {
              terminals.forEach(function (e) {
                if (e !== ne && e.enabled()) {
                  e.disable(r);
                }
              });

              if (!r) {
                try {
                  trigger_terminal_change(ne);
                } catch (e) {
                  _(e, "onTerminalChange");
                }
              }
            }

            terminals.set(ne);
            ne.enable(r);
          }
        });
        return ne;
      },
      freeze: function freeze(t) {
        De(function e() {
          if (t) {
            ne.disable();
            Se = true;
          } else {
            Se = false;
            ne.enable();
          }
        });
        return ne;
      },
      frozen: function frozen() {
        return Se;
      },
      enable: function enable(n) {
        if (!Te && !Se) {
          if (fe === undefined) {
            ne.resize();
          }

          ve(function e() {
            var t;

            if (!n && !Te) {
              q("onFocus");
            }

            if (!n && t === undefined || n) {
              Te = true;

              if (!ne.paused()) {
                Le.enable(true);
              }
            }
          });
        }

        return ne;
      },
      clear_cache: "Map" in root ? function () {
        w.clear();
        F.clear();
        return ne;
      } : function () {
        return ne;
      },
      disable: function disable(n) {
        ve(function e() {
          var t;

          if (!n && Te) {
            t = q("onBlur");
          }

          if (!n && t === undefined || n) {
            Te = false;
            Le.disable();
          }
        });
        return ne;
      },
      enabled: function enabled() {
        return Te;
      },
      signature: function signature() {
        var e = ne.cols();

        for (var t = signatures.length; t--;) {
          var n = signatures[t].map(function (e) {
            return e.length;
          });

          if (Math.max.apply(null, n) <= e) {
            return signatures[t].join("\n") + "\n";
          }
        }

        return "";
      },
      version: function version() {
        return $.terminal.version;
      },
      cmd: function cmd() {
        return Le;
      },
      get_command: function get_command() {
        return Le.get();
      },
      echo_command: function echo_command(e) {
        return R(e);
      },
      set_command: function set_command(t, n) {
        De(function e() {
          if (typeof t !== "string") {
            t = JSON.stringify(t);
          }

          Le.set(t, undefined, n);
        });
        return ne;
      },
      set_position: function set_position(t, n) {
        De(function e() {
          Le.position(t, n);
        });
        return ne;
      },
      get_position: function get_position() {
        return Le.position();
      },
      insert: function insert(n, r) {
        if (typeof n === "string") {
          De(function e() {
            var t = ne.is_bottom();
            Le.insert(n, r);

            if (xe.scrollOnEcho || t) {
              ne.scroll_to_bottom();
            }
          });
          return ne;
        } else {
          throw new Error(sprintf(te().notAString, "insert"));
        }
      },
      set_prompt: function set_prompt(t) {
        De(function e() {
          if (is_function(t)) {
            Le.prompt(function (e) {
              t.call(ne, e, ne);
            });
          } else {
            Le.prompt(t);
          }

          je.top().prompt = t;
        });
        return ne;
      },
      get_prompt: function get_prompt() {
        return je.top().prompt;
      },
      set_mask: function set_mask(t) {
        De(function e() {
          Le.mask(t === true ? xe.maskChar : t);
        });
        return ne;
      },
      get_output: function get_output(e) {
        if (e) {
          return ke;
        } else {
          return $.map(ke, function (e) {
            return is_function(e[0]) ? e[0]() : e[0];
          }).join("\n");
        }
      },
      resize: function resize(e, t) {
        if (!ne.is(":visible")) {
          ne.stopTime("resize");
          ne.oneTime(500, "resize", function () {
            ne.resize(e, t);
          });
        } else {
          if (e && t) {
            ne.width(e);
            ne.height(t);
          }

          e = ne.width();
          t = ne.height();

          if (typeof xe.numChars !== "undefined" || typeof xe.numRows !== "undefined") {
            Le.resize(xe.numChars);
            ne.refresh();
            q("onResize");
            return;
          }

          var n = get_num_chars(ne, Fe);
          var r = get_num_rows(ne, Fe);

          if (n !== fe || r !== ce) {
            fe = n;
            ce = r;
            Le.resize(fe);
            ne.refresh();
            q("onResize");
          }
        }

        return ne;
      },
      refresh: function refresh() {
        if (Fe.width !== 0) {
          ne[0].style.setProperty("--char-width", Fe.width);
        }

        A({
          scroll: false,
          update: true
        });
        return ne;
      },
      flush: function flush(e) {
        e = $.extend({}, {
          update: false,
          scroll: true
        }, e || {});

        try {
          var t = ne.is_bottom();
          ue.css("visibilty", "hidden");
          var n;

          while (y.length) {
            var r = y.shift();

            if (r === b) {
              n = $(document.createElement("div"));
            } else if ($.isPlainObject(r) && is_function(r.finalize)) {
              if (e.update) {
                var i = "> div[data-index=" + r.index + "]";
                var a = ue.find(i);

                if (a.html() !== n.html()) {
                  a.replaceWith(n);
                }
              } else {
                n.appendTo(ue);
              }

              n.attr("data-index", r.index);
              r.finalize(n);
            } else {
              var o = r.line;
              var u = document.createElement("div");
              u.style.width = "100%";
              u.innerHTML = o;

              if (r.newline) {
                u.className = "cmd-end-line";
              }

              n[0].appendChild(u);
            }
          }

          T();
          ue.css("visibilty", "");
          q("onFlush");

          if (xe.scrollOnEcho && e.scroll || t) {
            ne.scroll_to_bottom();
          }
        } catch (e) {
          if (is_function(xe.exceptionHandler)) {
            try {
              xe.exceptionHandler.call(ne, e, "TERMINAL (Flush)");
            } catch (e) {
              xe.exceptionHandler = $.noop;
              alert_exception("[exceptionHandler]", e);
            }
          } else {
            alert_exception("[Flush]", e);
          }
        } finally {
          y = [];
        }

        return ne;
      },
      update: function update(n, r, i) {
        De(function e() {
          if (n < 0) {
            n = ke.length + n;
          }

          if (!ke[n]) {
            ne.error("Invalid line number " + n);
          } else if (r === null) {
            ke.splice(n, 1);
            ue.find("[data-index=" + n + "]").remove();
          } else {
            var t = u(r, i);

            if (t) {
              r = t[0];
              i = t[1];
            }

            ke[n][0] = r;

            if (i) {
              ke[n][1] = i;
            }

            k({
              value: r,
              index: n,
              options: i
            });
            ne.flush({
              scroll: false,
              update: true
            });
          }
        });
        return ne;
      },
      remove_line: function remove_line(e) {
        return ne.update(e, null);
      },
      last_index: function last_index() {
        return ke.length - 1;
      },
      echo: function echo(e, i) {
        var a = arguments.length > 0;

        function t(t) {
          try {
            var n = $.extend({
              flush: true,
              exec: true,
              raw: xe.raw,
              finalize: $.noop,
              unmount: $.noop,
              keepWords: false,
              invokeMethods: xe.invokeMethods,
              onClear: null,
              formatters: true,
              allowedAttributes: xe.allowedAttributes
            }, i || {});

            (function (t) {
              n.finalize = function (e) {
                if (n.raw) {
                  e.addClass("raw");
                }

                try {
                  if (is_function(t)) {
                    t.call(ne, e);
                  }

                  e.find("img").each(function () {
                    var e = $(this);
                    var t = new Image();

                    t.onerror = function () {
                      e.replaceWith(use_broken_image);
                    };

                    t.src = this.src;
                  });
                } catch (e) {
                  _(e, "USER:echo(finalize)");

                  t = null;
                }
              };
            })(n.finalize);

            if (n.flush) {
              if (y.length) {
                ne.flush();
              }
            }

            if (q("onBeforeEcho", [t]) === false) {
              return;
            }

            var e;

            if (typeof t === "function") {
              e = t.bind(ne);
            } else if (typeof t === "undefined") {
              if (a) {
                e = String(t);
              } else {
                e = "";
              }
            } else {
              var r = o(t);

              if (r === false) {
                return ne;
              }

              e = r;
            }

            unpromise(e, function (e) {
              if (s(e, n)) {
                return ne;
              }

              k({
                value: e,
                options: n,
                index: ke.length
              });
              n.exec = false;
              ke.push([e, n]);

              if (n.flush) {
                ne.flush();
                q("onAfterEcho", [t]);
              }
            });
          } catch (e) {
            if (is_function(xe.exceptionHandler)) {
              xe.exceptionHandler.call(ne, e, "TERMINAL (echo)");
            } else {
              alert_exception("[Terminal.echo]", e);
            }
          }
        }

        if (e !== undefined && is_function(e.then)) {
          $.when(e).done(t)["catch"](L("Echo"));
        } else {
          t(e);
        }

        return ne;
      },
      error: function error(e, t) {
        t = $.extend({}, t, {
          raw: false,
          formatters: false
        });

        function n(e) {
          if (typeof e !== "string") {
            e = String(e);
          }

          var t = $.terminal.escape_brackets(e).replace(/\\$/, "&#92;").replace(url_re, "]$1[[;;;terminal-error]");
          return "[[;;;terminal-error]" + t + "]";
        }

        if (typeof e === "function") {
          return ne.echo(function () {
            return n(e.call(ne));
          }, t);
        }

        if (e && e.then) {
          e.then(function (e) {
            ne.echo(n(e));
          })["catch"](L("Echo Error"));
          return ne;
        }

        return ne.echo(n(e), t);
      },
      exception: function exception(r, e) {
        var t = exception_message(r);

        if (e) {
          t = "&#91;" + e + "&#93;: " + t;
        }

        if (t) {
          ne.error(t, {
            finalize: function finalize(e) {
              e.addClass("terminal-exception terminal-message");
            },
            keepWords: true
          });
        }

        if (typeof r.fileName === "string") {
          ne.pause(xe.softPause);
          $.get(r.fileName, function (e) {
            var t = r.lineNumber - 1;
            var n = e.split("\n")[t];

            if (n) {
              ne.error("[" + r.lineNumber + "]: " + n);
            }

            ne.resume();
          }, "text");
        }

        if (r.stack) {
          var n = $.terminal.escape_brackets(r.stack);
          ne.echo(n.split(/\n/g).map(function (e) {
            return "[[;;;terminal-error]" + e.replace(url_re, function (e) {
              return "]" + e + "[[;;;terminal-error]";
            }) + "]";
          }).join("\n"), {
            finalize: function finalize(e) {
              e.addClass("terminal-exception terminal-stack-trace");
            },
            formatters: false
          });
        }

        return ne;
      },
      scroll: function scroll(e) {
        var t;
        e = Math.round(e);

        if (ne.prop) {
          if (e > ne.prop("scrollTop") && e > 0) {
            ne.prop("scrollTop", 0);
          }

          t = ne.prop("scrollTop");
          ne.scrollTop(t + e);
        } else {
          if (e > ne.prop("scrollTop") && e > 0) {
            ne.prop("scrollTop", 0);
          }

          t = ne.prop("scrollTop");
          ne.scrollTop(t + e);
        }

        return ne;
      },
      logout: function logout(n) {
        if (ye) {
          throw new Error(sprintf(te().notWhileLogin, "logout"));
        }

        De(function e() {
          if (n) {
            var t = me.pop();
            ne.set_token(undefined, true);
            ne.login.apply(ne, t);
          } else if (je.size() === 1 && ne.token()) {
            ne.logout(true);
          } else {
            while (je.size() > 1) {
              if (ne.token()) {
                ne.logout(true).pop().pop();
              } else {
                ne.pop();
              }
            }
          }
        });
        return ne;
      },
      token: function token(e) {
        return Ae.get(ne.prefix_name(e) + "_token");
      },
      set_token: function set_token(e, t) {
        var n = ne.prefix_name(t) + "_token";

        if (typeof e === "undefined") {
          Ae.remove(n);
        } else {
          Ae.set(n, e);
        }

        return ne;
      },
      get_token: function get_token(e) {
        return ne.token(e);
      },
      login_name: function login_name(e) {
        return Ae.get(ne.prefix_name(e) + "_login");
      },
      name: function name() {
        return je.top().name;
      },
      prefix_name: function prefix_name(e) {
        var t = (xe.name ? xe.name + "_" : "") + se;

        if (e && je.size() > 1) {
          var n = je.map(function (e) {
            return e.name || "";
          }).slice(1).join("_");

          if (n) {
            t += "_" + n;
          }
        }

        return t;
      },
      read: function read(e, t, n) {
        le = true;
        var r = jQuery.Deferred();
        var i = false;
        ne.push(function (e) {
          i = true;
          r.resolve(e);

          if (is_function(t)) {
            t(e);
          }

          ne.pop();

          if (xe.history) {
            Le.history().enable();
          }
        }, {
          name: "read",
          history: false,
          prompt: e || "",
          onExit: function onExit() {
            if (!i) {
              r.reject();

              if (is_function(n)) {
                n();
              }
            }
          }
        });

        if (xe.history) {
          Le.history().disable();
        }

        return r.promise();
      },
      push: function push(o, u) {
        ve(function e() {
          u = u || {};
          var t = {
            infiniteLogin: false
          };
          var r = $.extend({}, t, u);

          if (!r.name && ie) {
            r.name = ie.name;
          }

          if (r.prompt === undefined) {
            r.prompt = (r.name || ">") + " ";
          }

          var n = je.top();

          if (n) {
            n.mask = Le.mask();
          }

          var i = Re;

          function a() {
            q("onPush", [n, je.top()]);
            U();
          }

          l(o, u.login, function (e) {
            je.push($.extend({}, e, r));

            if (r.completion === true) {
              if ($.isArray(e.completion)) {
                je.top().completion = e.completion;
              } else if (!e.completion) {
                je.top().completion = false;
              }
            }

            if (r.login) {
              var t;
              var n = get_type(r.login);

              if (n === "function") {
                t = r.infiniteLogin ? $.noop : ne.pop;
                ne.login(r.login, r.infiniteLogin, a, t);
              } else if (get_type(o) === "string" && n === "string" || n === "boolean") {
                t = r.infiniteLogin ? $.noop : ne.pop;
                ne.login(g(o, r.login), r.infiniteLogin, a, t);
              }
            } else {
              a();
            }

            if (!i && ne.enabled()) {
              ne.resume();
            }
          });
        });
        return ne;
      },
      pop: function pop(e, t) {
        if (e !== undefined) {
          R(e);
        }

        var n = ne.token(true);
        var r;

        if (je.size() === 1) {
          r = je.top();

          if (xe.login) {
            if (!t) {
              q("onPop", [r, null]);
            }

            N();
            q("onExit");
          } else {
            ne.error(te().canExitError);
          }
        } else {
          if (n) {
            H();
          }

          var i = je.pop();
          r = je.top();
          U();
          ne.set_mask(r.mask);

          if (!t) {
            q("onPop", [i, r]);
          }

          if (ye && ne.get_prompt() !== te().login + ": ") {
            ye = false;
          }

          if (is_function(i.onExit)) {
            try {
              i.onExit.call(ne, ne);
            } catch (e) {
              i.onExit = $.noop;

              _(e, "onExit");
            }
          }
        }

        return ne;
      },
      option: function option(e, t) {
        if (typeof t === "undefined") {
          if (typeof e === "string") {
            return xe[e];
          } else if (_typeof(e) === "object") {
            $.each(e, function (e, t) {
              xe[e] = t;
            });
          }
        } else {
          xe[e] = t;

          if (e.match(/^num(Chars|Rows)$/)) {
            A();
          }
        }

        return ne;
      },
      invoke_key: function invoke_key(e) {
        Le.invoke_key(e);
        return ne;
      },
      keymap: function keymap(e, n) {
        if (arguments.length === 0) {
          return Le.keymap();
        }

        if (typeof n === "undefined") {
          if (typeof e === "string") {
            return Le.keymap(e);
          } else if ($.isPlainObject(e)) {
            e = $.omap(e || {}, function (n, r) {
              if (!Ve[n]) {
                return r.bind(ne);
              }

              return function (e, t) {
                return r.call(ne, e, function () {
                  return Ve[n](e, t);
                });
              };
            });
            Le.keymap(e);
          }
        } else if (typeof n === "function") {
          var r = e;

          if (!Ve[r]) {
            Le.keymap(r, n.bind(ne));
          } else {
            Le.keymap(r, function (e, t) {
              return n.call(ne, e, function () {
                return Ve[r](e, t);
              });
            });
          }
        }
      },
      level: function level() {
        return je.size();
      },
      reset: function reset() {
        De(function e() {
          ne.clear();

          while (je.size() > 1) {
            je.pop();
          }

          Q();
        });
        return ne;
      },
      purge: function purge() {
        De(function e() {
          var t = ne.prefix_name() + "_";
          var n = Ae.get(t + "interpreters");

          if (n) {
            $.each(JSON.parse(n), function (e, t) {
              Ae.remove(t + "_commands");
              Ae.remove(t + "_token");
              Ae.remove(t + "_login");
            });
          }

          Le.purge();
          Ae.remove(t + "interpreters");
        });
        return ne;
      },
      destroy: function destroy() {
        De(function e() {
          Le.destroy().remove();
          ne.resizer("unbind");
          Ne.resizer("unbind").remove();
          $(document).unbind(".terminal_" + ne.id());
          $(window).unbind(".terminal_" + ne.id());
          ne.unbind("click wheel mousewheel mousedown mouseup");
          ne.removeData("terminal").removeClass("terminal").unbind(".terminal");

          if (xe.width) {
            ne.css("width", "");
          }

          if (xe.height) {
            ne.css("height", "");
          }

          $(window).off("blur", Je).off("focus", Ke);
          ne.find(".terminal-fill, .terminal-font").remove();
          ne.stopTime();
          terminals.remove(se);

          if (Ie) {
            if (Ie.unobserve) {
              Ie.unobserve(ne[0]);
            } else {
              clearInterval(Ie);
            }
          }

          var t = ne.find(".terminal-scroll-marker");

          if (_e) {
            Ie.unobserve(t[0]);
          }

          t.remove();

          if (ze) {
            ze.disconnect();
          }

          if (!terminals.length()) {
            $(window).off("hashchange");
          }

          ue.remove();
          Pe.remove();
          $e = true;
        });
        return ne;
      },
      scroll_to: function scroll_to(e) {
        var t = ne.scrollTop() - ne.offset().top + $(e).offset().top;
        ne.scrollTop(t);
        return ne;
      },
      scroll_to_bottom: function scroll_to_bottom() {
        var e;

        if (ne.prop) {
          e = ne.prop("scrollHeight");
        } else {
          e = ne.attr("scrollHeight");
        }

        ne.scrollTop(e);
        return ne;
      },
      is_bottom: function is_bottom() {
        if (xe.scrollBottomOffset === -1) {
          return false;
        } else if (typeof ge === "boolean") {
          return ge;
        } else {
          var e, t, n;
          e = ne[0].scrollHeight;
          t = ne[0].scrollTop;
          n = ne[0].offsetHeight;
          var r = e - xe.scrollBottomOffset;
          return t + n > r;
        }
      }
    }, function (t, e) {
      return function () {
        if ($e) {
          if (!xe.exceptionHandler) {
            throw new $.terminal.Exception(te().defunctTerminal);
          }
        }

        try {
          return e.apply(ne, [].slice.apply(arguments));
        } catch (e) {
          if (t !== "exec" && t !== "resume") {
            _(e, e.type || "TERMINAL", true);
          }

          if (!xe.exceptionHandler) {
            throw e;
          }
        }
      };
    }));

    if (ne.length === 0) {
      var re = sprintf(te().invalidSelector);
      throw new $.terminal.Exception(re);
    }

    ne.data("terminal", ne);
    var ie;
    var ae;
    var oe = 0;
    var ue;
    var se = terminals.length();
    var le = false;
    var fe;
    var ce;
    var pe;
    var me = new Stack();
    var de = new DelayQueue();
    var he = new DelayQueue();
    var De = ee(he);
    var ve = ee(de);
    var ge;

    var _e;

    var ye = false;
    var be = $.noop;
    var we, Ce;
    var Ee = [];
    var xe = $.extend({}, $.terminal.defaults, {
      name: ne.selector,
      exit: !!(t && t.login || !t)
    }, t || {});

    if (typeof xe.width === "number") {
      ne.width(xe.width);
    }

    if (typeof xe.height === "number") {
      ne.height(xe.height);
    }

    var Fe = get_char_size(ne);
    delete xe.formatters;
    var $e = false;
    var ke = [];
    var Ae = new n(xe.memory);
    var Te = xe.enabled;
    var Se = false;
    var Re = false;
    var Be = true;
    var je;
    var Le;
    var Oe;
    var Ie;
    var ze;

    if (xe.ignoreSystemDescribe === true) {
      xe.describe = false;
    }

    $(document).bind("ajaxSend.terminal_" + ne.id(), function (e, t) {
      requests.push(t);
    });
    var Pe = $('<div class="terminal-wrapper"/>').appendTo(ne);
    $(broken_image).hide().appendTo(Pe);
    var Ne = $('<div class="terminal-font">&nbsp;</div>').appendTo(ne);
    var He = $('<div class="terminal-fill"/>').appendTo(ne);
    ue = $("<div>").addClass("terminal-output").attr("role", "log").appendTo(Pe);
    ne.addClass("terminal");

    if (xe.login && q("onBeforeLogin") === false) {
      Be = false;
    }

    var Me;

    if (typeof e === "string") {
      Me = e;
    } else if (is_array(e)) {
      for (var Ue = 0, qe = e.length; Ue < qe; ++Ue) {
        if (typeof e[Ue] === "string") {
          Me = e[Ue];
          break;
        }
      }
    }

    var We;

    if (is_function(xe.login)) {
      We = xe.login;
    } else if (Me && (typeof xe.login === "string" || xe.login === true)) {
      We = g(Me, xe.login);
    }

    terminals.append(ne);

    function Ke() {
      if (Oe) {
        ne.focus();
      }
    }

    function Je() {
      Oe = Te;
      ne.disable().find(".cmd textarea").trigger("blur", [true]);
    }

    function Qe(e) {
      if (is_function(e)) {
        e = e();
      }

      if (get_type(e) !== "string") {
        if (is_function(xe.parseObject)) {
          var t = xe.parseObject(e);

          if (get_type(t) === "string") {
            e = t;
          }
        } else if (is_array(e)) {
          e = $.terminal.columns(e, ne.cols(), xe.tabs);
        } else {
          e = String(e);
        }
      }

      return e;
    }

    function Ye(t) {
      if (t.proxy) {
        return t;
      }

      var e = function e(_e2) {
        return t.call(ne, _e2, ne);
      };

      e.proxy = true;
      return e;
    }

    function Ge(e) {
      e = e.originalEvent;

      function t(e, t) {
        return e.type.indexOf(t) !== -1;
      }

      function i(e) {
        ne.echo('<img src="' + e + '"/>', {
          raw: true
        });
      }

      function a(e) {
        var t = window.URL || window.webkitURL;
        return t.createObjectURL(e);
      }

      function o(e, t) {
        if (!t && is_function(xe.onPaste)) {
          var n = {
            target: ne
          };

          if (typeof e === "string") {
            n["text"] = e;
          } else if (e instanceof Blob) {
            n["image"] = a(e);
          }

          var r = q("onPaste", [n]);

          if (r) {
            if (is_function(r.then || r.done)) {
              return (r.then || r.done).call(r, function (e) {
                o(e, true);
              });
            } else {
              o(r, true);
            }
          } else {
            o(n.image || n.text, true);
          }
        } else if (e instanceof Blob) {
          i(a(e));
        } else if (typeof e === "string") {
          if (e.match(/^(data:|blob:)/)) {
            i(e);
          } else {
            ne.insert(e);
          }
        }
      }

      if (e.clipboardData) {
        if (ne.enabled()) {
          var n = e.clipboardData.items;

          if (n) {
            for (var r = 0; r < n.length; r++) {
              if (t(n[r], "image") && xe.pasteImage) {
                var u = n[r].getAsFile();
                o(u);
              } else if (t(n[r], "text/plain")) {
                n[r].getAsString(o);
              }
            }
          } else if (e.clipboardData.getData) {
            var s = e.clipboardData.getData("text/plain");
            o(s);
          }

          return false;
        }
      }
    }

    $(document).on("paste.terminal_" + ne.id(), Ge);
    var Ve = $.extend({}, V, $.omap(xe.keymap || {}, function (n, r) {
      if (!V[n]) {
        return r.bind(ne);
      }

      return function (e, t) {
        return r.call(ne, e, function () {
          return V[n](e, t);
        });
      };
    }));
    l(e, xe.login, function (e) {
      if (xe.completion && typeof xe.completion !== "boolean" || !xe.completion) {
        e.completion = "settings";
      }

      var t = xe.prompt;

      if (is_function(t)) {
        t = Ye(t);
      }

      je = new Stack($.extend({}, xe.extra, {
        name: xe.name,
        prompt: t,
        keypress: xe.keypress,
        keydown: xe.keydown,
        resize: xe.onResize,
        greetings: xe.greetings,
        mousewheel: xe.mousewheel,
        history: xe.history,
        keymap: Ve
      }, e));
      Le = $("<div/>").appendTo(Pe).cmd({
        tabindex: xe.tabindex,
        mobileDelete: xe.mobileDelete,
        mobileIngoreAutoSpace: xe.mobileIngoreAutoSpace,
        prompt: We ? false : t,
        history: xe.memory ? "memory" : xe.history,
        historyFilter: xe.historyFilter,
        historySize: xe.historySize,
        caseSensitiveSearch: xe.caseSensitiveSearch,
        onPaste: xe.onPaste,
        width: "100%",
        enabled: false,
        char_width: Fe.width,
        keydown: X,
        keymap: Ve,
        clickTimeout: xe.clickTimeout,
        holdTimeout: xe.holdTimeout,
        holdRepeatTimeout: xe.holdRepeatTimeout,
        repeatTimeoutKeys: xe.repeatTimeoutKeys,
        allowedAttributes: xe.allowedAttributes,
        keypress: Z,
        tabs: xe.tabs,
        onPositionChange: function onPositionChange() {
          var e = [].slice.call(arguments);
          K();
          q("onPositionChange", e);
        },
        onCommandChange: function onCommandChange(e) {
          if (we !== He.width()) {
            ne.resizer();
          }

          q("onCommandChange", [e]);
          K();
        },
        commands: P
      });

      function n(e) {
        e = e.originalEvent;

        if (e) {
          var t = document.elementFromPoint(e.clientX, e.clientY);

          if (!$(t).closest(".terminal").length && ne.enabled()) {
            ne.disable();
          }
        }
      }

      ne.oneTime(100, function () {
        $(document).bind("click.terminal_" + ne.id(), n).bind("contextmenu.terminal_" + ne.id(), n);
      });
      var r = $(window);
      document.addEventListener("resume", function () {
        ne.disable();
      });

      if (is_mobile) {
        ne.click(function () {
          if (!Se) {
            if (!ne.enabled()) {
              ne.focus();
              Le.enable();
            } else {
              ne.disable();
            }
          }
        });
      } else {
        r.on("focus.terminal_" + ne.id(), Ke).on("blur.terminal_" + ne.id(), Je);

        (function () {
          var t = 0;
          var n;
          var r = "click_" + ne.id();
          var i = ne.find(".cmd textarea");

          function a() {
            if (n.is(".terminal") || n.is(".terminal-wrapper")) {
              var e = ne.get_command().length;
              ne.set_position(e);
            } else if (n.closest(".cmd-prompt").length) {
              ne.set_position(0);
            }

            if (!i.is(":focus")) {
              i.focus();
            }

            o();
          }

          function o() {
            t = 0;
            n = null;
          }

          var u = ".terminal-output textarea," + ".terminal-output input";
          ne.mousedown(function (e) {
            if (!scrollbar_event(e, He)) {
              n = $(e.target);
            }
          }).mouseup(function () {
            if (n && n.closest(u).length) {
              if (Te) {
                ne.disable();
              }
            } else if (get_selected_html() === "" && n) {
              if (++t === 1) {
                if (!Se) {
                  if (!Te) {
                    ne.focus();
                  } else {
                    var e = xe.clickTimeout;
                    ne.oneTime(e, r, a);
                    return;
                  }
                }
              } else {
                ne.stopTime(r);
              }
            }

            o();
          }).dblclick(function () {
            o();
            ne.stopTime(r);
          });
        })();

        (function () {
          var n = ne.find(".cmd textarea");

          function r(e) {
            return e.type === "mousedown" && e.buttons === 2 || e.type === "contextmenu";
          }

          ne.on("contextmenu.terminal mousedown.terminal", function (e) {
            if (get_selected_html() === "" && r(e)) {
              if (!$(e.target).is("img,value,audio,object,canvas,a")) {
                if (!ne.enabled()) {
                  ne.enable();
                }

                var t = Le.offset();
                n.css({
                  left: e.pageX - t.left - 20,
                  top: e.pageY - t.top - 20,
                  width: "5em",
                  height: "4em"
                });

                if (!n.is(":focus")) {
                  n.focus();
                }

                ne.stopTime("textarea");
                ne.oneTime(100, "textarea", function () {
                  var e = {
                    left: "",
                    top: "",
                    width: "",
                    height: ""
                  };

                  if (!is_css_variables_supported) {
                    var t = ne.find(".cmd .cmd-cursor-line").prevUntil(".cmd-prompt").length;
                    e.top = t * 14 + "px";
                  }

                  n.css(e);
                });
                ne.stopTime("selection");
                ne.everyTime(20, "selection", function () {
                  if (n[0].selection !== n[0].value) {
                    if (get_textarea_selection(n[0])) {
                      clear_textarea_selection(n[0]);
                      select(ne.find(".terminal-output")[0], ne.find(".cmd div:last-of-type")[0]);
                      ne.stopTime("selection");
                    }
                  }
                });
              }
            }
          });
        })();
      }

      ne.on("click", "a", function (e) {
        var t = $(this);

        if (t.closest(".terminal-exception").length) {
          var n = t.attr("href");

          if (n.match(/:[0-9]+$/)) {
            e.preventDefault();
            m(n, ne.cols());
          }
        }

        if (Te) {
          ne.find(".cmd textarea").focus();
        }
      });

      function i() {
        var e = Fe.width;
        Fe = get_char_size(ne);

        if (e !== Fe.width) {
          Le.option("char_width", Fe.width).refresh();
        }
      }

      a();

      function a() {
        if (ne.is(":visible")) {
          var e = He.width();
          var t = He.height();

          if (Ce !== t || we !== e) {
            ne.resize();
          }

          Ce = t;
          we = e;
        }
      }

      function o() {
        var e = {
          prefix: "terminal-"
        };
        ne.resizer("unbind").resizer(a, e);
        Ne.resizer("unbind").resizer(function () {
          i();
          ne.resize();
        }, e);
      }

      function u(e) {
        ge = e[0].intersectionRatio === 1;
      }

      function s() {
        if (window.IntersectionObserver) {
          var e = $('<div class="terminal-scroll-marker"/>').appendTo(ne);
          var t = e;

          if (xe.scrollBottomOffset !== -1) {
            t = $("<div/>").css({
              height: xe.scrollBottomOffset
            }).appendTo(e);
          }

          _e = new IntersectionObserver(u, {
            root: ne[0]
          });

          _e.observe(t[0]);
        }
      }

      s();

      if (ne.is(":visible")) {
        o();
      }

      function l() {
        if (Ie) {
          if (Ie.unobserve) {
            Ie.unobserve(ne[0]);
          } else {
            clearInterval(Ie);
          }
        }

        var e = ne.enabled();
        var t = ne.is(":visible");

        if (e && !t) {
          ne.disable();
        }

        if (t) {
          o();
        } else {
          Pe.css("visibility", "hidden");
        }

        function n() {
          if (ne.is(":visible") && !t) {
            t = true;
            o();
            i();
            a();

            if (e) {
              ne.enable();
            }

            Pe.css("visibility", "");
          } else if (t && !ne.is(":visible")) {
            t = false;
            e = $.terminal.active() === ne && ne.enabled();
            ne.disable();
            Pe.css("visibility", "hidden");
          }
        }

        if (window.IntersectionObserver && ne.css("position") !== "fixed") {
          Ie = new IntersectionObserver(n, {
            root: null
          });
          Ie.observe(ne[0]);
        } else {
          Ie = setInterval(n, 100);
        }
      }

      var f = !!ne.closest("body").length;
      var c = window.MutationObserver || window.WebKitMutationObserver;

      if (c) {
        ze = new c(function () {
          if (ne.closest("body").length) {
            if (!f) {
              ne.scroll_to_bottom();
              l();
              a();
            }

            f = true;
          } else if (f) {
            f = false;
          }
        });
        ze.observe(document.body, {
          childList: true
        });
      }

      if (f) {
        l();
      }

      de.resolve();

      if (Te && ne.is(":visible") && !is_mobile) {
        ne.focus(undefined, true);
      } else {
        ne.disable();
      }

      if (is_function(We)) {
        ne.login(We, true, Q);
      } else {
        Q();
      }

      function p(e) {
        var t = terminals.get()[e[0]];

        if (t && se === t.id()) {
          if (!e[2]) {
            n.resolve();
            return n.promise();
          } else if (Re) {
            var n = $.Deferred();
            z.push(function () {
              return t.exec(e[2]).done(function () {
                t.save_state(e[2], true, e[1]);
                n.resolve();
              });
            });
            return n.promise();
          } else {
            return t.exec(e[2]).done(function () {
              t.save_state(e[2], true, e[1]);
            });
          }
        }
      }

      if (xe.execHash) {
        if (location.hash) {
          setTimeout(function () {
            try {
              var e = location.hash.replace(/^#/, "");
              hash_commands = JSON.parse(decodeURIComponent(e));
              var n = 0;

              (function e() {
                var t = hash_commands[n++];

                if (t) {
                  p(t).done(e);
                } else {
                  change_hash = true;
                }
              })();
            } catch (e) {}
          });
        } else {
          change_hash = true;
        }
      } else {
        change_hash = true;
      }

      (function () {
        var i = false;
        $(document).bind("keydown.terminal_" + ne.id(), function (e) {
          if (e.shiftKey) {
            i = true;
          }
        }).bind("keyup.terminal_" + ne.id(), function (e) {
          if (e.shiftKey || e.which === 16) {
            i = false;
          }
        });

        function n(e, t) {
          if (!i) {
            var n = je.top();
            var r;

            if (is_function(n.mousewheel)) {
              r = n.mousewheel(e, t, ne);
            } else if (is_function(xe.mousewheel)) {
              r = xe.mousewheel(e, t, ne);
            }

            if (r === true) {
              return;
            }

            if ((B() || r === false) && !e.ctrlKey) {
              e.stopPropagation();
              e.preventDefault();
            }

            if (r === false) {
              return false;
            }

            if (t > 0) {
              ne.scroll(-40);
            } else {
              ne.scroll(40);
            }
          }
        }

        if ($.event.special.mousewheel) {
          ne.on("mousewheel", n);
        } else {
          var r;
          var e = document.createElement("div");

          if ("onwheel" in e) {
            r = "wheel";
          } else if (document.onmousewheel !== undefined) {
            r = "mousewheel";
          } else {
            r = "DOMMouseScroll";
          }

          e = null;
          ne.on(r, function (e) {
            var t;

            if (r === "mousewheel") {
              t = -1 / 40 * e.originalEvent.wheelDelta;
            } else {
              t = e.originalEvent.deltaY || e.originalEvent.detail;
            }

            n(e, -t);
          });
        }
      })();
    });
    return ne;
  };
});