{"version":3,"sources":["jquery.terminal.js"],"sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version 2.35.3\n *\n * This file is part of jQuery Terminal. https://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2022 Jakub T. Jankiewicz <https://jcubic.pl/me>\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * debounce function from Lodash\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * The MIT License\n *\n * emoji regex v9.0.0 by Mathias Bynens\n * MIT license\n *\n * broken image by Sophia Bai from the Noun Project (CC-BY)\n *\n * Date: Mon, 06 Feb 2023 20:13:15 +0000\n */\n/* global define, Map */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.slice(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.slice(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.slice(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : self || window);\n// -----------------------------------------------------------------------\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root;\n    if (typeof window !== 'undefined') {\n        root = window;\n    } else if (typeof self !== 'undefined') {\n        root = self;\n    } else if (typeof global !== 'undefined') {\n        root = global;\n    } else {\n        throw new Error('Unknow context');\n    }\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], function(jquery, wcwidth) {\n            factory(jquery, wcwidth, root);\n            return jquery;\n        });\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (typeof window !== 'undefined') {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth, root);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        if (!root.jQuery) {\n            root.$ = root.cash;\n        }\n        factory(root.jQuery || root.cash, root.wcwidth, root);\n    }\n})(function($, wcwidth, root, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    /* istanbul ignore next */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n    // -----------------------------------------------------------------------\n    // IE11 polyfill\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    if ('Map' in root && !('clear' in Map.prototype)) {\n        Map.prototype.clear = function() {\n            this.forEach(function(value, key, map) {\n                map.delete(key);\n            });\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.slice(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.slice(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: Debounce from Lodash\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    var debounce = (function() {\n        var FUNC_ERROR_TEXT = 'Expected a function';\n        function isObject(value) {\n            var type = typeof value;\n            return value != null && (type == 'object' || type == 'function');\n        }\n        function now() {\n            return Date.now();\n        }\n        return function debounce(func, wait, options) {\n            var nativeMax = Math.max,\n                nativeMin = Math.min;\n\n            var lastArgs,\n                lastThis,\n                maxWait,\n                result,\n                timerId,\n                lastCallTime,\n                lastInvokeTime = 0,\n                leading = false,\n                maxing = false,\n                trailing = true;\n\n            if (typeof func != 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            wait = wait || 0;\n            if (isObject(options)) {\n                leading = !!options.leading;\n                maxing = 'maxWait' in options;\n                maxWait = maxing ? nativeMax(options.maxWait || 0, wait) : maxWait;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n\n            function invokeFunc(time) {\n                var args = lastArgs,\n                    thisArg = lastThis;\n\n                lastArgs = lastThis = undefined;\n                lastInvokeTime = time;\n                result = func.apply(thisArg, args);\n                return result;\n            }\n\n            function leadingEdge(time) {\n                // Reset any `maxWait` timer.\n                lastInvokeTime = time;\n                // Start the timer for the trailing edge.\n                timerId = setTimeout(timerExpired, wait);\n                // Invoke the leading edge.\n                return leading ? invokeFunc(time) : result;\n            }\n\n            function remainingWait(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime,\n                    timeWaiting = wait - timeSinceLastCall;\n\n                return maxing\n                    ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n                    : timeWaiting;\n            }\n\n            function shouldInvoke(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime;\n\n                // Either this is the first call, activity has stopped and we're at the\n                // trailing edge, the system time has gone backwards and we're treating\n                // it as the trailing edge, or we've hit the `maxWait` limit.\n                return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n                        (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n            }\n\n            function timerExpired() {\n                var time = now();\n                if (shouldInvoke(time)) {\n                    return trailingEdge(time);\n                }\n                // Restart the timer.\n                timerId = setTimeout(timerExpired, remainingWait(time));\n            }\n\n            function trailingEdge(time) {\n                timerId = undefined;\n\n                // Only invoke if we have `lastArgs` which means `func` has been\n                // debounced at least once.\n                if (trailing && lastArgs) {\n                    return invokeFunc(time);\n                }\n                lastArgs = lastThis = undefined;\n                return result;\n            }\n\n            function cancel() {\n                if (timerId !== undefined) {\n                    clearTimeout(timerId);\n                }\n                lastInvokeTime = 0;\n                lastArgs = lastCallTime = lastThis = timerId = undefined;\n            }\n\n            function flush() {\n                return timerId === undefined ? result : trailingEdge(now());\n            }\n\n            function debounced() {\n                var time = now(),\n                    isInvoking = shouldInvoke(time);\n\n                lastArgs = arguments;\n                lastThis = this;\n                lastCallTime = time;\n\n                if (isInvoking) {\n                    if (timerId === undefined) {\n                        return leadingEdge(lastCallTime);\n                    }\n                    if (maxing) {\n                        // Handle invocations in a tight loop.\n                        timerId = setTimeout(timerExpired, wait);\n                        return invokeFunc(lastCallTime);\n                    }\n                }\n                if (timerId === undefined) {\n                    timerId = setTimeout(timerExpired, wait);\n                }\n                return result;\n            }\n            debounced.cancel = cancel;\n            debounced.flush = flush;\n            return debounced;\n        };\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    if (!this.is(':focus')) {\n                        target.focus();\n                    }\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                if (!this.is(':focus')) {\n                    target.focus();\n                }\n                var selection = window.getSelection();\n                selection.collapse(selection.focusNode, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: callback based event handler plugin generator\n    // -----------------------------------------------------------------------\n    function make_callback_plugin(options) {\n        var factory_settings = $.extend({\n            init: $.noop,\n            destroy: $.noop,\n            name: 'event'\n        }, options);\n        return function(callback, options) {\n            var trigger = arguments.length === 0;\n            var unbind = arguments[0] === \"unbind\";\n            if (!trigger && !unbind && !is_function(callback)) {\n                throw new Error('Invalid argument, it need to a function or string ' +\n                                '\"unbind\" or no arguments.');\n            }\n            if (unbind) {\n                callback = is_function(arguments[1]) ? arguments[1] : null;\n            }\n            var data_name = 'callbacks_' + factory_settings.name;\n            return this.each(function() {\n                var $this = $(this);\n                var callbacks;\n                function handler(arg) {\n                    callbacks.fireWith($this, [arg]);\n                }\n                if (trigger || unbind) {\n                    callbacks = $this.data(data_name);\n                    if (trigger) {\n                        callbacks && callbacks.fire();\n                    } else {\n                        if (callback && callbacks) {\n                            callbacks.remove(callback);\n                            if (!callbacks.has()) {\n                                callbacks = null;\n                            }\n                        } else {\n                            callbacks = null;\n                        }\n                        if (!callbacks) {\n                            $this.removeData(data_name);\n                            factory_settings.destroy.call(this, handler, options);\n                        }\n                    }\n                } else if ($this.data(data_name)) {\n                    $(this).data(data_name).add(callback);\n                } else {\n                    callbacks = $.Callbacks();\n                    callbacks.add(callback);\n                    $this.data(data_name, callbacks);\n                    factory_settings.init.call(this, handler, options);\n                }\n            });\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = make_callback_plugin({\n        name: 'resize',\n        init: function(handler, options) {\n            var settings = $.extend({\n                prefix: ''\n            }, options);\n            var $this = $(this);\n            var resizer;\n            var first = true;\n            if ($this.is('body')) {\n                $(window).on('resize.resizer', handler);\n            } else if (window.ResizeObserver) {\n                resizer = new ResizeObserver(function() {\n                    if (!first) {\n                        handler();\n                    }\n                    first = false;\n                });\n                resizer.observe(this);\n                $this.data('observer', resizer);\n            } else {\n                var iframe = $('<iframe/>').addClass(settings.prefix + 'resizer')\n                    .appendTo(this)[0];\n                $(iframe.contentWindow).on('resize', handler);\n            }\n        },\n        destroy: function() {\n            var $this = $(this);\n            if (window.ResizeObserver) {\n                var observer = $this.data('observer');\n                if (observer) {\n                    observer.unobserve(this);\n                    $this.removeData('observer');\n                }\n            } else {\n                var iframe = $this.find('> iframe[class$=\"resizer\"]');\n                if (iframe.length) {\n                    // just in case of memory leaks in IE\n                    $(iframe[0].contentWindow).off('resize').remove();\n                    iframe.remove();\n                } else if ($this.is('body')) {\n                    $(window).off('resize.resizer');\n                }\n            }\n        }\n    });\n    // -----------------------------------------------------------------------\n    // :: Mobile friendly scroll that work without scrollbar (for less)\n    // -----------------------------------------------------------------------\n    $.fn.touch_scroll = make_callback_plugin({\n        name: 'touch',\n        init: function(handler) {\n            var origin;\n            var previous;\n            $(this).on('touchstart.scroll', function(e) {\n                e = e.originalEvent;\n                if (e.target.tagName.toLowerCase() !== 'a' && e.touches.length === 1) {\n                    previous = origin = e.touches[0];\n                }\n            }).on('touchmove.scroll', function(e) {\n                e = e.originalEvent;\n                if (origin && e.touches.length === 1) {\n                    var current = e.touches[0];\n                    var ret = handler({\n                        origin: origin,\n                        previous: previous,\n                        current: current\n                    });\n                    if (ret === false) {\n                        e.preventDefault();\n                    }\n                    previous = current;\n                }\n            }).on('touchend.scroll', function() {\n                if (origin || previous) {\n                    origin = previous = null;\n                }\n            });\n        },\n        destroy: function() {\n            $(this).off('touchstart.scroll touchmove.scroll touchend.scroll');\n        }\n    });\n    // -----------------------------------------------------------------------\n    // :: This plugin is used to pause terminal when images and iframes\n    // :: are loading\n    // -----------------------------------------------------------------------\n    $.fn.on_load = function(options) {\n        var settings = $.extend({\n            error: $.noop,\n            load: $.noop,\n            done: $.noop\n        }, options);\n        var defers = [];\n        this.find('img,iframe').each(function() {\n            var self = $(this);\n            var defer = new $.Deferred();\n            self.on('load', defer.resolve)\n                .on('error', function() {\n                    settings.error(self);\n                    defer.reject();\n                });\n            defers.push(defer);\n        });\n        settings.load(!!defers.length);\n        if (defers.length) {\n            $.when.apply($, defers).then(function() {\n                settings.done(true);\n            });\n        } else {\n            settings.done(false);\n        }\n        return this;\n    };\n    // -----------------------------------------------------------------------\n    function jquery_resolve(value) {\n        var defer = jQuery.Deferred();\n        defer.resolve(value);\n        return defer.promise();\n    }\n    // -----------------------------------------------------------------------\n    function unpromise(value, callback, error) {\n        if (value !== undefined) {\n            if (is_promise(value)) {\n                if (is_function(value.catch) && is_function(error)) {\n                    value.catch(error);\n                }\n                if (is_function(value.done)) {\n                    return value.done(callback);\n                } else if (is_function(value.then)) {\n                    return value.then(callback);\n                }\n            } else if (value instanceof Array) {\n                var promises = value.filter(function(value) {\n                    return value && (is_function(value.done) || is_function(value.then));\n                });\n                if (promises.length) {\n                    var result = $.when.apply($, value).then(function() {\n                        return callback([].slice.call(arguments));\n                    });\n                    if (is_function(result.catch)) {\n                        result = result.catch(error);\n                    }\n                    return result;\n                }\n            }\n            // TODO: investigate why it break when called\n            //       when value is undefined\n            //       when moving this line outside if\n            //       it breaks all completion unit tests\n            return callback(value);\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: helper to allow to execute unpromise with undefined\n    // :: this is workaround on the problem above\n    // -----------------------------------------------------------------------\n    function always(value) {\n        return value === undefined ? true : value;\n    }\n    // -----------------------------------------------------------------------\n    // :: based on https://github.com/zeusdeux/isInViewport\n    // :: work only vertically and on dom elements\n    // -----------------------------------------------------------------------\n    $.fn.is_fully_in_viewport = (function() {\n        function is_visible(node, container) {\n            var box = node.getBoundingClientRect();\n            var viewport = container[0].getBoundingClientRect();\n            var top = box.top - viewport.top;\n            var bottom = box.bottom - viewport.top;\n            var height = container.height();\n            return bottom > 0 && top <= height;\n        }\n        if (root.IntersectionObserver) {\n            return function(container) {\n                var node = this[0];\n                var defer = jQuery.Deferred();\n                var item_observer = new root.IntersectionObserver(function(entries) {\n                    defer.resolve(entries[0].isIntersecting && entries[0].ratio === 1);\n                    item_observer.unobserve(node);\n                }, {\n                    root: container[0]\n                });\n                item_observer.observe(node);\n                return defer.promise();\n            };\n        } else {\n            return function(container) {\n                return jquery_resolve(is_visible(this[0], container));\n            };\n        }\n    })();\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    var entity_re = /(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /(\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83E\\uDDD1(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83C\\uDFF3\\uFE0F\\u200D\\u26A7|\\uD83E\\uDDD1(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC3B\\u200D\\u2744|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E-\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC08\\u200D\\u2B1B|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])\\uFE0F?|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDD77\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD]))/;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\](?:[^\\]\\\\]*(?:\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[((?:-?[@!gbiuso])*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]\\\\]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]+)\\]?/gi;\n    var format_re = /\\[\\[((?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[((?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^(\\[\\[(?:(?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\])([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)(\\])$/i;\n    var format_begin_re = /(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\]?$/i;\n    var self_closing_re = /^(?:\\[\\[)?[^;]*@[^;]*;/;\n    var color_re = /^(?:#([0-9a-f]{3}|[0-9a-f]{4}|[0-9a-f]{6}|[0-9a-f]{8})|rgba?\\([^)]+\\)|hsla?\\([^)]+\\))$/i;\n    var url_re = /(\\b(?:file|ftp|https?):\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'\\\\<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\"\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'\\\\<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var url_full_re = /^(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\\\\\][)])+)$/gi;\n    var email_full_re = /^((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))$/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|`[^`\\\\]*(?:\\\\[\\S\\s][^`\\\\]*)*`|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_exec_split_re = /(\\[\\[(?:-?[@!gbiuso])*;[^\\]]+\\](?:\\\\[[\\]]|[^\\]])*\\]|\\[\\[[\\s\\S]+?\\]\\])/;\n    var format_exec_re = /(\\[\\[[\\s\\S]+?\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*'|`(?:[^`\\\\]|\\\\(?:\\\\\\\\)*`|\\\\\\\\)*`)/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    var broken_image = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 14\"><title id=\"title2\">rounded</title><path id=\"terminal-broken-image\" d=\"m 14,10 h 2 v 1 a 3,3 0 0 1 -3,3 H 3 A 3,3 0 0 1 0,11 H 4.5 A 1.00012,1.00012 0 0 0 5.207,10.707 L 6.5,9.414 7.793,10.707 a 0.99963,0.99963 0 0 0 1.41406,0 l 2.36719,-2.36719 1.80127,1.44092 A 0.99807,0.99807 0 0 0 14,10 Z M 16,3 V 8 H 14.35059 L 12.12451,6.21924 A 0.99846,0.99846 0 0 0 10.793,6.293 L 8.5,8.586 7.207,7.293 a 0.99962,0.99962 0 0 0 -1.41406,0 L 4.08594,9 H 0 V 3 A 3,3 0 0 1 3,0 h 10 a 3,3 0 0 1 3,3 z M 6,4.5 A 1.5,1.5 0 1 0 4.5,6 1.5,1.5 0 0 0 6,4.5 Z\" /></svg>';\n    var use_broken_image = '<svg class=\"terminal-broken-image\" role=\"presentation\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 14\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><use xlink:href=\"#terminal-broken-image\"/></svg>';\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: features flags\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        if (typeof document === 'undefined') {\n            return false;\n        }\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var agent = (root.navigator || window.navigator).userAgent;\n    var is_IE = /MSIE|Trident/.test(agent) || /rv:11.0/i.test(agent);\n    var is_IEMobile = /IEMobile/.test(agent);\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        if (is_IE && !is_IEMobile) {\n            return false;\n        }\n        if (typeof document === 'undefined') {\n            return true; // run without browser context\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = root.CSS && root.CSS.supports &&\n            root.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in root && 'key' in root.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = root.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return !!get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_browser = (function() {\n        try {\n            return this === window;\n        } catch (e) {\n            return false;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        // detect iPad 13\n        // ref: https://stackoverflow.com/a/57924983/387194s\n        if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1) {\n            return true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || root.opera);\n    // -------------------------------------------------------------------------\n    // IE ch unit bug detection - better that UserAgent that can be changed\n    // -------------------------------------------------------------------------\n    var ch_unit_bug = false;\n    if (is_browser) {\n        $(function() {\n            function width(e) {\n                return e[0].getBoundingClientRect().width;\n            }\n            var base = '<span style=\"font-family: monospace;visibility:hidden;';\n            var ch = $(base + 'width:1ch;overflow: hidden\">&nbsp;</span>');\n            ch.appendTo('body');\n            var space = $(base + '\">&nbsp;</span>').appendTo('body');\n            // in FireFox the size of space is fraction larger #579\n            ch_unit_bug = Math.abs(width(ch) - width(space)) > 0.0001;\n            ch.remove();\n            space.remove();\n        });\n    }\n    // -----------------------------------------------------------------------\n    // :: css helper that work with css variables\n    // :: jQuery css method from 3.4 support them by default\n    // -----------------------------------------------------------------------\n    function css(node, obj, value) {\n        if (node instanceof $.fn.init) {\n            node.each(function() {\n                css(this, obj, value);\n            });\n        } else if ($.isPlainObject(obj)) {\n            Object.keys(obj).forEach(function(key) {\n                node.style.setProperty(key, obj[key]);\n            });\n        } else if (typeof value === 'undefined') {\n            return node.style.getPropertyValue(obj);\n        } else {\n            node.style.setProperty(obj, value);\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: return CSS property with pixel size & proper\n    // -----------------------------------------------------------------------\n    function style_prop(name, value, important) {\n        var props = [\n            name + ':' + value + 'px',\n            name + ':' + 'calc(' + value + 'px / var(--pixel-density, 1))'\n        ];\n        if (important) {\n            props = props.map(function(prop) {\n                return prop + ' !important';\n            });\n        }\n        return props.join(';');\n    }\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        if (arguments[0] instanceof $.terminal.Exception) {\n            label = arguments[0].type;\n            e = arguments[0];\n        }\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            setTimeout(function() {\n                throw e;\n            }, 0);\n            //alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // ref: https://stackoverflow.com/a/6248722/387194\n    function generate_id() {\n        // I generate the UID from two parts here\n        // to ensure the random number provide enough bits.\n        var firstPart = (Math.random() * 46656) | 0;\n        var secondPart = (Math.random() * 46656) | 0;\n        firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\n        secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\n        return firstPart + secondPart;\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node, pixel_density) {\n        pixel_density = pixel_density || 1;\n        var left = node.offset().left;\n        var max_width = node.outerWidth() * pixel_density;\n        return max_width <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip, init) {\n                if (init === undefined) {\n                    init = pos;\n                } else if (init === pos) {\n                    return;\n                }\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true, init);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    /*\n    function time() {\n        // performance.now almost equal Date.now()- performance.timing.navigationStart\n        // the difference check should be almost the same\n        return performance ? performance.now() : Date.now();\n    }\n    */\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = is_array(init) ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: Class for Worker that do some computation when needed\n    // :: if validation function return false it mean that condition changed\n    // :: and cache need to be cleared. If value was not processed it will run\n    // :: the action\n    // -------------------------------------------------------------------------\n    function WorkerCache(options) {\n        var settings = $.extend({\n            validation: $.noop,\n            action: $.noop,\n            onCache: $.noop\n        }, options);\n        this._onCache = settings.onCache.bind(this);\n        this._action = settings.action.bind(this);\n        this._validation = settings.validation.bind(this);\n        if ('Map' in root) {\n            this._cache = new Map();\n        }\n    }\n    // -------------------------------------------------------------------------\n    WorkerCache.prototype.validate = function(key) {\n        var valid = this._validation(key);\n        var test = valid === undefined || valid === true;\n        if (!test) {\n            this._cache.clear();\n        }\n        return test;\n    };\n    // -------------------------------------------------------------------------\n    WorkerCache.prototype.clear = function() {\n        this._cache.clear();\n    };\n    // -------------------------------------------------------------------------\n    WorkerCache.prototype.get = function(key) {\n        if (!this._cache) {\n            return this._action(key);\n        }\n        var value;\n        if (this.validate(key) && this._cache.has(key)) {\n            value = this._cache.get(key);\n            this._onCache({cache: value});\n            return value;\n        }\n        value = this._action(key);\n        this._cache.set(key, value);\n        return value;\n    };\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (is_array(new_data)) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    function OutputLines(settings) {\n        this._settings = settings;\n        this._lines = [];\n        this._snapshot = [];\n    }\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.make_snapshot = function(snapshot) {\n        this._snapshot.push(snapshot);\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.get_partial = function() {\n        var last = this._snapshot[this._snapshot.length - 1];\n        return last;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.update_snapshot = function(index, snapshot) {\n        this._snapshot[index] = snapshot;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.limit_snapshot = function(limit) {\n        this._snapshot = this._snapshot.slice(limit);\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.clear_snapshot = function() {\n        this._snapshot = [];\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.get_snapshot = function() {\n        return this._snapshot.reduce(function(acc, arr) {\n            return acc.concat(arr);\n        }, []).join('\\n');\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.join = function() {\n        var args = [].slice.call(arguments);\n        if (args.some(is_function)) {\n            return function() {\n                return args.reduce(function(acc, arg) {\n                    if (is_function(acc)) {\n                        acc = acc();\n                    }\n                    if (is_function(arg)) {\n                        arg = arg();\n                    }\n                    if (is_promise(acc) || is_promise(arg)) {\n                        return $.when(acc, arg).then(function(acc, arg) {\n                            return acc + arg;\n                        });\n                    }\n                    return arg;\n                });\n            };\n        } else if (args.some(is_promise)) {\n            return args.reduce(function(acc, arg) {\n                return $.when(acc, arg).then(function(acc, arg) {\n                    return acc + arg;\n                });\n            });\n        }\n        return args.join('');\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.import = function(data) {\n        this._lines = data;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.push = function(data) {\n        var value = data[0];\n        var options = data[1];\n        if (this.has_newline()) {\n            this._lines.push(data);\n        } else {\n            var last_line = this.last_line();\n            last_line[0] = this.join(last_line[0], value);\n            last_line[1].newline = options.newline;\n        }\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.clear = function(fn) {\n        this._lines.forEach(function(line, i) {\n            var options = line[1];\n            if (is_function(options.onClear)) {\n                options.onClear.call(self, fn(i));\n            }\n        });\n        this._lines = [];\n        this._snapshot = [];\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.data = function() {\n        return this._lines;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.has_newline = function() {\n        if (this._lines.length === 0) {\n            return true;\n        }\n        return this.last_line()[1].newline;\n    };\n    // -------------------------------------------------------------------------\n    // :: call when line is out of view when outputLimit is used\n    // :: NOTE: it's not called when less plugin is used onClear is called\n    // :: instead because less call term::clear() after export old view\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.unmount = function(node) {\n        var index = node.data('index');\n        var line = this._lines[index];\n        if (line) {\n            var options = line[1];\n            if (is_function(options.unmount)) {\n                options.unmount.call(self, node);\n            }\n        }\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.last_line = function() {\n        var len = this._lines.length;\n        return this._lines[len - 1];\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.update = function(index, value, options) {\n        if (value === null) {\n            this._lines.splice(index, 1);\n        } else {\n            this._lines[index][0] = value;\n            if (options) {\n                this._lines[index][1] = $.extend(this._lines[index][1], options);\n            }\n            return this._lines[index][1];\n        }\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.length = function() {\n        return this._lines.length;\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.valid_index = function(index) {\n        return !!this._lines[index];\n    };\n    // -------------------------------------------------------------------------\n    OutputLines.prototype.render = function(cols, fn) {\n        var settings = this._settings();\n        var lines_to_show = [];\n        this._snapshot = [];\n        if (settings.outputLimit >= 0) {\n            // flush will limit lines but if there is lot of\n            // lines we don't need to show them and then remove\n            // them from terminal\n            var limit;\n            if (settings.outputLimit === 0) {\n                limit = cols;\n            } else {\n                limit = settings.outputLimit;\n            }\n            this._lines.forEach(function(line, index) {\n                var value = line[0];\n                var options = line[1];\n                lines_to_show.push({\n                    value: value,\n                    index: index,\n                    options: options\n                });\n            });\n            var pivot = lines_to_show.length - limit - 1;\n            lines_to_show = lines_to_show.slice(pivot);\n        } else {\n            lines_to_show = this._lines.map(function(line, index) {\n                return {\n                    value: line[0],\n                    index: index,\n                    options: line[1]\n                };\n            });\n        }\n        return fn(lines_to_show);\n    };\n    // -------------------------------------------------------------------------\n    // :: FormatBuffer is a class that buffer line printed on terminal\n    // :: with optional format of the text, the class also use cache\n    // :: the options in the constructor is a function that should returns\n    // :: settings for given format, the settings may change while the terminal\n    // :: is running, that's why they are dynamic in form of a function\n    // -------------------------------------------------------------------------\n    function FormatBuffer(options) {\n        this._options = options;\n        if ('Map' in root) {\n            this._format_cache = new Map();\n        }\n        this._output_buffer = [];\n    }\n    // -------------------------------------------------------------------------\n    FormatBuffer.NEW_LINE = 1;\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.format = function format(arg, newline, raw) {\n        var use_cache = this._format_cache && this._settings.useCache;\n\n        if (use_cache) {\n            var args = JSON.stringify([arg, this._settings]);\n            if (this._format_cache.has(args)) {\n                return this._format_cache.get(args);\n            }\n        }\n        var data = {\n            line: $.terminal.format(\n                arg,\n                this._settings\n            ),\n            raw: raw,\n            newline: newline\n        };\n        if (use_cache) {\n            this._format_cache.set(args, data);\n        }\n        return data;\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.empty = function() {\n        return !this._output_buffer.length;\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.append = function(arg, index, options, raw) {\n        this._settings = $.extend({\n            useCache: true\n        }, this._options(options));\n\n        this._output_buffer.push(FormatBuffer.NEW_LINE);\n\n        if (arg instanceof Array) {\n            var raw_lines = raw.split('\\n');\n            for (var i = 0, len = arg.length; i < len; ++i) {\n                if (arg[i] === '' || arg[i] === '\\r') {\n                    this._output_buffer.push({line: '', raw: ''});\n                } else {\n                    var formatted = this.format(arg[i], i === len - 1, raw_lines[i]);\n                    this._output_buffer.push(formatted);\n                }\n            }\n        } else if (options.raw) {\n            this._output_buffer.push({line: arg, raw: raw});\n        } else {\n            this._output_buffer.push(this.format(arg, false, raw));\n        }\n        this._output_buffer.push({\n            finalize: options.finalize,\n            index: index,\n            raw: options.raw,\n            newline: options.newline\n        });\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.clear_cache = function() {\n        if (this._format_cache) {\n            this._format_cache.clear();\n        }\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.output = function() {\n        return this._output_buffer.slice();\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.is_empty = function() {\n        return !this._output_buffer.length;\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.clear = function() {\n        this._output_buffer = [];\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.forEach = function(fn) {\n        var i = 0;\n        while (i < this._output_buffer.length) {\n            var data = this._output_buffer[i++];\n            if (data === FormatBuffer.NEW_LINE) {\n                fn();\n            } else {\n                fn(data);\n            }\n        }\n    };\n    // -------------------------------------------------------------------------\n    FormatBuffer.prototype.flush = function(render) {\n        this.forEach(render);\n        this.clear();\n    };\n    // -------------------------------------------------------------------------\n    // :: function that handle all cases of prompt and call the function set\n    // :: with a string\n    // -------------------------------------------------------------------------\n    function with_prompt(prompt, set, context) {\n        function error(e) {\n            var prompt = $.terminal.escape_brackets('[ERR]> ');\n            set('[[;red;]' + prompt + ']');\n            alert_exception('Prompt', e);\n        }\n        function done(prompt) {\n            set(prompt);\n            deferred.resolve();\n        }\n        var deferred = new $.Deferred();\n        switch (typeof prompt) {\n            case 'string':\n                done(prompt);\n                break;\n            case 'function':\n                try {\n                    var ret = prompt.call(context, function(string) {\n                        done(string);\n                    });\n                    if (typeof ret === 'string') {\n                        done(ret);\n                    }\n                    if (ret && ret.then) {\n                        ret.then(done).catch(error);\n                    }\n                } catch (e) {\n                    error(e);\n                }\n                break;\n        }\n        return deferred.promise();\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            inputStyle: 'textarea',\n            mobileDelete: is_mobile,\n            onPaste: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            mobileIngoreAutoSpace: [],\n            repeatTimeoutKeys: [],\n            tabindex: 1,\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        function mobile_ignore_key(key) {\n            return settings.mobileIngoreAutoSpace.length &&\n                settings.mobileIngoreAutoSpace.indexOf(key) !== -1 && is_android;\n        }\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        var wrapper = $('<div class=\"cmd-wrapper\"/>').appendTo(self);\n        wrapper.append('<span class=\"cmd-prompt\"></span>');\n        wrapper.append('<div class=\"cmd-cursor-line\">' +\n                       '<span></span>' +\n                       '<span class=\"cmd-cursor\">' +\n                       '<span data-text class=\"end\"><span>&nbsp;</span></span>' +\n                       '</span>' +\n                       '<span></span>' +\n                       '</div>');\n        var cursor_line = wrapper.find('.cmd-cursor-line');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(cursor_line);\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip;\n        if (is_mobile) {\n            clip = (function() {\n                var $node = $('<div class=\"cmd-editable\" contenteditable/>').attr({\n                    autocapitalize: 'off',\n                    autocorrect: 'off',\n                    spellcheck: 'false',\n                    tabindex: settings.tabindex\n                }).insertAfter(self);\n                $node.on('focus', function() {\n                    self.enable();\n                }).on('blur', function() {\n                    self.disable();\n                });\n                var timer;\n                var clip = {\n                    $node: $node,\n                    val: function(value) {\n                        if (typeof value === 'undefined') {\n                            return $node.text();\n                        } else {\n                            $node.html(value);\n                        }\n                    },\n                    reset: function() {\n                        clearTimeout(timer);\n                        timer = setTimeout(function() {\n                            $node.css({\n                                top: '',\n                                bottom: ''\n                            });\n                        }, 100);\n                    },\n                    focus: function() {\n                        css($node[0], {\n                            top: 'calc(var(--terminal-scroll, 0) * 1px)'\n                        });\n                        clip.reset();\n                    },\n                    blur: function() {\n                        $node.css({\n                            top: '100%',\n                            bottom: 0\n                        }).blur();\n                        // just in case of Webkit bug\n                        window.getSelection().removeAllRanges();\n                        clip.reset();\n                    }\n                };\n                return clip;\n            })();\n            self.addClass('cmd-mobile');\n        } else {\n            clip = (function() {\n                var id = generate_id();\n                var $node = $('<textarea>').attr({\n                    autocapitalize: 'off',\n                    spellcheck: 'false',\n                    id: id,\n                    tabindex: settings.tabindex\n                }).addClass('cmd-clipboard').appendTo(self);\n                // some a11y to make lighthouse happy\n                $node.before('<label class=\"visually-hidden\" for=\"' + id + '\">' +\n                             'Clipbard textarea for jQuery Terminal</label>');\n                return {\n                    $node: $node,\n                    val: function(value) {\n                        // even if value is undeifned\n                        // when calling val(value) it return jQuery object\n                        if (typeof value === 'undefined') {\n                            return $node.val();\n                        } else {\n                            return $node.val(value);\n                        }\n                    }\n                };\n            })();\n            clip.val(' ');\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by resize\n        var char_width;\n        var last_rendered_prompt;\n        var prompt_last_line;\n        var just_prompt_len;\n        var prompt_offset = 0;\n        var prompt_len;\n        var prompt_node = self.find('.cmd-prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cmd-cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        // use \\uFFFF to mark newline extra character\n        // so we can hide it by css when using text selection\n        var line_marker = '\\uFFFF';\n        var line_marker_re = /\\uFFFF$/;\n        var empty_marker_re = /^\\uFFFF$/;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span,img,a')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.cmd-prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.next().length;\n                return node.find('[data-text]').length +\n                    node.prevUntil('.cmd-prompt').find('[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ArrowUP',\n            'DOWN': 'ArrowDown',\n            'LEFT': 'ArrowLeft',\n            'RIGHT': 'ArrowRight',\n            'DEL': 'Delete',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function ie_key_fix(e) {\n            var key = e.key.toUpperCase();\n            if (key_mapping[key]) {\n                return key_mapping[key];\n            }\n            return key;\n        }\n        function get_key(e) {\n            if (e.key) {\n                var key = ie_key_fix(e).toUpperCase();\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        // -----------------------------------------------------------------\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        var i;\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (is_array(keycodes[which])) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n        // -----------------------------------------------------------------\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_forward({clipboard: true}),\n            'HOLD+ALT+D': delete_forward({clipboard: true, hold: true}),\n            'HOLD+DELETE': delete_forward({clipboard: false, hold: true}),\n            'HOLD+SHIFT+DELETE': delete_forward({clipboard: false, hold: true}),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    ((is_function(settings.historyFilter) &&\n                      settings.historyFilter(command)) ||\n                     (settings.historyFilter instanceof RegExp &&\n                      command.match(settings.historyFilter)) ||\n                     !settings.historyFilter)) {\n                    history.append(command);\n                }\n                var tmp = command;\n                // fix scroll the page where there is no scrollbar\n                clip.$node.blur();\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                var promise;\n                if (settings.commands) {\n                    promise = settings.commands.call(self, tmp);\n                }\n                if (is_function(prompt)) {\n                    if (promise && is_function(promise.then)) {\n                        promise.then(draw_prompt);\n                    } else {\n                        draw_prompt();\n                    }\n                }\n                self.set('');\n                clip.val('');\n                clip.$node.focus();\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'HOLD+ARROWUP': up_arrow,\n            'ARROWUP': up_arrow,\n            'CTRL+ARROWUP': prev_history,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': down_arrow,\n            'HOLD+ARROWDOWN': down_arrow,\n            'CTRL+N': next_history,\n            'CTRL+ARROWDOWN': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': debounce(left, 10),\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': debounce(right, 10),\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(bare_text(command).length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end(true),\n            'CTRL+END': end(),\n            'CTRL+E': end(),\n            'HOME': home(true),\n            'CTRL+HOME': home(),\n            'CTRL+A': home(),\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_backward({clipboard: true, hold: false}),\n            'HOLD+BACKSPACE': delete_backward({clipboard: false, hold: true}),\n            'HOLD+SHIFT+BACKSPACE': delete_backward({clipboard: false, hold: true}),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': function() {\n                return get_selected_html() === '';\n            },\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                var len = text(command).length;\n                if (len > position) {\n                    kill_text = self['delete'](len - position);\n                    text_to_clipboard(clip.$node, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(clip.$node, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_forward(options) {\n            options = options || {};\n            if (options.hold && !settings.mobileDelete) {\n                return function delete_character_forward() {\n                    self['delete'](1);\n                    return false;\n                };\n            }\n            return function delete_word_forward() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (options.clipboard) {\n                        text_to_clipboard(clip.$node, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_backward(options) {\n            options = options || {};\n            if (options.hold && !settings.mobileDelete) {\n                return function delete_character_backward() {\n                    self['delete'](-1);\n                };\n            }\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]* *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (options.clipboard) {\n                            text_to_clipboard(clip.$node, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.$node.is(':focus')) {\n                clip.$node.trigger('focus', [true]);\n            }\n            clip.$node.one('input', paste);\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            function set() {\n                clip.val(command);\n                fix_textarea();\n            }\n            function insert(text) {\n                self.insert(text);\n                set();\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    var value = clip.val().replace(/\\r/g, '');\n                    if (is_function(settings.onPaste)) {\n                        var ret = settings.onPaste.call(self, {\n                            target: self,\n                            text: value\n                        });\n                        if (ret !== undefined) {\n                            if (ret && is_function(ret.then || ret.done)) {\n                                (ret.then || ret.done).call(ret, insert);\n                            } else if (typeof ret === 'string') {\n                                insert(ret);\n                            } else if (ret === false) {\n                                set();\n                            }\n                            return;\n                        }\n                    }\n                    insert(value);\n                });\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            if (history.end()) {\n                first_up_history = true;\n                self.set(last_command);\n            } else {\n                self.set(history.next());\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function have_newlines(string) {\n            return string.match(/\\n/);\n        }\n        // -------------------------------------------------------------------------------\n        function have_wrapping(string, prompt_len) {\n            var lengths = string.split('\\n').map(function(line) {\n                return $.terminal.length(line);\n            });\n            if (prompt_len) {\n                lengths[0] += prompt_len;\n            }\n            var wrap = lengths.filter(function(len) {\n                return len >= num_chars;\n            });\n            return !!wrap.length;\n        }\n        // -------------------------------------------------------------------------------\n        function simple_split_command_line(formatted) {\n            var prompt = last_rendered_prompt;\n            var lines = $.terminal.split_equal(prompt + formatted, num_chars);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            lines = lines.map($.terminal.unescape_brackets);\n            lines[0] = lines[0].replace(re, '');\n            return lines;\n        }\n        // -------------------------------------------------------------------------------\n        function up_arrow() {\n            var before = $.terminal.substring(command, 0, position);\n            var col = self.column();\n            var cursor_line = self.find('.cmd-cursor-line');\n            var line = cursor_line.prevUntil('span').length;\n            // case when line is wrapped and we are below prompt\n            if (line === 1 && col <= prompt_len) {\n                self.position(0);\n                return false;\n            }\n            if (line === 0) {\n                return prev_history();\n            }\n            if (have_newlines(before) || have_wrapping(before, prompt_len)) {\n                var prev = cursor_line.prev();\n                var is_splitted = prev.is('.cmd-end-line');\n                var lines = simple_split_command_line(command);\n                prev = lines[line - 1];\n                var left_over = lines[line].substring(col).length;\n                var diff;\n                if (left_over > 0) {\n                    diff = col;\n                    if (line - 1 === 0) {\n                        diff -= prompt_len;\n                    }\n                    diff = col + prev.substring(diff).length;\n                    if (is_splitted) {\n                        ++diff;\n                    }\n                } else {\n                    diff = col + 1;\n                }\n                self.position(-diff, true);\n                return false;\n            } else {\n                return prev_history();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function down_arrow() {\n            // use format and strip so we get visual strings (formatting can change text)\n            var after = $.terminal.substring(command, position);\n            if (have_newlines(after) || have_wrapping(after)) {\n                var lines = simple_split_command_line(command);\n                var col = self.column();\n                var cursor_line = self.find('.cmd-cursor-line');\n                var $line = cursor_line.prevUntil('span');\n                var line = $line.length;\n                var is_ending = cursor_line.is('.cmd-end-line');\n                var is_next_broken = cursor_line.next().is('.cmd-end-line');\n                var next = lines[line + 1];\n                if (!next) {\n                    return next_history();\n                }\n                var left_over = lines[line].substring(col).length;\n                var diff;\n                // move to next line if at the end move to end of next line\n                if (left_over === 0) {\n                    diff = next.length;\n                    if (is_next_broken) {\n                        diff++;\n                    }\n                } else {\n                    diff = Math.min(col, next.length) + left_over;\n                    if (line === 0) {\n                        diff += prompt_len;\n                    }\n                    if (is_ending) {\n                        // correction for splitted line that don't have extra space\n                        diff += 1;\n                    }\n                }\n                self.position(diff, true);\n                return false;\n            } else {\n                return next_history();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < bare_text(command).length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home(line) {\n            function home() {\n                self.position(0);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var string = command.substring(0, self.position());\n                        self.position(string.lastIndexOf('\\n') + 1);\n                    } else {\n                        home();\n                    }\n                };\n            } else {\n                return home;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function end(line) {\n            function end() {\n                self.position(text(command).length);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var lines = command.split('\\n');\n                        var pos = self.position();\n                        var sum = 0;\n                        for (var i = 0; i < lines.length; ++i) {\n                            sum += lines[i].length;\n                            if (sum > pos) {\n                                self.position(sum + i);\n                                return;\n                            }\n                        }\n                    }\n                    end();\n                };\n            } else {\n                return end;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var $clip = clip.$node;\n            var focus = $clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!$clip.is(':focus') && enabled) {\n                        $clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && !enabled) {\n                $clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        // -------------------------------------------------------------------------------\n        function fix_cursor() {\n            if (animation_supported) {\n                var style = window.getComputedStyle(cursor[0]);\n                var animationName = style.getPropertyValue('--animation');\n                animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n                var _class = self.attr('class');\n                if (_class.match(/-animation/)) {\n                    _class = _class.replace(/[a-z]+-animation/g, '');\n                }\n                if (animationName && !animationName.match(/blink/)) {\n                    var className = animationName.replace(/terminal-/, '') + '-animation';\n                    if (!_class.match(className)) {\n                        _class += ' ' + className;\n                    }\n                }\n                _class = _class.replace(/\\s+/g, ' ');\n                if (_class !== self.attr('class').replace(/\\s+/g, ' ')) {\n                    self.attr('class', _class);\n                }\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        // -------------------------------------------------------------------------------\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (!is_mobile && clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            var pos = !is_mobile ? position + 1 : position;\n                            // we check first to improve performance\n                            if (clip.$node.caret() !== pos) {\n                                clip.$node.caret(pos);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        // -------------------------------------------------------------------------------\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('cmd-blink');\n                } else {\n                    cursor.removeClass('cmd-blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('cmd-inverted cmd-blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('cmd-inverted cmd-blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('cmd-inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.slice(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.slice(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: calculate width of hte character\n        // ---------------------------------------------------------------------\n        function get_char_width() {\n            var $prompt = self.find('.cmd-prompt');\n            var html = $prompt.html();\n            $prompt.html('<span>&nbsp;</span>');\n            var width = $prompt.find('span').get(0).getBoundingClientRect().width;\n            $prompt.html(html);\n            return width;\n        }\n        // ---------------------------------------------------------------------\n        // :: return number of characters in command line\n        // ---------------------------------------------------------------------\n        function get_num_chars(char_width) {\n            var width = self.width();\n            return Math.floor(width / char_width);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function process_cmd_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            // -----------------------------------------------------------------\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                var result = [];\n                array.forEach(function(line, i) {\n                    if ($.terminal.strip(line).match(empty_marker_re)) {\n                        result[i] = false;\n                        // lines that will get removed need line ending on previos\n                        // line so code that check that marker works correctly\n                        if (i > 0) {\n                            result[i - 1] += line_marker;\n                        }\n                    } else {\n                        result[i] = array[i];\n                    }\n                });\n                return result.filter(function(line) {\n                    return line !== false;\n                });\n            }\n            // -----------------------------------------------------------------\n            var line = prompt_node.find('.cmd-line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.cmd-line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var prompt_marker = get_prompt_marker();\n            var re = new RegExp('^' + prompt_marker + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += line_marker;\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt_marker + prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1) {\n                var len = $.terminal.length(array[array.length - 1]);\n                if (len === num_chars) {\n                    array.push('');\n                }\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        var cmd_line_worker = new WorkerCache({\n            validation: function(key) {\n                var result = false;\n                if ((!this._previous_value || this._previous_value === key) &&\n                    (!this._cols || this._cols === num_chars)) {\n                    result = true;\n                }\n                this._previous_value = key;\n                this._cols = num_chars;\n                return result;\n            },\n            action: process_cmd_line\n        });\n        // ---------------------------------------------------------------------\n        function split_command_line(string) {\n            return cmd_line_worker.get(string);\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var format_options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position,\n                    command: true\n                });\n                var formatted = $.terminal.apply_formatters(string, format_options);\n                var output = $.terminal.normalize(formatted[0]);\n                var max = $.terminal.length(output);\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                    // fix issue with nested formatting where max length\n                    // is checked before nested_formatting flatten formatting\n                    if (formatted_position > max) {\n                        formatted_position = max;\n                    }\n                }\n                return output;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            //string = $.terminal.normalize(string);\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            return $.terminal.format(encoded, {\n                charWidth: settings.charWidth,\n                allowedAttributes: settings.allowedAttributes || []\n            });\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            return $.terminal.partition(string).join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str, raw) {\n            return $.terminal.length(str, raw);\n        }\n        // ---------------------------------------------------------------------\n        function is_multiline(str) {\n            return strlen(text(str)) > num_chars - prompt_len - 1 ||\n                str.match(/\\n/);\n        }\n        // ---------------------------------------------------------------------\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that check if string is valid emoji formatting\n        // ---------------------------------------------------------------------\n        function is_emoji_formatting(str) {\n            if ($.terminal.is_formatting(str)) {\n                return str.replace(format_parts_re, '$4').match(/^emoji /);\n            }\n            return false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, options) {\n                var end_line = string.match(line_marker_re);\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                }\n                cursor_line.toggleClass('cmd-end-line', !!end_line);\n                var cursor_end_line = false;\n                var settings = $.extend({\n                    prompt: '',\n                    last: false\n                }, options);\n                var position = settings.position;\n                var len = length(string);\n                var prompt = settings.prompt;\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    c = '&nbsp;';\n                    empty_cursor();\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        cursor_end_line = true;\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                if (ch_unit_bug) {\n                    if (typeof wcwidth !== 'undefined') {\n                        // handle emoji and wide characters in IE or\n                        // other possible browsers that don't have valid ch unit\n                        var size = strlen(text(c));\n                        if (size === 1 && is_emoji_formatting(c)) {\n                            size = 2;\n                        }\n                        cursor.width(char_width * size);\n                    } else {\n                        cursor.width(char_width);\n                    }\n                }\n                cursor.toggleClass('cmd-end-line', cursor_end_line);\n                // fix for animation when changing --animation dynamically\n                fix_cursor();\n                var cursor_len = $.terminal.length(cursor.text());\n                if (cursor_len > 1) {\n                    var node = cursor.find('[data-text]')[0];\n                    node.style.setProperty('--length', cursor_len);\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            // -----------------------------------------------------------------\n            function div(string, before) {\n                var end_line = string.match(line_marker_re);\n                var result = '<div role=\"presentation\" aria-hidden=\"true\"';\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                    result += ' class=\"cmd-end-line\"';\n                }\n                result += '>' + format(string, before || '') + '</div>';\n                return result;\n            }\n            // -----------------------------------------------------------------\n            function empty_cursor() {\n                // data-text is for consistency in CSS and end class is for unit tests\n                cursor.html('<span data-text class=\"end\"><span>&nbsp;<span></span>');\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                var formatted = formatting(string);\n                var pos;\n                if (length(formatted) === text(string).length) {\n                    pos = position;\n                } else {\n                    pos = formatted_position;\n                }\n                var i;\n                wrapper.css({\n                    display: 'none'\n                });\n                wrapper.find('div:not(.cmd-cursor-line)').remove();\n                before.html('');\n                if (is_multiline(formatted)) {\n                    var tabs = formatted.match(/\\t/g);\n                    var original_string = formatted;\n                    //quick tabulation hack\n                    if (tabs) {\n                        formatted = formatted.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = split_command_line(formatted);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], {\n                            length: array.length,\n                            position: pos,\n                            prompt: prompt_last_line\n                        });\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', {\n                            length: array.length,\n                            position: 0,\n                            last: array.length <= 2\n                        });\n                        if (array.length > 2) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, {\n                                length: array.length,\n                                position: new_pos,\n                                last: true\n                            });\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, {\n                                length: array.length,\n                                position: new_pos\n                            });\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                    self.find('.cmd-cursor-line ~ div:last-of-type')\n                        .append('<span></span>');\n                } else if (formatted === '') {\n                    before.html('');\n                    empty_cursor();\n                    after.html('');\n                } else {\n                    draw_cursor_line(formatted, {\n                        length: 1,\n                        position: pos\n                    });\n                }\n                var in_line = cursor_line.prevUntil('.cmd-prompt').length;\n                if (is_css_variables_supported) {\n                    self[0].style.setProperty('--cursor-line', in_line);\n                } else {\n                    clip.$node.css('top', in_line * 14 + 'px');\n                }\n                wrapper.css({\n                    display: ''\n                });\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function make_guess(string, position) {\n                var opts = $.extend({}, settings, {\n                    position: position,\n                    command: true\n                });\n                return $.terminal.apply_formatters(string, opts)[1];\n            }\n            function cmp(search_pos, pos, string) {\n                var guess = make_guess(string, pos);\n                if (guess === search_pos) {\n                    var next_guess = make_guess(string, pos + 1);\n                    if (next_guess > search_pos) {\n                        return 0;\n                    }\n                    return 1;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = bare_text(string);\n                var codepoint_len = string.length;\n                var str = $.terminal.escape_brackets(command);\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp, [str]);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: return prompt filler for the margin set in terminal when using\n        // :: newline: false\n        // ---------------------------------------------------------------------\n        function get_prompt_marker() {\n            if (prompt_offset) {\n                return new Array(prompt_offset + 1).join('\\uFFFF');\n            }\n            return '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var prev_prompt_data;\n        var draw_prompt = (function() {\n            function format_prompt(prompt) {\n                if (!prompt) {\n                    just_prompt_len = 0;\n                    prompt_len = just_prompt_len + prompt_offset;\n                    return prompt;\n                }\n                var prompt_marker = get_prompt_marker();\n                var tmp_prompt = prompt_marker + prompt;\n                var lines = $.terminal.split_equal(tmp_prompt, num_chars);\n                lines = lines.map(function(line) {\n                    return line.replace(/^\\uFFFF+/, '');\n                }).filter(Boolean);\n                lines = lines.map(function(line) {\n                    if (!$.terminal.have_formatting(line)) {\n                        return '[[;;]' + $.terminal.escape_brackets(line) + ']';\n                    }\n                    return $.terminal.format_split(line).map(function(str) {\n                        if ($.terminal.is_formatting(str)) {\n                            return str;\n                        }\n                        return '[[;;]' + $.terminal.escape_brackets(str) + ']';\n                    }).join('');\n                });\n                var options = {\n                    charWidth: settings.charWidth\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                just_prompt_len = strlen(text(encoded_last_line));\n                prompt_len = just_prompt_len + prompt_offset;\n                return lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(line, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"cmd-line\">' +\n                           $.terminal.format(line, options) +\n                           '</span>';\n                }).concat([last_line]).join('\\n');\n            }\n            function set(prompt) {\n                if (prompt) {\n                    prompt = $.terminal.apply_formatters(prompt, {prompt: true});\n                    prompt = $.terminal.normalize(prompt);\n                    prompt = crlf(prompt);\n                }\n                var formatted = format_prompt(prompt);\n                last_rendered_prompt = prompt;\n                // zero width space to make sure prompt margin takes up space,\n                // so that echo with newline: false works when prompt is empty\n                formatted = formatted || $.terminal.format('[[;;]\\u200b]');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    // fix for Chrome bug width selection\n                    // https://bugs.chromium.org/p/chromium/issues/detail?id=1087787\n                    var spans = prompt_node.find('> span span');\n                    clip.$node.attr('data-cmd-prompt', prompt_node.text());\n                    if (is_ch_unit_supported) {\n                        prompt_node.hide();\n                        spans.each(function() {\n                            var self = $(this);\n                            var len = strlen(self.text());\n                            if (len === 0) {\n                                self.css('width', 1);\n                            } else {\n                                self.css('width', len + 'ch');\n                            }\n                        });\n                        prompt_node.show();\n                    }\n                }\n            }\n            return function() {\n                // the data is used as cancelable reference because we have ref\n                // data object that is hold in closure and we remove `set` function\n                // so previous call to function prompt will be ignored\n                if (prev_prompt_data && prev_prompt_data.set) {\n                    prev_prompt_data.set = $.noop;\n                    // remove reference for garbage collector\n                    prev_prompt_data = null;\n                }\n                var data = prev_prompt_data = {\n                    set: set\n                };\n                with_prompt(prompt, function(prompt) {\n                    data.set(prompt);\n                }, self);\n            };\n        })();\n        // ---------------------------------------------------------------------\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange.call(self, command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: used for display_position and postition\n        // ---------------------------------------------------------------------\n        function column(command, position, include_prompt) {\n            var before = command.substring(0, position);\n            if (position === 0 || !command.length) {\n                return 0;\n            }\n            var re = /\\n?([^\\n]*)$/;\n            var match = before.match(re);\n            var col = match[1].length;\n            if (!have_newlines(before) &&\n                (include_prompt || have_wrapping(before, prompt_len))) {\n                col += prompt_len;\n            }\n            if (col === 0) {\n                return col;\n            }\n            col %= num_chars;\n            if (col === 0) {\n                return num_chars;\n            }\n            return col;\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed, string;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        string = bare_text(command);\n                        string = string.slice(0, position + n) +\n                            string.slice(position, string.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                    }\n                } else if (command !== '') {\n                    string = text(command);\n                    if (position < string.length) {\n                        removed = string.slice(position).slice(0, n);\n                        string = string.slice(0, position) +\n                            string.slice(position + n, string.length);\n                    }\n                }\n                if (removed) {\n                    command = string;\n                }\n                redraw();\n                fix_textarea();\n                fire_change_command();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = string;\n                    if (!stay) {\n                        self.position(bare_text(command).length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    var original = default_keymap[key];\n                    if (is_function(original)) {\n                        original = original.bind(self);\n                    }\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn.call(self, e, original);\n                    };\n                }\n                if (new_keymap === null) {\n                    keymap = default_keymap;\n                    return self;\n                } else if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                var bare_command = bare_text(command);\n                var len = bare_text(string).length;\n                if (position === bare_command.length) {\n                    string = bare_command + string;\n                } else if (position === 0) {\n                    string = string + bare_command;\n                } else {\n                    string = bare_command.slice(0, position) +\n                        string + bare_command.slice(position);\n                }\n                command = string;\n                if (!stay) {\n                    self.position(len, true, true);\n                }\n                fix_textarea();\n                redraw();\n                fire_change_command();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cmd-wrapper').remove();\n                self.find('.cmd-prompt, .cmd-clipboard, .cmd-editable').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            display_column: function(include_prompt) {\n                var formatted = formatting(command);\n                formatted = $.terminal.strip(formatted);\n                return column(formatted, formatted_position, include_prompt);\n            },\n            column: function(include_prompt) {\n                return column(command, position, include_prompt);\n            },\n            line: function() {\n                var before = command.substring(0, position);\n                if (position === 0 || !command.length) {\n                    return 0;\n                }\n                return before.split(/\\n/).length - 1;\n            },\n            // inform cursor about size of partial output line\n            __set_prompt_margin: function(len) {\n                prompt_offset = len;\n                prompt_len = just_prompt_len + prompt_offset;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === true) {\n                    return last_rendered_prompt;\n                } else if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    var should_redraw = user_prompt !== prompt;\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    if (should_redraw) {\n                        draw_prompt();\n                        // we could check if command is longer then numchars-new\n                        // prompt\n                        redraw();\n                    }\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    var len = bare_text(command).length;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > len) {\n                        position = len;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position) {\n                        redraw();\n                        if (!silent && is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                fix_textarea(true);\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    // double escape\n                    var string = formatting($.terminal.escape_formatting(command), true);\n                    var len = length(string);\n                    var command_len = bare_text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (len === command_len) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(new_formatted_pos);\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                char_width = get_char_width();\n                var new_num_chars;\n                if (typeof num === 'number') {\n                    new_num_chars = num;\n                } else {\n                    new_num_chars = get_num_chars(char_width);\n                }\n                if (num_chars !== new_num_chars || arguments[0] === true) {\n                    num_chars = new_num_chars;\n                    redraw();\n                    draw_prompt();\n                }\n                return self;\n            },\n            clear_cache: 'Map' in root ? function() {\n                cmd_line_worker.clear();\n            } : function() {\n                return self;\n            },\n            invoke_key: function(shortcut) {\n                if (!enabled) {\n                    warn('invoke_key(\"' + shortcut + '\") called on disabled terminal');\n                }\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            clip: function() {\n                return clip;\n            },\n            enable: function(silent) {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        if (!clip.$node.is(':focus')) {\n                            clip.$node.focus();\n                        }\n                        clip.$node.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE - ignore\n                    }\n                    animation(true);\n                    if (!silent && is_function(prompt)) {\n                        draw_prompt();\n                    }\n                    fix_cursor();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (settings.prompt !== false) {\n            prompt = settings.prompt;\n            draw_prompt();\n        }\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        char_width = get_char_width();\n        num_chars = get_num_chars(char_width);\n        if (!settings.history) {\n            history.disable();\n        }\n        var first_up_history = true;\n        // skip_keypress - hack for Android that was inserting characters on\n        // backspace\n        var skip_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        var prev_key;\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function is_delay_key(key) {\n            var specials = ['HOLD+SHIFT+BACKSPACE', 'HOLD+BACKSPACE'];\n            return specials.indexOf(key) !== -1 && settings.mobileDelete ||\n                settings.repeatTimeoutKeys.indexOf(key) !== -1;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        var skip_keydown = false;\n        // ---------------------------------------------------------------------\n        // function complexicity is 35 when adding this exception\n        // eslint-disable-next-line complexity\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            var result;\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            // meta and os are special keydown triggered by Emoji picker on Windows 10\n            // meta is in Google Chrome is is in Firefox\n            if (!e.fake && ['meta', 'os'].indexOf(e.key.toLowerCase()) === -1) {\n                no_keydown = false;\n            }\n            no_keypress = true;\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.$node.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                e.key = ie_key_fix(e);\n                result = settings.keydown.call(self, e);\n                if (result !== undefined) {\n                    //skip_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (key !== prev_key) {\n                clear_hold();\n            }\n            // CTRL+C hanlding is only exception of cmd aware terminal logic\n            // cmd need to call CTRL+C keymap when terminal is not enabled\n            if (enabled || (key === 'CTRL+C' && is_terminal_selected(self))) {\n                if (hold) {\n                    prev_key = key;\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0 && is_delay_key(key)) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                } else {\n                    self.oneTime(settings.holdTimeout, 'hold', function() {\n                        hold = true;\n                    });\n                    prev_key = key;\n                }\n                // if e.fake ignore of space is handled in input and next keydown\n                // is not triggered this is just in case code since on Android\n                // keydown is not triggered only input so event is always fake on Android\n                if (!e.fake && is_android) {\n                    if (skip_keydown) {\n                        clear_hold();\n                        skip_keydown = false;\n                        return false;\n                    }\n                    if (mobile_ignore_key(key)) {\n                        skip_keydown = true;\n                    } else if (mobile_ignore_key(prev_key)) {\n                        // just in case next key is different then space\n                        skip_keydown = false;\n                    }\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                // only enter will reset history (and down arrow on last command)\n                if (key.toLowerCase() === 'enter') {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    skip_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //skip_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            self.stopTime('delay');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (skip_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress.call(self, e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        var skip_input = false;\n        function finalize_input_event() {\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val();\n            if (!is_mobile) {\n                val = val.replace(/^ /, '');\n            }\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if (no_keydown || process || ((no_keypress || dead_key) &&\n                                          !skip_insert &&\n                                          (single_key || no_key) && !backspace)) {\n                if (val && val === command) {\n                    if (is_android) {\n                        // ignore autocomplete on GBoard keyboard #693\n                        if (no_keydown) {\n                            event('keydown', 'Enter', 13);\n                        }\n                    }\n                    finalize_input_event();\n                    return;\n                }\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.slice(0, cmd.length - 1).length === val.length;\n                }\n                if (skip_input) {\n                    skip_input = false;\n                    clip.val(command);\n                    return;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var str = val.slice(position);\n                    if (str.length === 1 || backspace) {\n                        // original not optimized function called once\n                        var chr = get_next_character(str);\n                        if (mobile_ignore_key(chr)) {\n                            skip_input = true;\n                        }\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = str.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : str, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, str.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            finalize_input_event();\n        }\n        doc.bind('keypress.cmd', keypress_event);\n        doc.bind('keydown.cmd', keydown_event);\n        doc.bind('keyup.cmd', clear_hold);\n        doc.bind('input.cmd', input_event);\n        (function() {\n            if (is_mobile) {\n                $(self[0]).add(clip.$node).on('touchstart.cmd', function() {\n                    if (!self.isenabled()) {\n                        clip.focus();\n                    } else {\n                        clip.blur();\n                    }\n                });\n                self.disable();\n                return;\n            }\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    var is_prompt = $target.is('.cmd-prompt');\n                    if (!is_prompt && down && get_selected_html() === '') {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(text(command).length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_html() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                // fix empty prompt that use 0 width space\n                string = string.replace(/\\u200B/g, '');\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function count_selfclosing_formatting(string) {\n        var count = 0;\n        if ($.terminal.have_formatting(string)) {\n            var re = new RegExp(format_parts_re.source, 'i'); // without g flag\n            $.terminal.format_split(string).forEach(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    var m = str.match(re);\n                    if (m && m[1].match(/@/) && m[6] === '') {\n                        count++;\n                    }\n                }\n            });\n        }\n        return count;\n    }\n    // -------------------------------------------------------------------------\n    // entiteis are case sensitive\n    // generated from https://www.freeformatter.com/html-entities.html\n    // -------------------------------------------------------------------------\n    var entities = {\n        \"&amp;\": \"&\",\n        \"&lt;\": \"<\",\n        \"&gt;\": \">\",\n        \"&Agrave;\": \"À\",\n        \"&Aacute;\": \"Á\",\n        \"&Acirc;\": \"Â\",\n        \"&Atilde;\": \"Ã\",\n        \"&Auml;\": \"Ä\",\n        \"&Aring;\": \"Å\",\n        \"&AElig;\": \"Æ\",\n        \"&Ccedil;\": \"Ç\",\n        \"&Egrave;\": \"È\",\n        \"&Eacute;\": \"É\",\n        \"&Ecirc;\": \"Ê\",\n        \"&Euml;\": \"Ë\",\n        \"&Igrave;\": \"Ì\",\n        \"&Iacute;\": \"Í\",\n        \"&Icirc;\": \"Î\",\n        \"&Iuml;\": \"Ï\",\n        \"&ETH;\": \"Ð\",\n        \"&Ntilde;\": \"Ñ\",\n        \"&Ograve;\": \"Ò\",\n        \"&Oacute;\": \"Ó\",\n        \"&Ocirc;\": \"Ô\",\n        \"&Otilde;\": \"Õ\",\n        \"&Ouml;\": \"Ö\",\n        \"&Oslash;\": \"Ø\",\n        \"&Ugrave;\": \"Ù\",\n        \"&Uacute;\": \"Ú\",\n        \"&Ucirc;\": \"Û\",\n        \"&Uuml;\": \"Ü\",\n        \"&Yacute;\": \"Ý\",\n        \"&THORN;\": \"Þ\",\n        \"&szlig;\": \"ß\",\n        \"&agrave;\": \"à\",\n        \"&aacute;\": \"á\",\n        \"&acirc;\": \"â\",\n        \"&atilde;\": \"ã\",\n        \"&auml;\": \"ä\",\n        \"&aring;\": \"å\",\n        \"&aelig;\": \"æ\",\n        \"&ccedil;\": \"ç\",\n        \"&egrave;\": \"è\",\n        \"&eacute;\": \"é\",\n        \"&ecirc;\": \"ê\",\n        \"&euml;\": \"ë\",\n        \"&igrave;\": \"ì\",\n        \"&iacute;\": \"í\",\n        \"&icirc;\": \"î\",\n        \"&iuml;\": \"ï\",\n        \"&eth;\": \"ð\",\n        \"&ntilde;\": \"ñ\",\n        \"&ograve;\": \"ò\",\n        \"&oacute;\": \"ó\",\n        \"&ocirc;\": \"ô\",\n        \"&otilde;\": \"õ\",\n        \"&ouml;\": \"ö\",\n        \"&oslash;\": \"ø\",\n        \"&ugrave;\": \"ù\",\n        \"&uacute;\": \"ú\",\n        \"&ucirc;\": \"û\",\n        \"&uuml;\": \"ü\",\n        \"&yacute;\": \"ý\",\n        \"&thorn;\": \"þ\",\n        \"&yuml;\": \"ÿ\",\n        \"&nbsp;\": \" \",\n        \"&iexcl;\": \"¡\",\n        \"&cent;\": \"¢\",\n        \"&pound;\": \"£\",\n        \"&curren;\": \"¤\",\n        \"&yen;\": \"¥\",\n        \"&brvbar;\": \"¦\",\n        \"&sect;\": \"§\",\n        \"&uml;\": \"¨\",\n        \"&copy;\": \"©\",\n        \"&ordf;\": \"ª\",\n        \"&laquo;\": \"«\",\n        \"&not;\": \"¬\",\n        \"&shy;\": \"­\",\n        \"&reg;\": \"®\",\n        \"&macr;\": \"¯\",\n        \"&deg;\": \"°\",\n        \"&plusmn;\": \"±\",\n        \"&sup2;\": \"²\",\n        \"&sup3;\": \"³\",\n        \"&acute;\": \"´\",\n        \"&micro;\": \"µ\",\n        \"&para;\": \"¶\",\n        \"&cedil;\": \"¸\",\n        \"&sup1;\": \"¹\",\n        \"&ordm;\": \"º\",\n        \"&raquo;\": \"»\",\n        \"&frac14;\": \"¼\",\n        \"&frac12;\": \"½\",\n        \"&frac34;\": \"¾\",\n        \"&iquest;\": \"¿\",\n        \"&times;\": \"×\",\n        \"&divide;\": \"÷\",\n        \"&forall;\": \"∀\",\n        \"&part;\": \"∂\",\n        \"&exist;\": \"∃\",\n        \"&empty;\": \"∅\",\n        \"&nabla;\": \"∇\",\n        \"&isin;\": \"∈\",\n        \"&notin;\": \"∉\",\n        \"&ni;\": \"∋\",\n        \"&prod;\": \"∏\",\n        \"&sum;\": \"∑\",\n        \"&minus;\": \"−\",\n        \"&lowast;\": \"∗\",\n        \"&radic;\": \"√\",\n        \"&prop;\": \"∝\",\n        \"&infin;\": \"∞\",\n        \"&ang;\": \"∠\",\n        \"&and;\": \"∧\",\n        \"&or;\": \"∨\",\n        \"&cap;\": \"∩\",\n        \"&cup;\": \"∪\",\n        \"&int;\": \"∫\",\n        \"&there4;\": \"∴\",\n        \"&sim;\": \"∼\",\n        \"&cong;\": \"≅\",\n        \"&asymp;\": \"≈\",\n        \"&ne;\": \"≠\",\n        \"&equiv;\": \"≡\",\n        \"&le;\": \"≤\",\n        \"&ge;\": \"≥\",\n        \"&sub;\": \"⊂\",\n        \"&sup;\": \"⊃\",\n        \"&nsub;\": \"⊄\",\n        \"&sube;\": \"⊆\",\n        \"&supe;\": \"⊇\",\n        \"&oplus;\": \"⊕\",\n        \"&otimes;\": \"⊗\",\n        \"&perp;\": \"⊥\",\n        \"&sdot;\": \"⋅\",\n        \"&Alpha;\": \"Α\",\n        \"&Beta;\": \"Β\",\n        \"&Gamma;\": \"Γ\",\n        \"&Delta;\": \"Δ\",\n        \"&Epsilon;\": \"Ε\",\n        \"&Zeta;\": \"Ζ\",\n        \"&Eta;\": \"Η\",\n        \"&Theta;\": \"Θ\",\n        \"&Iota;\": \"Ι\",\n        \"&Kappa;\": \"Κ\",\n        \"&Lambda;\": \"Λ\",\n        \"&Mu;\": \"Μ\",\n        \"&Nu;\": \"Ν\",\n        \"&Xi;\": \"Ξ\",\n        \"&Omicron;\": \"Ο\",\n        \"&Pi;\": \"Π\",\n        \"&Rho;\": \"Ρ\",\n        \"&Sigma;\": \"Σ\",\n        \"&Tau;\": \"Τ\",\n        \"&Upsilon;\": \"Υ\",\n        \"&Phi;\": \"Φ\",\n        \"&Chi;\": \"Χ\",\n        \"&Psi;\": \"Ψ\",\n        \"&Omega;\": \"Ω\",\n        \"&alpha;\": \"α\",\n        \"&beta;\": \"β\",\n        \"&gamma;\": \"γ\",\n        \"&delta;\": \"δ\",\n        \"&epsilon;\": \"ε\",\n        \"&zeta;\": \"ζ\",\n        \"&eta;\": \"η\",\n        \"&theta;\": \"θ\",\n        \"&iota;\": \"ι\",\n        \"&kappa;\": \"κ\",\n        \"&lambda;\": \"λ\",\n        \"&mu;\": \"μ\",\n        \"&nu;\": \"ν\",\n        \"&xi;\": \"ξ\",\n        \"&omicron;\": \"ο\",\n        \"&pi;\": \"π\",\n        \"&rho;\": \"ρ\",\n        \"&sigmaf;\": \"ς\",\n        \"&sigma;\": \"σ\",\n        \"&tau;\": \"τ\",\n        \"&upsilon;\": \"υ\",\n        \"&phi;\": \"φ\",\n        \"&chi;\": \"χ\",\n        \"&psi;\": \"ψ\",\n        \"&omega;\": \"ω\",\n        \"&thetasym;\": \"ϑ\",\n        \"&upsih;\": \"ϒ\",\n        \"&piv;\": \"ϖ\",\n        \"&OElig;\": \"Œ\",\n        \"&oelig;\": \"œ\",\n        \"&Scaron;\": \"Š\",\n        \"&scaron;\": \"š\",\n        \"&Yuml;\": \"Ÿ\",\n        \"&fnof;\": \"ƒ\",\n        \"&circ;\": \"ˆ\",\n        \"&tilde;\": \"˜\",\n        \"&ensp;\": \" \",\n        \"&emsp;\": \" \",\n        \"&thinsp;\": \" \",\n        \"&zwnj;\": \"‌\",\n        \"&zwj;\": \"‍\",\n        \"&lrm;\": \"\\u200e\",\n        \"&rlm;\": \"\\u200f\",\n        \"&ndash;\": \"–\",\n        \"&mdash;\": \"—\",\n        \"&lsquo;\": \"‘\",\n        \"&rsquo;\": \"’\",\n        \"&sbquo;\": \"‚\",\n        \"&ldquo;\": \"“\",\n        \"&rdquo;\": \"”\",\n        \"&bdquo;\": \"„\",\n        \"&dagger;\": \"†\",\n        \"&Dagger;\": \"‡\",\n        \"&bull;\": \"•\",\n        \"&hellip;\": \"…\",\n        \"&permil;\": \"‰\",\n        \"&prime;\": \"′\",\n        \"&Prime;\": \"″\",\n        \"&lsaquo;\": \"‹\",\n        \"&rsaquo;\": \"›\",\n        \"&oline;\": \"‾\",\n        \"&euro;\": \"€\",\n        \"&trade;\": \"™\",\n        \"&larr;\": \"←\",\n        \"&uarr;\": \"↑\",\n        \"&rarr;\": \"→\",\n        \"&darr;\": \"↓\",\n        \"&harr;\": \"↔\",\n        \"&crarr;\": \"↵\",\n        \"&lceil;\": \"⌈\",\n        \"&rceil;\": \"⌉\",\n        \"&lfloor;\": \"⌊\",\n        \"&rfloor;\": \"⌋\",\n        \"&loz;\": \"◊\",\n        \"&spades;\": \"♠\",\n        \"&clubs;\": \"♣\",\n        \"&hearts;\": \"♥\",\n        \"&diams;\": \"♦\"\n    };\n    // -------------------------------------------------------------------------\n    function render_entities(str) {\n        return str.replace(/&#(x?)([0-9]+);/g, function(_, hex, code) {\n            code = parseInt(code, hex ? 16 : 10);\n            return String.fromCharCode(code);\n        }).replace(/(&[^;]+;)/g, function(_, entity) {\n            return entities[entity] || entity;\n        });\n    }\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return render_entities(safe(string));\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    function char_len(chr) {\n        return entity_re.test(chr) ? 1 : chr.length;\n    }\n    // -------------------------------------------------------------------------\n    function make_re_fn(re) {\n        return function(string) {\n            var m = string.match(re);\n            if (starts_with(m)) {\n                return m[1];\n            }\n        };\n    }\n    // -------------------------------------------------------------------------\n    function starts_with(match) {\n        return match && match.index === 0;\n    }\n    // -------------------------------------------------------------------------\n    // :: optimized higher order function that it check complex regexes\n    // :: only when bigger string match those regexes, function is always\n    // :: used in loop when you process whole string, it's used to create local\n    // :: get_next_character function only cmd in input use original\n    // :: not optimized function\n    // -------------------------------------------------------------------------\n    function make_next_char_fun(string) {\n        var tests = [];\n        [\n            entity_re,\n            emoji_re,\n            combine_chr_re\n        ].forEach(function(re) {\n            if (string.match(re)) {\n                tests.push(make_re_fn(re));\n            }\n        });\n        if (string.match(astral_symbols_re)) {\n            tests.push(function(string) {\n                var m1 = string.match(astral_symbols_re);\n                if (starts_with(m1)) {\n                    var m2 = string.match(combine_chr_re);\n                    if (m2 && m2.index === 1) {\n                        return string.slice(0, 3);\n                    }\n                    return m1[1];\n                }\n            });\n        }\n        return function(string) {\n            for (var i = 0; i < tests.length; ++i) {\n                var test = tests[i];\n                var ret = test(string);\n                if (ret) {\n                    return ret;\n                }\n            }\n            return string[0];\n        };\n    }\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        var match_entity = string.match(entity_re);\n        if (starts_with(match_entity)) {\n            return match_entity[1];\n        }\n        var match_combo = string.match(combine_chr_re);\n        if (starts_with(match_combo)) {\n            return match_combo[1];\n        }\n        var match_emoji = string.match(emoji_re);\n        if (starts_with(match_emoji)) {\n            return match_emoji[1];\n        } else if (string.charCodeAt(0) < 255) {\n            return string[0];\n        } else {\n            var astral_match = string.match(astral_symbols_re);\n            if (starts_with(astral_match)) {\n                match_combo = string.match(combine_chr_re);\n                if (match_combo && match_combo.index === 1) {\n                    return string.slice(0, 3);\n                }\n                return string.slice(0, 2);\n            } else {\n                return string[0];\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji and extra chars\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + char_len(chr);\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -----------------------------------------------------------------\n    function style_to_string(styles) {\n        return Object.keys(styles).map(function(prop) {\n            return prop + ':' + styles[prop];\n        }).join(';');\n    }\n    // -------------------------------------------------------------------------\n    function escape_html_attr(value) {\n        return value.replace(/\"/g, '&quot;');\n    }\n    // -------------------------------------------------------------------------\n    function char_width_object(len, options) {\n        var result = {};\n        if (len === 0) {\n            result['width'] = '1px';\n        } else if (is_ch_unit_supported) {\n            result['width'] = len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.charWidth) {\n                result['width'] = (options.charWidth * len) + 'px';\n            }\n        } else {\n            result['--length'] = len;\n        }\n        return result;\n    }\n    // -------------------------------------------------------------------------\n    // :: options {charWidth}\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        return style_to_string(char_width_object(len, options));\n    }\n    // -------------------------------------------------------------------------\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len > 1 && len !== $.terminal.length(bare)) {\n                return char_width_object(len, options);\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {\n                    len: strlen(chr),\n                    chr: chr\n                };\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            specs: [spec]\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            specs: last.specs.concat(spec)\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    specs: [spec],\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return make_string(spec);\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + make_string(spec) + '</span>';\n                } else if (spec.specs.length > 1) {\n                    return wrap(style, spec.specs.map(function(spec) {\n                        return wrap(char_width_prop(spec.len), spec.chr);\n                    }).join(''));\n                } else {\n                    return wrap(style, make_string(spec));\n                }\n            }).join('');\n        }\n        function make_string(spec) {\n            return spec.specs.map(function(spec) {\n                return spec.chr;\n            }).join('');\n        }\n        function wrap(style, str) {\n            return '<span style=\"' + style + '\">' + str + '</span>';\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn, more_args) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var args = [search_pos, mid].concat(more_args);\n        var cmp = compare_fn.apply(null, args);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn,\n                more_args\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn,\n                more_args\n            );\n        } else {\n            return -1;\n        }\n    }\n    // -----------------------------------------------------------------\n    // :: selection utilities - should work in modern browser including IE9\n    // -----------------------------------------------------------------\n    function is_terminal_selected(cmd) {\n        if (is_function(window.getSelection)) {\n            var selection = window.getSelection();\n            if (selection.toString()) {\n                var node = selection.getRangeAt(0).startContainer.parentNode;\n                var term = $(node).closest('.terminal');\n                return term.length && (cmd && term.find('.cmd').is(cmd) || !cmd);\n            }\n        }\n    }\n    // -----------------------------------------------------------------\n    function get_selected_html() {\n        var html = '';\n        if (is_function(window.getSelection)) {\n            var sel = window.getSelection();\n            if (sel.rangeCount) {\n                var container = document.createElement('div');\n                for (var i = 0, len = sel.rangeCount; i < len; ++i) {\n                    container.appendChild(sel.getRangeAt(i).cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        return html;\n    }\n    // -----------------------------------------------------------------\n    function with_selection(fn) {\n        var html = '';\n        var ranges = [];\n        if (is_function(window.getSelection)) {\n            var selection = window.getSelection();\n            if (selection.rangeCount) {\n                var container = document.createElement(\"div\");\n                for (var i = 0, len = selection.rangeCount; i < len; ++i) {\n                    var range = selection.getRangeAt(i).cloneRange();\n                    ranges.push(range);\n                    container.appendChild(range.cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        fn(html);\n        if (ranges.length) {\n            selection.removeAllRanges();\n            ranges.forEach(function(range) {\n                selection.addRange(range);\n            });\n        }\n        return html !== '';\n    }\n    // -----------------------------------------------------------------\n    function process_selected_line() {\n        var $self = $(this);\n        var result = $self.text();\n        if ($self.hasClass('cmd-end-line')) {\n            result += '\\n';\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------\n    function process_div(element) {\n        // span is empty line, div is default case with text\n        return $(element).find('> div, > span')\n            .map(process_selected_line).get().join('\\n').replace(/\\n$/, '');\n    }\n    // -----------------------------------------------------------------\n    function process_selected_html(html) {\n        var stdout;\n        var text = '';\n        var $html = $('<div>' + html + '</div>');\n        if (html.match(/<\\/div>/)) {\n            // match multiple echo output\n            stdout = $html.find('div[data-index]').map(function() {\n                return process_div(this);\n            }).get().join('\\n');\n            // match inside single echo output\n            if (!stdout && html.match(/style=\"width: 100%;?\"/)) {\n                stdout = process_div($html);\n            }\n            text = stdout;\n        }\n        var $prompt = $html.find('.cmd-prompt');\n        if ($prompt.length) {\n            if (text.length) {\n                text += '\\n';\n            }\n            text += $prompt.text();\n        }\n        var $cmd_lines = $html.find('[role=\"presentation\"]');\n        if ($cmd_lines.length) {\n            text += $cmd_lines.map(process_selected_line).get().join('');\n        }\n        if (!text.length && html) {\n            text = $html.text();\n        }\n        return text.replace(/\\xA0/g, ' '); // fix &nbsp; space\n    }\n    // ---------------------------------------------------------------------\n    // :: copy given DOM element text to clipboard\n    // ---------------------------------------------------------------------\n    var support_copy = (function() {\n        if (typeof document === 'undefined') {\n            return false;\n        }\n        if (!is_function(document.queryCommandSupported)) {\n            return false;\n        }\n        return document.queryCommandSupported('copy');\n    })();\n    // ---------------------------------------------------------------------\n    var text_to_clipboard;\n    if (support_copy) {\n        text_to_clipboard = function text_to_clipboard($textarea, text) {\n            var val = $textarea.val();\n            var had_focus = $textarea.is(':focus');\n            var pos = $textarea.caret();\n            if (window.navigator && window.navigator.clipboard) {\n                navigator.clipboard.writeText(text);\n            } else if (had_focus) {\n                $textarea.val(text).focus();\n                $textarea[0].select();\n                document.execCommand('copy');\n                $textarea.val(val);\n                $textarea.caret(pos);\n            } else {\n                var $text = $('<textarea/>').css({\n                    position: 'fixed',\n                    top: 0,\n                    left: 0\n                }).appendTo('body');\n                $text.val(text).focus();\n                $text[0].select();\n                document.execCommand('copy');\n                $text.blur();\n                $text.remove();\n            }\n            return true;\n        };\n    } else {\n        text_to_clipboard = $.noop;\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        function noop() {\n            return '';\n        }\n        if (typeof document === 'undefined') {\n            return noop;\n        }\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return noop;\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (root.getSelection) {\n            var selection = root.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = root.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = root.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function process_command(original, fn) {\n        var string = original.trim();\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"`]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.slice(name.length).trim();\n            return {\n                command: original,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: original,\n                name: '',\n                args: [],\n                args_quotes: [],\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: '2.35.3',\n        date: 'Mon, 06 Feb 2023 20:13:15 +0000',\n        // colors from https://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen', 'rebeccapurple'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        // ---------------------------------------------------------------------\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        is_extended_command: function is_extended_command(str) {\n            return typeof str === 'string' &&\n                str.match(format_exec_re) &&\n                !$.terminal.is_formatting(str);\n        },\n        // ---------------------------------------------------------------------\n        each_extended_command: function(string, fn) {\n            var parts = string.split(format_exec_split_re);\n            return $.map(parts, function(string) {\n                if ($.terminal.is_extended_command(string)) {\n                    var command = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                    return fn(command) || '';\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            if (!(rex instanceof RegExp)) {\n                throw new Error('tracking_replace: Second argument need to be RegExp');\n            }\n            function substring(string, start, end) {\n                return string.slice(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = position;\n            var start;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (rex.global) {\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, rex.lastIndex));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = match.index;\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    var rep_len = length(rep_string);\n                    rep_len += count_selfclosing_formatting(rep_string);\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            rep_len -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += rep_len - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!rex.global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.slice(i - 6, i) === '&nbsp;' ||\n                    string.slice(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            function match_entity(index) {\n                return string.slice(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i - 1] !== '\\\\' && string[i] === '\\\\' &&\n                    string[i + 1] === ']';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return (not_formatting && !opening &&\n                        ((string[i] !== ']' && !closing_formatting) ||\n                         !have_formatting)) || (in_text && !formatting);\n            }\n            // ----------------------------------------------------------------\n            // :: function will skip to next character in main loop\n            // :: TODO: improve performance of emoji regex and check whole\n            // :: string it's complex string if not use simple function\n            // ----------------------------------------------------------------\n            var get_next_character = make_next_char_fun(string);\n            function next_iteration() {\n                var char = get_next_character(substring);\n                if (char.length > 1 && $.terminal.length(substring) > 1) {\n                    return char.length - 1;\n                }\n                return 0;\n            }\n            // ----------------------------------------------------------------\n            function is_next_space() {\n                return (is_space(i) && (not_formatting || opening)) &&\n                    (space === -1 && prev_space !== i || space !== -1);\n            }\n            // ----------------------------------------------------------------\n            // :: last iteration or one before closing formatting\n            // ----------------------------------------------------------------\n            var last = false;\n            function is_last() {\n                if (i === string.length - 1 && !last) {\n                    last = true;\n                } else {\n                    last = formatting && !!substring.match(/^.]$/);\n                }\n                return last;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var space_count = -1;\n            var prev_space;\n            var length = 0;\n            var offset = 0;\n            var re_ent = /(&[^;]+);$/;\n            for (var i = 0; i < string.length; i++) {\n                var substring = string.slice(i);\n                var closing_formatting = false;\n                match = substring.match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        closing_formatting = in_text;\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_next_space()) {\n                    space = i;\n                    space_count = count;\n                }\n                var braket = string[i].match(/[[\\]]/);\n                offset = 0;\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] and \\\\ counts as one character\n                        ++count;\n                        ++length;\n                        offset = 1;\n                        i += 1;\n                    } else if (!braket || !have_formatting || (in_text && !formatting)) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var char = get_next_character(substring);\n                    var size = char.length;\n                    // begining of enity that we've skipped, we are at the end\n                    if (char === ';') {\n                        match = string.slice(0, i + 1).match(re_ent);\n                        if (match) {\n                            offset = match[1].length;\n                            size = offset + 1;\n                        }\n                    }\n                    var data = {\n                        last: is_last(),\n                        count: count,\n                        index: i - offset,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        size: size,\n                        space: space,\n                        space_count: space_count\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                            continue;\n                        }\n                    }\n                } else if (i === string.length - 1 && !last) {\n                    // last iteration, if formatting have last bracket,\n                    // from formatting, then last iteration\n                    // was already called (in if) #550\n                    callback({\n                        last: true,\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n                // handle emoji, suroggate pairs and combine characters\n                if (in_text) {\n                    i += next_iteration();\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function return string splitted into single characters\n        // :: each character is wrapped into formatting from input string\n        // :: or empty formatting so it will create span when using with ::format\n        // ---------------------------------------------------------------------\n        partition: function partition(string, options) {\n            var settings = $.extend({\n                wrap: true\n            }, options);\n            if (!$.terminal.have_formatting(string)) {\n                var chars = $.terminal.split_characters(string);\n                return chars.map(wrap);\n            }\n            var result = [];\n            function wrap(string) {\n                if (string.match(/\\\\$/)) {\n                    string += '\\\\';\n                }\n                return '[[;;]' + string + ']';\n            }\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\\\]$/)) {\n                        string = string.replace(/\\\\]/g, '\\\\\\\\]');\n                    }\n                } else if (settings.wrap) {\n                    string = wrap(string);\n                }\n                return string;\n            }\n            $.terminal.iterate_formatting(string, function(data) {\n                if (data.text) {\n                    var text = [];\n                    if (data.formatting) {\n                        text.push(data.formatting);\n                    }\n                    text.push(string.substring(data.index, data.index + data.size));\n                    if (data.formatting) {\n                        text.push(']');\n                    }\n                    result.push(formatting(text.join('')));\n                }\n            });\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(string);\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return chars.slice(start_index, end_index).join('');\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var offset = 1;\n            $.terminal.iterate_formatting(string, function(data) {\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                    offset = data.size;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    if (data.formatting) {\n                        end = prev_index + offset;\n                    }\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.slice(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function - and fix unclosed &\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            string = string.replace(format_re, function(_, format, text) {\n                if (format.match(self_closing_re) && text === '') {\n                    return '[[' + format + '] ]';\n                }\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                // space is hack for images that break iterate_formatting\n                format += semicolons + safe(text);\n                return '[[' + format + ']' + text + ']';\n            });\n            return $.terminal.amp(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var get_next_character = make_next_char_fun(line);\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var last_bracket = !!line.match(/\\[\\[[^\\]]+\\](?:[^\\][]|\\\\\\])+\\]$/);\n                var leading_spaces = !!line.match(/^(&nbsp;|\\s)/);\n                $.terminal.iterate_formatting(line, function(data) {\n                    var chr, substring;\n                    if (data.length >= length || data.last ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        // TODO: this need work\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line).substring(data.space_count);\n                            // real length, not counting formatting\n                            stripped = stripped.slice(0, length).replace(/\\s+$/, '');\n                            var text_len = strlen(stripped);\n                            if (stripped.match(/\\s/) || text_len < length) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var after_index = data.index + data.size;\n                        if (last_bracket) {\n                            after_index += 1;\n                        }\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            after_index !== line_length && can_break) {\n                            output = line.slice(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.slice(data.index);\n                            chr = get_next_character(substring);\n                            output = line.slice(first_index, data.index) + chr;\n                            if (data.last && last_bracket && chr !== ']') {\n                                output += ']';\n                            }\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/(&nbsp;|\\s)+$/g, '');\n                            if (!leading_spaces) {\n                                output = output.replace(/^(&nbsp;|\\s)+/g, '');\n                            }\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|#x[0-9a-f]+;|[a-z]+;)/gi, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /\\[\\[([^\\][]+)\\][\\s\\S]*/;\n            var format_split_re = /^\\[\\[([^;]*);([^;]*);([^\\]]*)\\]/;\n            var class_i = 3; // index of the class in formatting\n            var attrs_i = 5; // index of attributes in formatting\n            // ---------------------------------------------------------------------------\n            function unique(value, index, self) {\n                return self.indexOf(value) === index;\n            }\n            // ---------------------------------------------------------------------------\n            function update_style(new_style, old_style) {\n                new_style = parse_style(new_style);\n                if (!old_style) {\n                    return new_style;\n                }\n                return $.extend(old_style, new_style);\n            }\n            // ---------------------------------------------------------------------------\n            function parse_style(string) {\n                var style = {};\n                string.split(/\\s*;\\s*/).forEach(function(string) {\n                    var parts = string.split(':').map(function(string) {\n                        return string.trim();\n                    });\n                    var prop = parts[0];\n                    var value = parts[1];\n                    style[prop] = value;\n                });\n                return style;\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_formatting(input) {\n                var result = input.slice();\n                if (input[attrs_i]) {\n                    result[attrs_i] = stringify_attrs(input[attrs_i]);\n                }\n                if (input[class_i]) {\n                    result[class_i] = stringify_class(input[class_i]);\n                }\n                result[0] = stringify_styles(input[0]);\n                return result.join(';');\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_styles(input) {\n                var ignore = input.filter(function(s) {\n                    return s[0] === '-';\n                }).map(function(s) {\n                    return s[1];\n                });\n                return input.filter(function(s) {\n                    return ignore.indexOf(s) === -1 && ignore.indexOf(s[1]) === -1;\n                }).join('');\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_attrs(attrs) {\n                return JSON.stringify(attrs, function(key, value) {\n                    if (key === 'style') {\n                        return stringify_style(value);\n                    }\n                    return value;\n                });\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_class(klass) {\n                return klass.filter(unique).join(' ');\n            }\n            // ---------------------------------------------------------------------------\n            function stringify_style(style) {\n                return Object.keys(style).map(function(prop) {\n                    return prop + ':' + style[prop];\n                }).join(';');\n            }\n            // ---------------------------------------------------------------------------\n            function get_inherit_style(stack) {\n                function update_attrs(value) {\n                    if (!output[attrs_i]) {\n                        output[attrs_i] = {};\n                    }\n                    try {\n                        var new_attrs = JSON.parse(value);\n                        if (new_attrs.style) {\n                            var new_style = new_attrs.style;\n                            var old_style = output[attrs_i].style;\n                            new_attrs.style = update_style(new_style, old_style);\n                            output[attrs_i] = $.extend(\n                                new_attrs,\n                                output[attrs_i],\n                                {\n                                    style: update_style(new_style, old_style)\n                                }\n                            );\n                        } else {\n                            output[attrs_i] = $.extend(\n                                new_attrs,\n                                output[attrs_i]\n                            );\n                        }\n                    } catch (e) {\n                        warn('Invalid JSON ' + value);\n                    }\n                }\n                var output = [[], '', ''];\n                if (!stack.length) {\n                    return output;\n                }\n                for (var i = stack.length; i--;) {\n                    var formatting = $.terminal.parse_formatting(stack[i]);\n                    if (formatting.length > 5) {\n                        var last = formatting.slice(5).join(';');\n                        formatting = formatting.slice(0, 5).concat(last);\n                    }\n                    var style = formatting[0].split(/(-?[@!gbiuso])/g).filter(Boolean);\n                    style.forEach(function(s) {\n                        if (output[0].indexOf(s) === -1) {\n                            output[0].push(s);\n                        }\n                    });\n                    for (var j = 1; j < formatting.length; ++j) {\n                        var value = formatting[j].trim();\n                        if (value) {\n                            if (j === class_i) {\n                                if (!output[class_i]) {\n                                    output[class_i] = [];\n                                }\n                                var classes = value.split(/\\s+/);\n                                output[class_i] = output[class_i].concat(classes);\n                            } else if (j === attrs_i) {\n                                update_attrs(value);\n                            } else if (!output[j]) {\n                                output[j] = value;\n                            }\n                        }\n                    }\n                }\n                return stringify_formatting(output);\n            }\n            return string.split(re).filter(Boolean).map(function(string) {\n                var style;\n                if (string.match(/^\\[\\[/) && !$.terminal.is_extended_command(string)) {\n                    var formatting = string.replace(format_re, '$1');\n                    var is_formatting = $.terminal.is_formatting(string);\n                    string = string.replace(format_split_re, '');\n                    stack.push(formatting);\n                    if ($.terminal.nested_formatting.__inherit__) {\n                        style = get_inherit_style(stack);\n                    } else {\n                        style = formatting;\n                    }\n                    if (!is_formatting) {\n                        string += ']';\n                    } else {\n                        stack.pop();\n                    }\n                    string = '[[' + style + ']' + string;\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        if ($.terminal.nested_formatting.__inherit__) {\n                            style = get_inherit_style(stack);\n                        } else {\n                            style = stack[stack.length - 1];\n                        }\n                        string = '[[' + style + ']' + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (settings && typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            function should_format(options) {\n                if (!settings || !options) {\n                    return true;\n                }\n                var props = ['echo', 'command', 'prompt'];\n                var have_any = props.some(function(name) {\n                    return options[name] === true;\n                });\n                if (!have_any) {\n                    return true;\n                }\n                for (var i = props.length; i--;) {\n                    var prop = props[i];\n                    if (options[prop] === true && settings[prop] === true) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            settings = settings || {};\n            var formatters = settings.formatters || $.terminal.defaults.formatters;\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (is_array(ret) && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] < length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else if (found_position) {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            } else {\n                                // initial position for replacers\n                                position = input[1];\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                if (found_position) {\n                                    return [string, position];\n                                }\n                                return [string, -1];\n                            } else {\n                                if (is_array(formatter)) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0]) &&\n                                        should_format(formatter[2])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    var after_len = text(result[0]).length;\n                                    if (after_len !== this_len) {\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        max += count_selfclosing_formatting(string);\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        var before = $.terminal.strip(input[0]);\n                        var after = $.terminal.strip(string);\n                        if (before === after) {\n                            return [string, input[1]];\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;')\n                .replace(/\\]/g, '&#93;')\n                .replace(/\\\\/g, '&#92;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[')\n                .replace(/&#93;/g, ']')\n                .replace(/&#92;/g, '\\\\');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string, raw) {\n            if (!string) {\n                return 0;\n            }\n            return $.terminal.split_characters(raw ? string : text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            var get_next_character = make_next_char_fun(string);\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.slice(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // :: after adding align tabs arr.join('\\t\\t') looks much better\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            array = array.map(function(value) {\n                if (typeof value !== 'string') {\n                    return String(value);\n                }\n                return value;\n            });\n            var no_formatting = array.map(function(value) {\n                return $.terminal.strip(value);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            if (!$.terminal.have_formatting(str)) {\n                return str;\n            }\n            return $.terminal.format_split(str).map(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    str = str.replace(format_parts_re, '$6');\n                    return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                        return bracket;\n                    });\n                }\n                return str;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"`]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\" || string === \"``\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(\\\\\\\\\\\\\\\\(?:\\\\\\\\\\\\\\\\)*)\" + quote, \"g\");\n                        string = string.replace(re, '$1').replace(/^[`'\"]|[`'\"]$/g, '');\n                        if (quote === \"'\") {\n                            string = string.replace(/\"/g, '\\\\\"');\n                        }\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === \"`\" && arg[arg.length - 1] === \"`\") {\n                    return arg.replace(/^`|`$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"`]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            if (arg === 'true') {\n                return true;\n            } else if (arg === 'false') {\n                return false;\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"`]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                var str = typeof arg === 'string' ? arg : '';\n                if (str.match(/^--?[^-]/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (str.match(/^--[^-]/)) {\n                    var name = str.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (str.match(/^-[^-]/)) {\n                    var single = str.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function that return array of formatting\n        // :: it handles html entites inside text #735\n        // ---------------------------------------------------------------------\n        parse_formatting: function(string) {\n            var formatting = $.terminal.unescape_brackets(string).split(';');\n            var text_part = 4;\n            if (formatting.length >= 5) {\n                var escaped = $.terminal.escape_brackets(formatting[text_part]);\n                formatting[text_part] = escaped;\n            }\n            return formatting;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [[ .... ]] in echo\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            var deferred = new $.Deferred();\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        deferred.reject();\n                    } else {\n                        string = m[1];\n                        var obj = m[2] === 'terminal' ? term : term.cmd();\n                        var fn = m[3];\n                        try {\n                            var args = eval('[' + m[4] + ']');\n                            if (!obj[fn]) {\n                                term.error('Unknow function ' + fn);\n                            } else {\n                                var ret = obj[fn].apply(term, args);\n                                if (ret && ret.then) {\n                                    return ret;\n                                }\n                            }\n                            deferred.resolve();\n                        } catch (e) {\n                            term.error('Invalid invocation in ' +\n                                       $.terminal.escape_brackets(string));\n                            deferred.reject();\n                        }\n                    }\n                } else {\n                    return term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n                deferred.reject();\n            }\n            return deferred.promise();\n        },\n        // ---------------------------------------------------------------------\n        // :: ES6 iterator for a given string that handle emoji and formatting\n        // ---------------------------------------------------------------------\n        iterator: function(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                }\n                return string;\n            }\n            if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n                var len = $.terminal.length(string);\n                var i = 0;\n                var obj = {};\n                obj[Symbol.iterator] = function() {\n                    return {\n                        next: function() {\n                            if (i < len) {\n                                var text = $.terminal.substring(string, i, i + 1);\n                                i++;\n                                return {\n                                    value: formatting(text)\n                                };\n                            } else {\n                                return {\n                                    done: true\n                                };\n                            }\n                        }\n                    };\n                };\n                return obj;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: object that can be used in string methods intead of regex\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: Function return array of pre processed formatting\n        // :: each item is array of style, color, background, and text\n        // :: if the element is not present or if it's normal text\n        // :: the element is empty string\n        // ---------------------------------------------------------------------\n        process_formatting: function(string) {\n            return $.terminal.format_split(string).map(function(string) {\n                if ($.terminal.is_formatting(string)) {\n                    var parts = string.match(new RegExp(format_parts_re, 'i'));\n                    var text = parts.pop();\n                    for (var i = 1; i <= 2; ++i) {\n                        if (!$.terminal.valid_color(parts[i])) {\n                            parts[i] = '';\n                        }\n                    }\n                    return parts.slice(1, 4).concat(text);\n                } else {\n                    return ['', '', '', string];\n                }\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    (function() {\n        // ---------------------------------------------------------------------\n        function clean_data(data, text) {\n            if (data === '') {\n                return text;\n            } else {\n                return data.replace(/&#93;/g, ']')\n                    .replace(/>/g, '&gt;')\n                    .replace(/</g, '&lt;')\n                    .replace(/\"/g, '&quot;');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // test if this is valid Path\n        // ---------------------------------------------------------------------\n        function is_path(url) {\n            return url.match(/^\\.{1,2}\\//) ||\n                url.match(/^\\//) ||\n                !(url.match(/\\//) || url.match(/^[^:]+:/));\n        }\n        // ---------------------------------------------------------------------\n        function with_url_validation(fn, settings) {\n            return function(url) {\n                if (settings.anyLinks) {\n                    return true;\n                }\n                var test = fn(url);\n                if (!test) {\n                    warn('Invalid URL ' + url + ' only http(s) ftp and path ' +\n                         'are allowed');\n                }\n                return test;\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        $.terminal.format = function format(str, options) {\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                allowedAttributes: [],\n                charWidth: undefined,\n                escape: true,\n                anyLinks: false\n            }, options || {});\n            // -----------------------------------------------------------------\n            var valid_href = with_url_validation(function(url) {\n                return url.match(/^((https?|file|ftp):\\/\\/|\\.{0,2}\\/)/) || is_path(url);\n            }, settings);\n            // -----------------------------------------------------------------\n            var valid_src = with_url_validation(function(url) {\n                return url.match(/^(https?:|file:|blob:|data:)/) || is_path(url);\n            }, settings);\n            // -----------------------------------------------------------------\n            function filter_attr_names(names) {\n                if (names.length && settings.allowedAttributes.length) {\n                    return names.filter(function(name) {\n                        if (name === 'data-text') {\n                            return false;\n                        }\n                        var allowed = false;\n                        var filters = settings.allowedAttributes;\n                        for (var i = 0; i < filters.length; ++i) {\n                            if (filters[i] instanceof RegExp) {\n                                if (filters[i].test(name)) {\n                                    allowed = true;\n                                    break;\n                                }\n                            } else if (filters[i] === name) {\n                                allowed = true;\n                                break;\n                            }\n                        }\n                        return allowed;\n                    });\n                }\n                return [];\n            }\n            // -----------------------------------------------------------------\n            function attrs_to_string(style, attrs) {\n                if (attrs) {\n                    var keys = filter_attr_names(Object.keys(attrs));\n                    if (keys.length) {\n                        var result = keys.map(function(name) {\n                            if (attrs[name] === null) {\n                                return '';\n                            }\n                            if (attrs[name] === true) {\n                                return name;\n                            }\n                            var value = escape_html_attr(attrs[name]);\n                            if (name === 'style') {\n                                // merge style attr and colors #617\n                                value = value ? style + ';' + value : style;\n                            }\n                            return name + '=\"' + value + '\"';\n                        }).filter(Boolean);\n                        if (!result.length) {\n                            return '';\n                        }\n                        return result.join(' ');\n                    }\n                }\n                if (!style) {\n                    return '';\n                }\n                return 'style=\"' + style + '\"';\n            }\n            // -----------------------------------------------------------------\n            function rel_attr() {\n                var rel = [\"noopener\"];\n                if (settings.linksNoReferrer) {\n                    rel.unshift(\"noreferrer\");\n                }\n                if (settings.linksNoFollow) {\n                    rel.unshift(\"nofollow\");\n                }\n                return rel;\n            }\n            // -----------------------------------------------------------------\n            var default_rel = rel_attr().join(' ');\n            // -----------------------------------------------------------------\n            function pre_process_link(data, attrs, valid_attrs) {\n                if (data.match(email_re)) {\n                    return '<a href=\"mailto:' + data + '\"';\n                } else {\n                    // only http and ftp links (prevent javascript)\n                    // unless user force it with anyLinks option\n                    var result = ['<a'];\n                    if (data && valid_href(data)) {\n                        result.push('href=\"' + data + '\"');\n                    }\n                    if (attrs) {\n                        if (valid_attrs.includes('target') &&\n                            attrs.target === undefined) {\n                            attrs.target = '_blank';\n                        }\n                        if (valid_attrs.includes('rel') &&\n                            attrs.rel === undefined) {\n                            attrs.rel = default_rel;\n                        }\n                    } else {\n                        result.push('rel=\"' + default_rel + '\"');\n                        result.push('target=\"_blank\"');\n                    }\n                    return result.join(' ');\n                }\n            }\n            // -----------------------------------------------------------------\n            function pre_process_image(data) {\n                var result = '<img';\n                if (valid_src(data)) {\n                    result += ' src=\"' + data + '\"';\n                    if (text) {\n                        result += ' alt=\"' + text + '\"';\n                    }\n                }\n                return result;\n            }\n            // -----------------------------------------------------------------\n            function format(s, style, color, background, _class, data_text, text) {\n                var attrs;\n                var valid_attrs = [];\n                if (data_text.match(/;/)) {\n                    try {\n                        var splitted = data_text.split(';');\n                        var str = splitted.slice(1).join(';')\n                            .replace(/&nbsp;/g, ' ')\n                            .replace(/&lt;/g, '<')\n                            .replace(/&gt;/g, '>');\n                        if (str.match(/^\\s*\\{[^}]*\\}\\s*$/)) {\n                            attrs = JSON.parse(str);\n                            valid_attrs = filter_attr_names(Object.keys(attrs));\n                            data_text = splitted[0];\n                        }\n                    } catch (e) {\n                    }\n                }\n                if (text === '' && !style.match(/@/)) {\n                    return ''; //'<span>&nbsp;</span>';\n                }\n                text = safe(text);\n                text = text.replace(/\\\\\\]/g, '&#93;');\n                if (settings.escape) {\n                    // inside formatting we need to unescape escaped slashes\n                    // but this escape is not needed when echo - don't know why\n                    text = text.replace(/\\\\\\\\/g, '\\\\');\n                }\n                var styles = {};\n                if (style.indexOf('b') !== -1) {\n                    styles['font-weight'] = 'bold';\n                }\n                var text_decoration = [];\n                if (style.indexOf('u') !== -1) {\n                    text_decoration.push('underline');\n                }\n                if (style.indexOf('s') !== -1) {\n                    text_decoration.push('line-through');\n                }\n                if (style.indexOf('o') !== -1) {\n                    text_decoration.push('overline');\n                }\n                if (text_decoration.length) {\n                    styles['text-decoration'] = text_decoration.join(' ');\n                }\n                if (style.indexOf('i') !== -1) {\n                    styles['font-style'] = 'italic';\n                }\n                if ($.terminal.valid_color(color)) {\n                    $.extend(styles, {\n                        'color': color,\n                        '--color': color,\n                        '--original-color': color\n                    });\n                    if (style.indexOf('!') !== -1) {\n                        styles['--link-color'] = color;\n                    }\n                    if (style.indexOf('g') !== -1) {\n                        styles['text-shadow'] = '0 0 5px ' + color;\n                    }\n                }\n                if ($.terminal.valid_color(background)) {\n                    $.extend(styles, {\n                        'background-color': background,\n                        '--background': background\n                    });\n                }\n                var data = clean_data(data_text, text);\n                var extra = extra_css(text, settings);\n                if (extra) {\n                    text = wide_characters(text, settings);\n                    $.extend(styles, extra);\n                }\n                var result;\n                var style_str = style_to_string(styles);\n                if (style.indexOf('!') !== -1) {\n                    result = pre_process_link(data, attrs, valid_attrs);\n                } else if (style.indexOf('@') !== -1) {\n                    result = pre_process_image(data);\n                } else {\n                    result = '<span';\n                }\n                var output_attrs = attrs_to_string(style_str, attrs, valid_attrs);\n                if (output_attrs) {\n                    result += ' ' + output_attrs;\n                }\n                if (_class !== '') {\n                    result += ' class=\"' + _class + '\"';\n                }\n                // links and image need data-text attribute cmd click behavior\n                // formatter can return links.\n                if (style.indexOf('!') !== -1) {\n                    result += ' data-text>' + text + '</a>';\n                } else if (style.indexOf('@') !== -1) {\n                    result += ' data-text/>';\n                } else {\n                    result += ' data-text=\"' + data + '\">' +\n                        '<span>' + text + '</span></span>';\n                }\n                return result;\n            }\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, format);\n                    } else {\n                        text = safe(text);\n                        text = text.replace(/\\\\\\]/, '&#93;');\n                        var data = clean_data(text);\n                        var extra = extra_css(text, settings);\n                        var prefix;\n                        if (extra) {\n                            text = wide_characters(text, settings);\n                            prefix = '<span style=\"' + style_to_string(extra) + '\"';\n                        } else {\n                            prefix = '<span';\n                        }\n                        return prefix + ' data-text=\"' + data + '\">' + text + '</span>';\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        };\n    })();\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    $.terminal.Exception.prototype.toString = function() {\n        return this.message + '\\n' + this.stack;\n    };\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n    // -----------------------------------------------------------------------\n    $.rpc = function(url, method, params) {\n        var deferred = new $.Deferred();\n        function success(res) {\n            if (res.error) {\n                deferred.reject(res.error);\n            } else {\n                deferred.resolve(res.result);\n            }\n        }\n        function error(jqXHR, status, message) {\n            deferred.reject({message: message});\n        }\n        $.jrpc(url, method, params, success, error);\n        return deferred.promise();\n    };\n    // -----------------------------------------------------------------------\n    function terminal_ready(term) {\n        return !!(term.closest('body').length &&\n                  term.is(':visible') &&\n                  term.find('.cmd-prompt').length);\n    }\n    // -----------------------------------------------------------------------\n    function format_stack_trace(stack) {\n        stack = $.terminal.escape_brackets(stack);\n        return stack.split(/\\n/g).map(function(trace) {\n            // nested formatting will handle urls but that formatting\n            // can be removed - this code was created before\n            // that formatting existed (see commit ce01c3f5)\n            return '[[;;;terminal-error]' +\n                trace.replace(url_re, function(url) {\n                    return ']' + url + '[[;;;terminal-error]';\n                }) + ']';\n        }).join('\\n');\n    }\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(term) {\n        var result;\n        if (terminal_ready(term)) {\n            var $prompt = term.find('.cmd-prompt').clone().css({\n                visiblity: 'hidden',\n                position: 'absolute'\n            });\n            $prompt.appendTo(term.find('.cmd'))\n                .html('&nbsp;')\n                .wrap('<div class=\"cmd-wrapper\"/>');\n            result = {\n                width: $prompt.width(),\n                height: $prompt.height()\n            };\n            $prompt.parent().remove();\n        } else {\n            var temp = $('<div class=\"terminal terminal-temp\"><div class=\"terminal-' +\n                         'wrapper\"><div class=\"terminal-output\"><div><div class=\"te' +\n                         'rminal-line\" style=\"float: left\"><span>&nbsp;</span></div' +\n                         '></div></div><div class=\"terminal-pixel\"></div></div>')\n                .appendTo('body');\n            temp.addClass(term.attr('class')).attr('id', term.attr('id'));\n            if (term) {\n                var style = term.attr('style');\n                if (style) {\n                    style = style.split(/\\s*;\\s*/).filter(function(s) {\n                        return !s.match(/display\\s*:\\s*none/i);\n                    }).join(';');\n                    temp.attr('style', style);\n                }\n            }\n            var node = temp.find('.terminal-line');\n            result = {\n                width: node.width(),\n                height: node.height()\n            };\n            temp.remove();\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        var fill = terminal.find('.terminal-fill');\n        var height = fill.height();\n        return Math.floor(height / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function is_object(object) {\n        return object && typeof object === 'object';\n    }\n    // -----------------------------------------------------------------------\n    function is_promise(object) {\n        return is_object(object) && is_function(object.then || object.done);\n    }\n    // -----------------------------------------------------------------------\n    function is_deferred(object) {\n        return is_promise(object) && is_function(object.promise);\n    }\n    // -----------------------------------------------------------------------\n    if (!Array.isArray) {\n        Array.isArray = function(arg) {\n            return Object.prototype.toString.call(arg) === '[object Array]';\n        };\n    }\n    // -----------------------------------------------------------------------\n    function is_array(object) {\n        return Array.isArray(object);\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        if (typeof object === 'function') {\n            return 'function';\n        }\n        if (object === null) {\n            return object + '';\n        }\n        if (Array.isArray(object)) {\n            return 'array';\n        }\n        if (typeof object === 'object') {\n            return 'object';\n        }\n        return typeof object;\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2022 Jakub T. Jankiewicz ' +\n        '<https://jcubic.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2022 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // if set to false nested formatting will not inherit styles colors and attribues\n    $.terminal.nested_formatting.__inherit__ = true;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        tabindex: 1,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        mousewheel: null,\n        touchscroll: null,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        execAnimation: false,\n        execAnimationDelay: 100,\n        linksNoReferrer: false,\n        externalPause: true,\n        useCache: true,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        onCommandChange: null,\n        mobileDelete: is_mobile,\n        onPositionChange: null,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        unixFormatting: {\n            escapeBrackets: false,\n            ansiParser: {},\n            ansiArt: false\n        },\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        repeatTimeoutKeys: [],\n        mobileIngoreAutoSpace: [],\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        keymap: null,\n        doubleTab: null,\n        doubleTabEchoCommand: false,\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        renderHandler: null,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onPaste: $.noop,\n        onFlush: $.noop,\n        onBeforeCommand: null,\n        onAfterCommand: null,\n        onBeforeEcho: null,\n        onAfterEcho: null,\n        onBeforeLogin: null,\n        onAfterLogout: null,\n        onBeforeLogout: null,\n        allowedAttributes: ['title', 'target', 'rel', /^aria-/, 'id', /^data-/],\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong username or password try again!',\n            wrongPassword: 'Wrong username or password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveLoop: 'Recursive loop in echo detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            invalidMask: 'Invalid mask used only string or boolean allowed',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that use option to render objects\n        // ---------------------------------------------------------------------\n        function preprocess_value(value, options) {\n            options = options || {};\n            if ($.terminal.Animation && value instanceof $.terminal.Animation) {\n                value.start(self);\n                return false;\n            }\n            if (is_function(settings.renderHandler)) {\n                return unpromise(value, function(value) {\n                    try {\n                        var ret = settings.renderHandler.call(self, value, options, self);\n                        if (ret === false) {\n                            return false;\n                        }\n                        if (typeof ret === 'string' || is_node(ret) || is_promise(ret)) {\n                            return ret;\n                        } else {\n                            return value;\n                        }\n                    } catch (e) {\n                        return [\n                            '[[;red;]' + e.message + ']',\n                            format_stack_trace(e.stack)\n                        ].join('\\n');\n                    }\n                });\n            }\n            return value;\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function used in render and in update\n        // ---------------------------------------------------------------------\n        function prepare_render(value, options) {\n            if (is_node(value)) {\n                var settings = $.extend({}, options, {\n                    raw: true,\n                    finalize: function(div) {\n                        div.find('.terminal-render-item').replaceWith(value);\n                        if (options && is_function(options.finalize)) {\n                            options.finalize(div, self);\n                        }\n                    }\n                });\n                return ['<div class=\"terminal-render-item\"/>', settings];\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that renders DOM nodes and jQuery objects\n        // ---------------------------------------------------------------------\n        function render(value, options) {\n            var ret = prepare_render(value, options);\n            if (ret) {\n                self.echo.apply(self, ret);\n                return true;\n            }\n        }\n        // ---------------------------------------------------------------------\n        function get_node(index) {\n            return output.find('[data-index=' + index + ']');\n        }\n        // ---------------------------------------------------------------------\n        // :: test if object can be rendered\n        // ---------------------------------------------------------------------\n        function is_node(object) {\n            return object instanceof $.fn.init || object instanceof Element;\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            object = preprocess_value(object);\n            if (object === false) {\n                return;\n            }\n            if (render(object)) {\n                return;\n            }\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (is_array(object)) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display line code in the file if line numbers are present\n        // ---------------------------------------------------------------------\n        function print_line(url_spec, cols) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    var start = n > 2 ? n - 2 : 0;\n                    var lines = code.slice(start, n + 3).map(function(line, i) {\n                        var prefix = '[' + (n + i - 1) + ']: ';\n                        var limit = cols - prefix.length - 4;\n                        if (line.length > limit) {\n                            line = line.substring(0, limit) + '...';\n                        }\n                        if (n > 2 ? i === 2 : i === n) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return prefix + line;\n                    }).filter(Boolean).join('\\n');\n                    if (lines.length) {\n                        self.echo('[[b;white;]' + file + ']');\n                        self.echo(lines).resume();\n                    }\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else if (json.result !== null) {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token(true);\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error('Error: ' + (e.message || e));\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: function create interpreter object based on JSON-RPC meta data\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== false && settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        // :: function create interpeter function and call finalize with\n        // :: interpreter and optional completion\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter && fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.describe === false) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function links(string) {\n            function format(_, style, color, background, _class, data, text) {\n                function formatting(s, text) {\n                    return '[[' + [\n                        style + (s || ''),\n                        color,\n                        background,\n                        _class,\n                        text || data\n                    ].join(';') + ']';\n                }\n                function escaped(_) {\n                    return ']' + formatting('!', _) + _ + ']' + formatting();\n                }\n                if (!style.match(/!/)) {\n                    var m = text.match(email_full_re) || text.match(url_full_re);\n                    if (m) {\n                        return formatting('!', m[1]) + text + ']';\n                    } else if (text.match(email_re) || text.match(url_nf_re)) {\n                        var output = text.replace(email_re, escaped)\n                            .replace(url_nf_re, escaped);\n                        return formatting('', data) + output + ']';\n                    }\n                }\n                return _;\n            }\n            function linkify(string) {\n                return string.replace(email_re, '[[!;;]$1]').\n                    replace(url_nf_re, '[[!;;]$1]');\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return linkify(string);\n            }\n            return $.terminal.format_split(string).map(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    return str.replace(format_parts_re, format);\n                } else {\n                    return linkify(str);\n                }\n            }).join('');\n        }\n        // ---------------------------------------------------------------------\n        function should_wrap(string, options) {\n            return (strlen(text(string)) > options.cols ||\n                    string.match(/\\n/)) &&\n                ((settings.wrap === true &&\n                  options.wrap === undefined) ||\n                 settings.wrap === false &&\n                 options.wrap === true);\n        }\n        // ---------------------------------------------------------------------\n        var line_cache;\n        if ('Map' in root) {\n            line_cache = new Map();\n        }\n        // ---------------------------------------------------------------------\n        function process_extended_commands(string, line, line_settings) {\n            if (line_settings.exec || line.options.clear_exec) {\n                return $.terminal.each_extended_command(string, function(command) {\n                    // redraw should not execute commands and it have\n                    // and lines variable have all extended commands\n                    if (line_settings.exec) {\n                        line.options.exec = false;\n                        line.options.clear_exec = true;\n                        var trim = command.trim();\n                        if (prev_exec_cmd && prev_exec_cmd === trim) {\n                            prev_exec_cmd = '';\n                            self.error(strings().recursiveLoop);\n                        } else {\n                            prev_exec_cmd = trim;\n                            $.terminal.extended_command(self, command, {\n                                invokeMethods: line_settings.invokeMethods\n                            }).then(function() {\n                                prev_exec_cmd = '';\n                            });\n                        }\n                    }\n                });\n            }\n            return string;\n        }\n        // ---------------------------------------------------------------------\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var use_cache = !is_function(line.value);\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop,\n                    useCache: use_cache,\n                    invokeMethods: false,\n                    formatters: true,\n                    convertLinks: settings.convertLinks\n                }, line.options || {});\n                var string = stringify_value(line.value);\n                if (string && is_function(string.then)) {\n                    // handle function that return a promise #629\n                    return string.then(function(string) {\n                        process_line($.extend(line, {\n                            value: string,\n                            options: line_settings\n                        }));\n                    });\n                }\n                if (string !== '') {\n                    if (!line_settings.raw) {\n                        if (settings.useCache && line_settings.useCache) {\n                            var key = string;\n                            if (line_cache && line_cache.has(key)) {\n                                var data = line_cache.get(key);\n                                buffer.append(\n                                    data.input,\n                                    line.index,\n                                    line_settings,\n                                    data.raw\n                                );\n                                return true;\n                            }\n                        }\n                        if (line_settings.formatters) {\n                            try {\n                                string = $.terminal.apply_formatters(\n                                    string,\n                                    $.extend(settings, {echo: true})\n                                );\n                            } catch (e) {\n                                display_exception(e, 'FORMATTING');\n                            }\n                        }\n                        string = process_extended_commands(string, line, line_settings);\n                        if (string === '') {\n                            return;\n                        }\n                        if (line_settings.convertLinks) {\n                            string = links(string);\n                        }\n                        var raw_string = string;\n                        string = crlf($.terminal.normalize(string));\n                        string = $.terminal.encode(string, {\n                            tabs: settings.tabs\n                        });\n                        //string = $.terminal.normalize(string);\n                        var array;\n                        var cols = line_settings.cols = self.cols();\n                        if (should_wrap(string, line_settings)) {\n                            var words = line_settings.keepWords;\n                            array = $.terminal.split_equal(string, cols, words);\n                        } else if (string.match(/\\n/)) {\n                            array = string.split(/\\n/);\n                        }\n                    }\n                } else {\n                    raw_string = '';\n                }\n                var arg = array || string;\n                if (line_cache && key && use_cache) {\n                    line_cache.set(key, {input: arg, raw: raw_string});\n                }\n                buffer.append(arg, line.index, line_settings, raw_string);\n            } catch (e) {\n                buffer.clear();\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n            // is it work with unpromise that ignore undefined\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            try {\n                buffer.clear();\n                unpromise(lines.render(self.rows(), function(lines_to_show) {\n                    return lines_to_show.map(process_line);\n                }), function() {\n                    self.flush(options);\n                    if (!options.update) {\n                        command_line.before(detached_output); // reinsert output\n                    }\n                    fire_event('onAfterRedraw');\n                });\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            lines.unmount($self);\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                    lines.limit_snapshot(max);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    self.echo(function() {\n                        if (settings.greetings) {\n                            try {\n                                var defer = new $.Deferred();\n                                var ret = settings.greetings.call(self, defer.resolve);\n                                if (ret) {\n                                    defer.resolve(ret);\n                                }\n                                return defer.promise();\n                            } catch (e) {\n                                settings.greetings = null;\n                                display_exception(e, 'greetings');\n                            }\n                        }\n                    });\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: apply command mask to command\n        // ---------------------------------------------------------------------\n        function mask_command(command) {\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    return command.replace(/./g, mask);\n                case 'boolean':\n                    if (mask) {\n                        return command.replace(/./g, settings.maskChar);\n                    } else {\n                        return $.terminal.escape_formatting(command);\n                    }\n            }\n            throw new $.terminal.Exception(strings().invalidMask);\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            // true will return last rendered string\n            var prompt = command_line.prompt(true);\n            command = mask_command(command);\n            var options = {\n                exec: false,\n                formatters: false,\n                convertLinks: false,\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('terminal-command'));\n                    fire_event('onEchoCommand', [div, command]);\n                }\n            };\n            command = $.terminal.apply_formatters(command, {command: true});\n            self.echo(prompt + command, options);\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        function make_label_error(label) {\n            return function(e) {\n                self.error('[' + label + '] ' + (e.message || e)).resume();\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function before_async_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                deferred.resolve();\n                fire_event('onAfterCommand', [command]);\n            }\n            // -----------------------------------------------------------------\n            function show(result, promise) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                if (promise) {\n                    self.resume();\n                }\n            }\n            // -----------------------------------------------------------------\n            function is_animation_promise(ret) {\n                return is_function(ret.done || ret.then) && animating;\n            }\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                before_async_exec();\n                if (result) {\n                    // auto pause/resume when user return promises\n                    // it should not pause when user return promise from read()\n                    if (!force_awake) {\n                        if (is_animation_promise(result)) {\n                            paused = true;\n                        } else if (is_promise(result)) {\n                            self.pause(settings.softPause);\n                        }\n                    }\n                    force_awake = false;\n                    var error = make_label_error('Command');\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        return unpromise(result, function(value) {\n                            show(value, true);\n                        }, error);\n                    } else {\n                        return $.when(result).done(show).catch(error);\n                    }\n                } else {\n                    if (paused) {\n                        resume_callbacks.push(function() {\n                            // exec with resume/pause in user code\n                            after_exec();\n                        });\n                    } else {\n                        after_exec();\n                    }\n                    return deferred.promise();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (fire_event('onBeforeCommand', [command]) === false) {\n                    return;\n                }\n                if (exec) {\n                    prev_exec_cmd = command.trim();\n                    prev_command = $.terminal.split_command(prev_exec_cmd);\n                } else {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    before_async_exec();\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    before_async_exec();\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    before_async_exec();\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (fire_event('onBeforeLogout', [], true) === false) {\n                return;\n            }\n            clear_loging_storage();\n            fire_event('onAfterlogout', [], true);\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            // name change history\n            command_line.name(name + (login ? '_' + login : ''));\n            var prompt = interpreter.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt);\n            }\n            if (prompt !== command_line.prompt()) {\n                if (is_function(interpreter.prompt)) {\n                    // prevent flicker of old prompt until async prompt finishes\n                    command_line.prompt('');\n                }\n                command_line.prompt(interpreter.prompt);\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap(null).keymap($.extend(\n                    {},\n                    terminal_init_keymap,\n                    $.omap(interpreter.keymap, function(name, fun) {\n                        return function() {\n                            var args = [].slice.call(arguments);\n                            try {\n                                return fun.apply(self, args);\n                            } catch (e) {\n                                display_exception(e, 'USER KEYMAP');\n                            }\n                        };\n                    })\n                ));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_event(name, args, skip_local) {\n            args = (args || []).concat([self]); // create new array\n            // event can be fired before interpreters are created\n            var top = interpreters && interpreters.top();\n            if (top && is_function(top[name]) && !skip_local) {\n                try {\n                    return top[name].apply(self, args);\n                } catch (e) {\n                    delete top[name];\n                    display_exception(e, name);\n                }\n            } else if (is_function(settings[name])) {\n                try {\n                    return settings[name].apply(self, args);\n                } catch (e) {\n                    settings[name] = null;\n                    display_exception(e, name);\n                }\n            }\n        }\n        var scroll_to_view = (function() {\n            function scroll_to_view(visible) {\n                if (!visible) {\n                    // try catch for Node.js unit tests\n                    try {\n                        self.scroll_to(self.find('.cmd-cursor-line'));\n                        return true;\n                    } catch (e) {\n                        return true;\n                    }\n                }\n            }\n            // we don't want debounce in Unit Tests\n            if (typeof global !== 'undefined' && typeof global.it === 'function') {\n                return scroll_to_view;\n            }\n            return debounce(scroll_to_view, 100, {\n                leading: true,\n                trailing: false\n            });\n        })();\n        // ---------------------------------------------------------------------\n        function make_cursor_visible() {\n            var cursor = self.find('.cmd-cursor-line');\n            return cursor.is_fully_in_viewport(self).then(scroll_to_view);\n        }\n        // ---------------------------------------------------------------------\n        function replace_hash(state) {\n            if (typeof history !== 'undefined' && history.replaceState) {\n                var new_hash = '#' + JSON.stringify(state);\n                var url = location.href.replace(/#.*$/, new_hash);\n                history.replaceState(null, '', url);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                // for case when showing long error before init\n                if (echo_delay.length) {\n                    // for case when greetting is async function\n                    $.when.apply($, echo_delay).then(self.refresh);\n                } else {\n                    self.refresh();\n                }\n            }\n            function next() {\n                onPause = $.noop;\n                if (!was_paused && self.enabled()) {\n                    // resume login if user didn't call pause in onInit\n                    // if user pause in onInit wait with exec until it\n                    // resume\n                    self.resume(true);\n                }\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                var ret;\n                try {\n                    ret = settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                } finally {\n                    if (!is_promise(ret)) {\n                        next();\n                    } else {\n                        ret.then(next).catch(function(e) {\n                            display_exception(e, 'OnInit');\n                            next();\n                        });\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                with_selection(function(html) {\n                    if (html === '') {\n                        var command = self.get_command();\n                        var position = self.get_position();\n                        command = command.slice(0, position) + '^C' +\n                            command.slice(position + 2);\n                        echo_command(command);\n                        self.set_command('');\n                    } else {\n                        var clip = self.find('textarea');\n                        text_to_clipboard(clip, process_selected_html(html));\n                    }\n                });\n                return false;\n            },\n            'CTRL+L': function() {\n                self.clear();\n                return false;\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    // local copy\n                    commands = commands.slice();\n                    // default commands should not match for arguments\n                    if (!self.before_cursor(false).match(/\\s/)) {\n                        if (settings.clear && $.inArray('clear', commands) === -1) {\n                            commands.push('clear');\n                        }\n                        if (settings.exit && $.inArray('exit', commands) === -1) {\n                            commands.push('exit');\n                        }\n                    }\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        echoCommand: settings.doubleTabEchoCommand,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            unpromise(result, resolve, make_label_error('Completion'));\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        // ---------------------------------------------------------------------\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // then one terminal)\n            var result, i;\n            if (animating) {\n                return false;\n            }\n            if (self.enabled()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (enabled && (!paused || !settings.pauseEvents)) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Typing animation generator\n        // ---------------------------------------------------------------------\n        function typed(finish_typing_fn) {\n            return function typing_animation(message, options) {\n                var formattted = $.terminal.apply_formatters(message, {\n                    animation: true\n                });\n                animating = true;\n                var prompt = self.get_prompt();\n                var char_i = 0;\n                var len = $.terminal.length(formattted);\n                if (message.length > 0) {\n                    var new_prompt = '';\n                    if (options.prompt) {\n                        new_prompt = options.prompt;\n                    } else {\n                        self.set_prompt('');\n                    }\n                    var bottom = self.is_bottom();\n                    var chars = $.terminal.partition(formattted, {wrap: false});\n                    var interval = setInterval(function() {\n                        if (!skip) {\n                            var chr = chars[char_i];\n                            if (options.mask) {\n                                var mask = command_line.mask();\n                                if (typeof mask === 'string') {\n                                    chr = mask;\n                                } else if (mask) {\n                                    chr = settings.maskChar;\n                                }\n                            }\n                            new_prompt += chr;\n                            self.set_prompt(new_prompt);\n                            if (bottom && (chr === '\\n' || !self.is_bottom())) {\n                                self.scroll_to_bottom();\n                            }\n                            char_i++;\n                        } else {\n                            self.skip_stop();\n                            var chrRest = $.terminal.substring(formattted, char_i, len);\n                            new_prompt += chrRest;\n                            self.set_prompt(new_prompt);\n                            char_i = len;\n                        }\n                        if (char_i === len) {\n                            clearInterval(interval);\n                            setTimeout(function() {\n                                // swap command with prompt\n                                finish_typing_fn(message, prompt, options);\n                                animating = false;\n                            }, options.delay);\n                        }\n                    }, options.delay);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        var typed_prompt = typed(function(message, _, options) {\n            self.set_prompt(message);\n            options.finalize();\n        });\n        // ---------------------------------------------------------------------\n        var typed_insert = (function() {\n            var helper = typed(function(message, prompt, options) {\n                self.set_prompt(prompt);\n                self.insert(message);\n                options.finalize();\n            });\n            return function(prompt, command, options) {\n                return helper(command, $.extend({}, options, {\n                    prompt: prompt + self.get_command()\n                }));\n            };\n        })();\n        // ---------------------------------------------------------------------\n        var typed_message = typed(function(message, prompt, options) {\n            self.set_prompt(prompt);\n            self.echo(message, $.extend({}, options, {typing: false}));\n        });\n        // ---------------------------------------------------------------------\n        var typed_enter = (function() {\n            var helper = typed(function(message, prompt, options) {\n                self.set_prompt(prompt);\n                with_prompt(prompt, function(prompt) {\n                    var command = mask_command(message);\n                    command = $.terminal.apply_formatters(command, {command: true});\n                    var output = prompt + command;\n                    options = $.extend({}, options, {\n                        typing: false,\n                        formatters: false,\n                        convertLinks: false\n                    });\n                    self.echo(output, options);\n                }, self);\n            });\n            return function(prompt, message, options) {\n                return helper(message, $.extend({}, options, {\n                    prompt: prompt, mask: true\n                }));\n            };\n        })();\n        // ---------------------------------------------------------------------\n        function with_typing(kind, else_fn, finalize_fn) {\n            return function with_typing_fn(string, options) {\n                var d = new $.Deferred();\n                when_ready(function ready() {\n                    var locals = $.extend({\n                        typing: false,\n                        delay: settings.execAnimationDelay\n                    }, options);\n                    if (locals.typing) {\n                        if (typeof string !== 'string') {\n                            return d.reject(kind + ': Typing animation require string');\n                        }\n                        if (typeof locals.delay !== 'number' || isNaN(locals.delay)) {\n                            return d.reject(kind + ': Invalid argument, delay need to' +\n                                            ' be a number');\n                        }\n                        var p = self.typing(kind, locals.delay, string, locals);\n                        p.then(function() {\n                            d.resolve();\n                        });\n                    } else {\n                        else_fn(string, locals);\n                    }\n                    if (is_function(finalize_fn)) {\n                        finalize_fn(string, locals);\n                    }\n                });\n                if (options && options.typing) {\n                    return d.promise();\n                }\n                return self;\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: this even can be used to valid if user and password is valid\n        // :: this is additional protection when using automatic authentication\n        // ---------------------------------------------------------------------\n        function validate_login(user, token_or_password, callback) {\n            var ret = fire_event('onBeforeLogin', [user, token_or_password]);\n            return unpromise(always(ret), callback, 'validate_login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Function changes the prompt of the command line to login\n        // :: with a password and calls the user login function with\n        // :: the callback that expects a token. The login is successful\n        // :: if the user calls it with value that is truthy\n        // ---------------------------------------------------------------------\n        function authentication(auth_callback, infinite, success, error) {\n            // don't store login data in history\n            if (settings.history) {\n                command_line.history().disable();\n            }\n            // so we know how many times call pop\n            var level = self.level();\n            // when autologin and onBeforeLogin return false\n            clear_token();\n            function popUserPass() {\n                while (self.level() > level) {\n                    self.pop(undefined, true);\n                }\n                if (settings.history) {\n                    command_line.history().enable();\n                }\n            }\n            function set_token(user, token) {\n                var name = self.prefix_name(true) + '_';\n                storage.set(name + 'token', token);\n                storage.set(name + 'login', user);\n            }\n            function clear_token() {\n                var name = self.prefix_name(true) + '_';\n                storage.remove(name + 'token');\n                storage.remove(name + 'login');\n            }\n            function login_callback(user, token, silent) {\n                var next;\n                if (token) {\n                    popUserPass();\n                    set_token(user, token);\n                    in_login = false;\n                    fire_event('onAfterLogin', [user, token]);\n                    next = success;\n                } else {\n                    if (infinite) {\n                        if (!silent) {\n                            self.error(strings().wrongPasswordTryAgain);\n                        }\n                        self.pop(undefined, true).set_mask(false);\n                    } else {\n                        in_login = false;\n                        if (!silent) {\n                            self.error(strings().wrongPassword);\n                        }\n                        self.pop(undefined, true).pop(undefined, true);\n                    }\n                    // used only to call pop in push\n                    next = error;\n                }\n                if (self.paused()) {\n                    self.resume();\n                }\n                // will be used internaly since users know\n                // when login success (they decide when\n                // it happen by calling the callback -\n                // this funtion)\n                if (is_function(next)) {\n                    next();\n                }\n                self.off('terminal.autologin');\n            }\n            self.on('terminal.autologin', function(event, user, token, silent) {\n                validate_login(user, token, function(valid) {\n                    if (valid !== false) {\n                        login_callback(user, token, silent);\n                    }\n                });\n            });\n            self.push(function(user) {\n                self.set_mask(settings.maskChar).push(function(pass) {\n                    try {\n                        validate_login(user, pass, function(valid) {\n                            if (valid === false) {\n                                popUserPass();\n                                return;\n                            }\n                            self.pause();\n                            try {\n                                var args = [user, pass, function(token, silent) {\n                                    login_callback(user, token, silent);\n                                }];\n                                var ret = auth_callback.apply(self, args);\n                                unpromise(ret, function(token) {\n                                    login_callback(user, token);\n                                }, function(err) {\n                                    self.pop(undefined, true).pop(undefined, true);\n                                    self.error(err.message);\n                                    if (is_function(error)) {\n                                        error();\n                                    }\n                                    if (self.paused()) {\n                                        self.resume();\n                                    }\n                                    self.off('terminal.autologin');\n                                });\n                            } catch (e) {\n                                display_exception(e, 'AUTH');\n                            }\n                        });\n                    } catch (e) {\n                        display_exception(e, 'AUTH');\n                    }\n                }, {\n                    prompt: strings().password + ': ',\n                    name: 'password'\n                });\n            }, {\n                prompt: strings().login + ': ',\n                name: 'login'\n            });\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        var body_terminal;\n        if (self.is('body,html')) {\n            // terminal already exists on body\n            if (self.hasClass('full-screen-terminal')) {\n                var data = self.find('> .terminal').data('terminal');\n                if (data) {\n                    return data;\n                }\n            }\n            body_terminal = self;\n            self = $('<div/>').appendTo('body');\n            $('body').addClass('full-screen-terminal');\n        } else if (self.data('terminal')) {\n            // terminal already exists\n            return self.data('terminal');\n        }\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        var public_api = $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                if (fire_event('onClear') !== false) {\n                    buffer.clear();\n                    lines.clear(function(i) {\n                        return get_node(i);\n                    });\n                    output[0].innerHTML = '';\n                    self.prop({scrollTop: 0});\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = fire_event('onExport');\n                user_export = user_export || {};\n                return $.extend({}, {\n                    focus: enabled,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines.data()),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                fire_event('onImport', [view]);\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines.import(clone(view.lines).filter(function(line) {\n                        return line[0];\n                    }));\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // :: if second argument is object is used as options\n            // -------------------------------------------------------------\n            exec: function(command, silent, options) {\n                function invoke(silent) {\n                    // commands may return promise from user code\n                    // it will resolve exec promise when user promise\n                    // is resolved\n                    var ret = commands(command, silent, true);\n                    unpromise(ret, function() {\n                        // reset prev command for push called after exec\n                        // so push didn't get name/prompt from exec command\n                        prev_command = null;\n                        d.resolve();\n                    }, function() {\n                        prev_command = null;\n                        d.reject();\n                    });\n                }\n                if (silent && typeof silent === 'object') {\n                    options = silent;\n                    silent = null;\n                }\n                var exec_settings = $.extend({\n                    deferred: null,\n                    silent: false,\n                    typing: false,\n                    delay: settings.execAnimationDelay\n                }, options);\n                if (silent === null) {\n                    silent = exec_settings.silent;\n                }\n                if (!is_deferred(exec_settings.deferred)) {\n                    exec_settings.deferred = new $.Deferred();\n                }\n                var d = exec_settings.deferred;\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent, options).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (paused) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, exec_settings]);\n                    } else if (exec_settings.typing && !silent) {\n                        var delay = exec_settings.delay;\n                        paused = true;\n                        var ret = self.typing('enter', delay, command, {\n                            delay: delay\n                        });\n                        ret.then(function() {\n                            paused = false;\n                            invoke(true);\n                        });\n                        d.then(function() {\n                            paused = false;\n                        });\n                    } else {\n                        invoke(silent);\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: main user authentication mechanism\n            // -------------------------------------------------------------\n            login: function(auth_callback, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth_callback)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else {\n                    var token = self.token(true);\n                    var login = self.login_name(true);\n                    if (token && login) {\n                        in_login = false;\n                        self.pause();\n                        validate_login(login, token, function(valid) {\n                            if (valid !== false) {\n                                if (is_function(success)) {\n                                    success();\n                                }\n                            } else {\n                                self.resume();\n                                authentication(auth_callback, infinite, success, error);\n                            }\n                        });\n                    } else {\n                        authentication(auth_callback, infinite, success, error);\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().slice(0, pos);\n                var cmd_strings = command.split(/\\s/);\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    echoCommand: false,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function escape(string) {\n                    if (quote === '\"') {\n                        string = string.replace(/\"/g, '\\\\\"');\n                    }\n                    if (!quote && options.escape) {\n                        string = string.replace(/([\"'() ])/g, '\\\\$1');\n                    }\n                    return string;\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (commands[i].match(/\\n/) && options.word) {\n                            warn('If you use commands with newlines you ' +\n                                 'should use word option for complete or' +\n                                 ' wordAutocomplete terminal option');\n                        }\n                        if (regex.test(commands[i])) {\n                            var match = escape(commands[i]);\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.slice(0, pos);\n                    var post = text.slice(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                // new API old is keep for backward compatibility\n                                if (options.echoCommand) {\n                                    echo_command();\n                                }\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.slice().reverse().join('\\t\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(escape(string), matched, sensitive);\n                        if (common) {\n                            replace(safe, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                var defer = $.Deferred();\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                        defer.resolve();\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return paused;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    paused = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.cmd-prompt').hidden();\n                    }\n                    fire_event('onPause');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function(silent) {\n                cmd_ready(function ready() {\n                    paused = false;\n                    if (enabled && terminals.front() === self) {\n                        command_line.enable(silent);\n                    }\n                    command_line.find('.cmd-prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    if (fire_event('onResume') !== false) {\n                        self.scroll_to_bottom();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Skip the next terminal animations\n            // -------------------------------------------------------------\n            skip: function() {\n                skip = true;\n            },\n            // -------------------------------------------------------------\n            // :: Stop skipping the next terminal animations\n            // -------------------------------------------------------------\n            skip_stop: function() {\n                skip = false;\n            },\n            // -------------------------------------------------------------\n            // :: Return if key animation is running\n            // -------------------------------------------------------------\n            animating: function() {\n                return animating;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (!num_chars || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (!num_rows) {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: Return size of the terminal instance\n            // -------------------------------------------------------------\n            geometry: function() {\n                var style = window.getComputedStyle(scroller[0]);\n                function padding(name) {\n                    return parseInt(style.getPropertyValue('padding-' + name), 10) || 0;\n                }\n                var left = padding('left');\n                var right = padding('right');\n                var top = padding('top');\n                var bottom = padding('bottom');\n                return {\n                    terminal: {\n                        padding: {\n                            left: left,\n                            right: right,\n                            top: top,\n                            bottom: bottom\n                        },\n                        width: old_width + left + right,\n                        height: old_height + top + bottom\n                    },\n                    density: pixel_density,\n                    char: char_size,\n                    cols: this.cols(),\n                    rows: this.rows()\n                };\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        self.enable(silent);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Convenient alias\n            // -------------------------------------------------------------\n            blur: function(silent) {\n                return this.focus(false, silent);\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze) {\n                        self.disable();\n                        frozen = true;\n                    } else {\n                        frozen = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return frozen;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!enabled && !frozen) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!silent && !enabled) {\n                            fire_event('onFocus');\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            enabled = true;\n                            if (!self.paused()) {\n                                command_line.enable(true);\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: function clear formatting cache if you don't longer need it\n            // :: cache is used if option useCache is set to true\n            // -------------------------------------------------------------\n            clear_cache: 'Map' in root ? function() {\n                buffer.clear_cache();\n                line_cache.clear();\n                command_line.clear_cache();\n                return self;\n            } : function() {\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && enabled) {\n                        ret = fire_event('onBlur');\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        enabled = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return enabled;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lengths = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lengths) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: better API than echo_command that supports animation\n            // -------------------------------------------------------------\n            enter: with_typing('enter', echo_command),\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, options) {\n                if (typeof string === 'string') {\n                    var locals;\n                    var defaults = {\n                        stay: false,\n                        typing: false,\n                        delay: 100\n                    };\n                    if (!is_object(options)) {\n                        options = {\n                            stay: options\n                        };\n                    }\n                    locals = $.extend(defaults, options);\n                    var d = new $.Deferred();\n                    when_ready(function ready() {\n                        function done() {\n                            if (settings.scrollOnEcho || bottom) {\n                                self.scroll_to_bottom();\n                            }\n                        }\n                        var bottom = self.is_bottom();\n                        if (locals.typing) {\n                            var delay = locals.delay;\n                            var p = self.typing('insert', delay, string, settings);\n                            p.then(function() {\n                                done();\n                                d.resolve();\n                            });\n                        } else {\n                            command_line.insert(string, settings.stay);\n                            done();\n                        }\n                    });\n                    if (locals.typing) {\n                        return d.promise();\n                    }\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: with_typing('prompt', function(prompt) {\n                if (is_function(prompt)) {\n                    command_line.prompt(function(callback) {\n                        return prompt.call(self, callback, self);\n                    });\n                } else {\n                    command_line.prompt(prompt);\n                }\n            }, function(prompt) {\n                interpreters.top().prompt = prompt;\n            }),\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return current mask value\n            // -------------------------------------------------------------\n            get_mask: function() {\n                return command_line.mask();\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // :: the output may contain user terminal formatting\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines.data();\n                } else {\n                    return lines.get_snapshot();\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        if (typeof settings.numChars !== 'undefined') {\n                            command_line.resize(settings.numChars);\n                            self.refresh();\n                        }\n                        fire_event('onResize');\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        self.clear_cache();\n                        var changed = new_num_chars !== num_chars;\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        if (changed) {\n                            command_line.resize(num_chars);\n                            self.refresh();\n                        }\n                        fire_event('onResize');\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal and invalidate cache\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    css(self[0], {\n                        '--char-width': char_size.width,\n                        '--pixel-density': pixel_density\n                    });\n                }\n                self.clear_cache();\n                if (command) {\n                    command_line.resize();\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                when_ready(function ready() {\n                    try {\n                        if (buffer.is_empty()) {\n                            return self;\n                        }\n                        var bottom = self.is_bottom();\n                        var scroll = (settings.scrollOnEcho && options.scroll) || bottom;\n                        var wrapper;\n                        // print all lines\n                        var first = true;\n                        var appending_to_partial = false;\n                        var partial = $();\n                        var snapshot;\n                        if (!options.update) {\n                            partial = self.find('.partial');\n                            snapshot = lines.get_partial();\n                        }\n                        // TODO: refactor buffer.flush(), there is way\n                        //       to many levels of abstractions in one place\n                        buffer.flush(function(data) {\n                            if (!data) {\n                                if (!partial.length) {\n                                    wrapper = $('<div/>');\n                                    snapshot = [];\n                                } else if (first) {\n                                    first = false;\n                                    appending_to_partial = true;\n                                    wrapper = partial;\n                                }\n                            } else if (is_function(data.finalize)) {\n                                if (options.update && data.raw === true && data.newline) {\n                                    // don't re-render html and jQuery/DOM nodes #759\n                                    return;\n                                }\n                                if (scroll) {\n                                    wrapper.find('img').on('load', function() {\n                                        self.scroll_to_bottom();\n                                    });\n                                }\n                                // this is finalize function from echo\n                                if (options.update) {\n                                    lines.update_snapshot(data.index, snapshot);\n                                    var selector = '> div[data-index=' + data.index + ']';\n                                    var node = output.find(selector);\n                                    if (node.html() !== wrapper.html()) {\n                                        node.replaceWith(wrapper);\n                                    }\n                                } else {\n                                    wrapper.appendTo(output);\n                                    if (!partial.length) {\n                                        lines.make_snapshot(snapshot);\n                                    }\n                                }\n                                wrapper.attr('data-index', data.index);\n                                appending_to_partial = !data.newline;\n                                wrapper.toggleClass('partial', appending_to_partial);\n                                if (appending_to_partial) {\n                                    partial = wrapper;\n                                }\n                                data.finalize(wrapper);\n                            } else {\n                                var line = data.line;\n                                var div;\n                                if (typeof data.raw === 'string') {\n                                    if (appending_to_partial) {\n                                        snapshot[snapshot.length - 1] += data.raw;\n                                    } else {\n                                        snapshot.push(data.raw);\n                                    }\n                                }\n                                if (appending_to_partial) {\n                                    div = wrapper.children().last().append(line);\n                                    appending_to_partial = false;\n                                } else {\n                                    div = $('<div/>').html(line);\n                                    if (data.newline) {\n                                        div.addClass('cmd-end-line');\n                                    }\n                                    wrapper.append(div);\n                                }\n                                // width = '100%' does some weird extra magic\n                                // that makes the height correct. Any other\n                                // value doesn't work.\n                                div.css('width', '100%');\n                            }\n                        });\n                        partial = self.find('.partial');\n                        var last_row;\n                        if (partial.length === 0) {\n                            css(command_line[0], {\n                                '--prompt-offset': '',\n                                top: ''\n                            });\n                            command_line.__set_prompt_margin(0);\n                            last_row = self.find('.terminal-output div:last-child' +\n                                                 ' div:last-child');\n                            // check if the div is parital fix #695\n                            if (last_row.css('display') === 'inline-block') {\n                                last_row.css({\n                                    width: '100%',\n                                    display: ''\n                                });\n                            }\n                        } else if (snapshot.length && snapshot[snapshot.length - 1]) {\n                            var len = $.terminal.length(snapshot[snapshot.length - 1]);\n                            len %= self.cols();\n                            last_row = partial.children().last();\n                            var last_row_rect = last_row[0].getBoundingClientRect();\n                            // Shift command prompt up one line and to the right\n                            // enough so that it appears directly next to the\n                            // partially constructed output line\n                            var size = is_ch_unit_supported ? len + 'ch' : len + 'px';\n                            css(command_line[0], {\n                                'top': (-last_row_rect.height / pixel_density) + 'px',\n                                '--prompt-offset': size\n                            });\n                            command_line.__set_prompt_margin(len);\n                        }\n                        limit_lines();\n                        fire_event('onFlush');\n                        var cmd_cursor = self.find('.cmd-cursor');\n                        var offset = self.find('.cmd').offset();\n                        var self_offset = self.offset();\n                        self.stopTime('flush').oneTime(1, 'flush', function() {\n                            css(self[0], {\n                                '--terminal-height': self.height(),\n                                '--terminal-x': offset.left - self_offset.left,\n                                '--terminal-y': offset.top - self_offset.top,\n                                '--terminal-scroll': self.prop('scrollTop')\n                            });\n                            if (enabled) {\n                                // Firefox won't reflow the cursor automatically, so\n                                // hide it briefly then reshow it\n                                cmd_cursor.hide();\n                                self.oneTime(1, 'flush', function() {\n                                    cmd_cursor.show();\n                                });\n                            }\n                        });\n                        wrapper.on_load({\n                            done: function() {\n                                if (scroll) {\n                                    self.scroll_to_bottom();\n                                }\n                            }\n                        });\n                    } catch (e1) {\n                        if (is_function(settings.exceptionHandler)) {\n                            try {\n                                settings.exceptionHandler.call(\n                                    self,\n                                    e1,\n                                    'TERMINAL (Flush)'\n                                );\n                            } catch (e2) {\n                                settings.exceptionHandler = $.noop;\n                                alert_exception('[exceptionHandler]', e2);\n                            }\n                        } else {\n                            alert_exception('[Flush]', e1);\n                        }\n                    } finally {\n                        buffer.clear();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, value, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length() + line; // yes +\n                    }\n                    if (!lines.valid_index(line)) {\n                        self.error('Invalid line number ' + line);\n                    } else if (value === null) {\n                        lines.update(line, null);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        value = preprocess_value(value, {\n                            update: true,\n                            line: line\n                        });\n                        if (value === false) {\n                            return self;\n                        }\n                        unpromise(value, function(value) {\n                            var ret = prepare_render(value, options);\n                            if (ret) {\n                                value = ret[0];\n                                options = ret[1];\n                            }\n                            options = lines.update(line, value, options);\n                            var next = process_line({\n                                value: value,\n                                index: line,\n                                options: options\n                            });\n                            // process_line can return a promise\n                            // value is function that resolve to promise\n                            unpromise(next, function() {\n                                // trigger flush even if next is undefined\n                                self.flush({\n                                    scroll: false,\n                                    update: true\n                                });\n                            });\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length() - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have options\n            // :: * flush - indicate that arg should be send to DOM\n            // :: * raw - indicate if it should handle input as html\n            // :: * finalize - function call with container div\n            // :: * keepWords - inform how to wrap text\n            // :: * formatters - inform function if it should use formatters\n            // ::   on input string - good to prevent XSS when you want\n            // ::   advanced server side controling of terminal\n            // :: you can echo: promise, function, strings array or string\n            // -------------------------------------------------------------\n            echo: function(arg, options, deferred) {\n                var arg_defined = arguments.length > 0;\n                var d = deferred || new $.Deferred();\n                function cont() {\n                    echo_promise = false;\n                    var original = echo_delay;\n                    echo_delay = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.echo.apply(self, original[i]);\n                    }\n                }\n                function error(e) {\n                    cont();\n                    display_exception(e, 'ECHO', true);\n                }\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            exec: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            unmount: $.noop,\n                            delay: settings.execAnimationDelay,\n                            ansi: false,\n                            typing: false,\n                            externalPause: true,\n                            keepWords: false,\n                            invokeMethods: settings.invokeMethods,\n                            onClear: null,\n                            formatters: true,\n                            allowedAttributes: settings.allowedAttributes,\n                            newline: true\n                        }, options || {});\n                        var should_pause = settings.externalPause && locals.externalPause;\n                        // finalize function is passed around and invoked\n                        // in terminal::flush after content is added to DOM\n                        (function(finalize) {\n                            if (is_node(arg)) {\n                                return;\n                            }\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                if (locals.ansi) {\n                                    div.addClass('ansi');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize.call(self, div);\n                                    }\n                                    div.on_load({\n                                        error: function(element) {\n                                            element.replaceWith(use_broken_image);\n                                        },\n                                        done: function(has_elements) {\n                                            if (has_elements && should_pause) {\n                                                self.resume();\n                                            }\n                                        },\n                                        load: function(has_elements) {\n                                            if (has_elements && should_pause) {\n                                                self.pause();\n                                            }\n                                        }\n                                    });\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (!buffer.empty()) {\n                                self.flush();\n                            }\n                        }\n                        if (fire_event('onBeforeEcho', [arg]) === false) {\n                            return;\n                        }\n                        if (locals.typing) {\n                            if (typeof arg !== 'string') {\n                                return d.reject('echo: Typing animation require string' +\n                                                ' or promise that resolve to string');\n                            }\n                            if (typeof locals.delay !== 'number' || isNaN(locals.delay)) {\n                                return d.reject('echo: Invalid argument, delay need to' +\n                                                ' be a number');\n                            }\n                            var p = self.typing('echo', locals.delay, arg, locals);\n                            p.then(function() {\n                                d.resolve();\n                            });\n                            return;\n                        }\n                        var value;\n                        if (typeof arg === 'function') {\n                            value = arg.bind(self);\n                        } else if (typeof arg === 'undefined') {\n                            if (arg_defined) {\n                                value = String(arg);\n                            } else {\n                                value = '';\n                            }\n                        } else {\n                            var ret = preprocess_value(arg);\n                            if (ret === false) {\n                                return self;\n                            }\n                            value = ret;\n                        }\n                        if (is_promise(value)) {\n                            echo_promise = true;\n                        }\n                        unpromise(value, function(value) {\n                            if (is_promise(ret) && value === false) {\n                                return;\n                            }\n                            if (render(value, locals)) {\n                                return self;\n                            }\n                            var index = lines.length();\n                            var last_newline = lines.has_newline();\n                            if (!last_newline) {\n                                index--;\n                            }\n                            if (!locals.newline && value[value.length - 1] === '\\n') {\n                                // This adjusts the value, so that when it updates or\n                                // refresh the lines list it does the right thing.\n                                value = value.slice(0, -1);\n                                locals.newline = true;\n                            }\n                            var next = process_line({\n                                value: value,\n                                options: locals,\n                                index: index\n                            });\n                            // queue async functions in echo\n                            if (is_promise(next)) {\n                                echo_promise = true;\n                            }\n                            lines.push([value, locals]);\n                            unpromise(next, function() {\n                                // extended commands should be processed only\n                                // once in echo and not on redraw\n                                if (locals.flush) {\n                                    self.flush();\n                                    fire_event('onAfterEcho', [arg]);\n                                }\n                                cont();\n                            }, error);\n                        }, error);\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                var is_animation = options && options.typing;\n                if (echo_promise) {\n                    var args = [arg, options];\n                    if (is_animation) {\n                        args.push(d);\n                    }\n                    echo_delay.push(args);\n                } else {\n                    echo(arg);\n                }\n                if (is_animation) {\n                    return d.promise();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            typing: function(type, delay, string, options) {\n                var d = new $.Deferred();\n                var settings;\n                var finish;\n                if (typeof options === 'object') {\n                    finish = options.finalize || $.noop;\n                    settings = $.extend({}, options, {\n                        delay: delay,\n                        finalize: done\n                    });\n                } else {\n                    finish = options || $.noop;\n                    settings = {\n                        delay: delay,\n                        finalize: done\n                    };\n                }\n                function done() {\n                    d.resolve();\n                    if (is_function(finish)) {\n                        finish.apply(self, arguments);\n                    }\n                }\n                var animations = ['prompt', 'echo', 'enter', 'insert'];\n                function valid_animation() {\n                    return animations.indexOf(type) >= 0;\n                }\n                when_ready(function ready() {\n                    if (valid_animation()) {\n                        if (type === 'prompt') {\n                            typed_prompt(string, settings);\n                        } else if (type === 'echo') {\n                            typed_message(string, settings);\n                        } else if (type === 'enter') {\n                            with_prompt(self.get_prompt(), function(prompt) {\n                                typed_enter(prompt, string, settings);\n                            }, self);\n                        } else if (type === 'insert') {\n                            with_prompt(self.get_prompt(), function(prompt) {\n                                typed_insert(prompt, string, settings);\n                            }, self);\n                        }\n                    } else {\n                        d.reject('Invalid type only `echo` and `prompt` are supported');\n                    }\n                });\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;terminal-error]');\n                    return '[[;;;terminal-error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    }).catch(make_label_error('Echo Error'));\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('terminal-exception terminal-message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    self.echo(format_stack_trace(e.stack), {\n                        finalize: function(div) {\n                            div.addClass('terminal-exception terminal-stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (self.prop) { // work with jQuery > 1.6\n                    if (amount > scroller.prop('scrollTop') && amount > 0) {\n                        scroller.prop('scrollTop', 0);\n                    }\n                    pos = scroller.prop('scrollTop');\n                    scroller.scrollTop(pos + amount);\n                } else {\n                    if (amount > scroller.prop('scrollTop') && amount > 0) {\n                        scroller.prop('scrollTop', 0);\n                    }\n                    pos = scroller.prop('scrollTop');\n                    scroller.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local, max_size) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1, max_size).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                var options;\n                if (typeof arguments[1] === 'object') {\n                    options = $.extend({\n                        typing: false,\n                        delay: settings.execAnimationDelay,\n                        success: $.noop,\n                        cancel: $.noop\n                    }, arguments[1]);\n                } else {\n                    options = {\n                        typing: false,\n                        success: success || $.noop,\n                        cancel: cancel || $.noop\n                    };\n                }\n                if (options.typing) {\n                    var prompt = self.get_prompt();\n                    options.typing = false;\n                    return self.typing('prompt', options.delay, message).then(function() {\n                        return self.set_prompt(prompt).read(message, options);\n                    });\n                }\n                // return from read() should not pause terminal\n                force_awake = true;\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(options.success)) {\n                        options.success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(options.cancel)) {\n                                options.cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                if (is_function(options.onReady)) {\n                    options.onReady.call(self);\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // name the interpreter from last command\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = paused;\n                    function init() {\n                        fire_event('onPush', [top, interpreters.top()]);\n                        prepare_top_interpreter();\n                    }\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            fire_event('onPop', [top, null]);\n                        }\n                        global_logout();\n                        fire_event('onExit');\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    // restore mask\n                    self.set_mask(top.mask);\n                    if (!silent) {\n                        fire_event('onPop', [current, top]);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                command_line.invoke_key(shortcut);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.extend(\n                            {},\n                            terminal_init_keymap,\n                            $.omap(keymap || {}, function(key, fn) {\n                                if (!terminal_init_keymap[key]) {\n                                    return fn.bind(self);\n                                }\n                                return function(e, original) {\n                                    // new keymap function will get default as 2nd arg\n                                    return fn.call(self, e, function() {\n                                        return terminal_init_keymap[key](e, original);\n                                    });\n                                };\n                            })\n                        );\n                        command_line.keymap(null).keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!terminal_init_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return terminal_init_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    self.resizer('unbind');\n                    self.touch_scroll('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    pixel_resizer.resizer('unbind').remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill, .terminal-font')\n                        .remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        if (visibility_observer.unobserve) {\n                            visibility_observer.unobserve(self[0]);\n                        } else {\n                            clearInterval(visibility_observer);\n                        }\n                    }\n                    var scroll_marker = self.find('.terminal-scroll-marker');\n                    if (is_bottom_observer) {\n                        is_bottom_observer.unobserve(scroll_marker[0]);\n                    }\n                    scroll_marker.remove();\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    if (is_mobile) {\n                        self.off([\n                            'touchstart.terminal',\n                            'touchmove.terminal',\n                            'touchend.terminal'\n                        ].join(' '));\n                    }\n                    output.remove();\n                    scroller.remove();\n                    if (body_terminal) {\n                        var $body = $(body_terminal);\n                        if ($body.attr('class') === 'full-screen-terminal') {\n                            $body.removeAttr('class');\n                        } else {\n                            $body.removeClass('full-screen-terminal');\n                        }\n                        self.remove();\n                    }\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: ref: https://stackoverflow.com/a/18927969/387194\n            // -------------------------------------------------------------\n            scroll_to: function(elem) {\n                var scroll = scroller.scrollTop() - self.offset().top +\n                    $(elem).offset().top;\n                scroller.scrollTop(scroll);\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (self.prop) {\n                    scrollHeight = scroller.prop('scrollHeight');\n                } else {\n                    scrollHeight = scroller.attr('scrollHeight');\n                }\n                scroller.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else if (typeof is_bottom_detected === 'boolean') {\n                    return is_bottom_detected;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    scroll_height = scroller[0].scrollHeight;\n                    scroll_top = scroller[0].scrollTop;\n                    height = scroller[0].offsetHeight;\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: create terminal object clone, used by pipe\n            // -------------------------------------------------------------\n            duplicate: function() {\n                var copy = $(self);\n                return $.extend(copy, public_api);\n            },\n            // -------------------------------------------------------------\n            // :: return output flush buffer\n            // -------------------------------------------------------------\n            get_output_buffer: function(options) {\n                var settings = $.extend({\n                    html: false\n                }, options);\n                var result = [];\n                var append = false;\n                buffer.forEach(function(data) {\n                    if (data) {\n                        if (is_function(data.finalize)) {\n                            append = !data.newline;\n                        } else {\n                            var output;\n                            if (settings.html) {\n                                output = data.line;\n                            } else {\n                                output = data.raw;\n                            }\n                            if (append) {\n                                var last = result.length - 1;\n                                result[last] += output;\n                            } else {\n                                result.push(output);\n                            }\n                        }\n                    }\n                });\n                if (settings.html) {\n                    return result.map(function(line) {\n                        return '<div>' + line + '</div>';\n                    }).join('\\n');\n                }\n                return result.join('\\n');\n            },\n            // -------------------------------------------------------------\n            // :: clear flush buffer\n            // -------------------------------------------------------------\n            clear_buffer: function() {\n                buffer.clear();\n                return self;\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        });\n        $.extend(self, public_api);\n        // -----------------------------------------------------------------\n        // :: INIT CODE\n        // -----------------------------------------------------------------\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        self.data('terminal', self);\n        // synchronize the echo calls (used for async functions) that need\n        // to be called in order\n        var echo_delay = [];\n        var echo_promise = false;\n        // var names = []; // stack if interpreter names\n        var prev_command; // used for name on the terminal if not defined\n        var prev_exec_cmd;\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var force_awake = false; // flag used to don't pause when user return read() call\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var animating = false; // true on typing animation\n        var skip = false; // true if skipping currently\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var cmd_ready = ready(command_queue);\n        var is_bottom_detected;\n        var is_bottom_observer;\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        if (typeof settings.width === 'number') {\n            self.width(settings.width);\n        }\n        if (typeof settings.height === 'number') {\n            self.height(settings.height);\n        }\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        // ---------------------------------------------------------------------\n        // :: FormatBuffer is used to to buffer the lines that echoed\n        // :: it have append function that have 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: actuall echo to the terminal happen when calling flush\n        // ---------------------------------------------------------------------\n        var buffer = new FormatBuffer(function(options) {\n            return {\n                linksNoReferrer: settings.linksNoReferrer,\n                linksNoFollow: settings.linksNoFollow,\n                anyLinks: settings.anyLinks,\n                charWidth: char_size.width,\n                useCache: settings.useCache,\n                escape: false,\n                allowedAttributes: options.allowedAttributes || []\n            };\n        });\n        var lines = new OutputLines(function() {\n            return settings;\n        });\n        var storage = new StorageHelper(settings.memory);\n        var enabled = settings.enabled;\n        var frozen = false;\n        var paused = false;\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var scroller = $('<div class=\"terminal-scroller\"/>').appendTo(self);\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(scroller);\n        $(broken_image).hide().appendTo(wrapper);\n        var font_resizer = $('<div class=\"terminal-font\">&nbsp;</div>').appendTo(self);\n        var pixel_resizer = $('<div class=\"terminal-pixel\"/>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(scroller);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        var pixel_density = get_pixel_size();\n        var char_size = get_char_size(self);\n        // this is needed when terminal have selector with --size that is not\n        // bare .terminal so fake terminal will not get the proper size #602\n        var need_char_size_recalculate = !terminal_ready(self);\n        // before login event\n        if (settings.login && fire_event('onBeforeLogin') === false) {\n            autologin = false;\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (is_array(init_interpreter)) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n                self.scroll_to_bottom();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function get_pixel_size() {\n            var rect = pixel_resizer[0].getBoundingClientRect();\n            return rect.width || 1;\n        }\n        // -------------------------------------------------------------------------------\n        function blur_terminal() {\n            old_enabled = enabled;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        // -------------------------------------------------------------------------------\n        function stringify_value(value) {\n            if (is_function(value)) {\n                value = value();\n            }\n            if (value && is_function(value.then)) {\n                return value.then(stringify_value);\n            }\n            if (get_type(value) !== 'string') {\n                if (is_function(settings.parseObject)) {\n                    var ret = settings.parseObject(value);\n                    if (get_type(ret) === 'string') {\n                        value = ret;\n                    }\n                } else if (is_array(value)) {\n                    value = $.terminal.columns(value, self.cols(), settings.tabs);\n                } else {\n                    value = String(value);\n                }\n            }\n            return value;\n        }\n        // -------------------------------------------------------------------------------\n        function context_callback_proxy(fn) {\n            if (fn.proxy) {\n                return fn;\n            }\n            var wrapper = function(callback) {\n                return fn.call(self, callback, self);\n            };\n            wrapper.proxy = true;\n            return wrapper;\n        }\n        // -------------------------------------------------------------------------------\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            function echo_image(image) {\n                self.echo('<img src=\"' + image + '\"/>', {raw: true});\n            }\n            function data_uri(blob) {\n                var URL = window.URL || window.webkitURL;\n                return URL.createObjectURL(blob);\n            }\n            function echo(object, ignoreEvents) {\n                if (!ignoreEvents) {\n                    var event = {\n                        target: self\n                    };\n                    if (typeof object === 'string') {\n                        event.text = object;\n                    } else if (object instanceof Blob) {\n                        event.image = data_uri(object);\n                    }\n                    var ret = fire_event('onPaste', [event]);\n                    if (ret) {\n                        if (is_function(ret.then || ret.done)) {\n                            return (ret.then || ret.done).call(ret, function(ret) {\n                                echo(ret, true);\n                            });\n                        } else {\n                            echo(ret, true);\n                        }\n                    } else if (ret !== false) {\n                        echo(event.image || event.text, true);\n                    }\n                } else if (object instanceof Blob) {\n                    echo_image(data_uri(object));\n                } else if (typeof object === 'string') {\n                    if (object.match(/^(data:|blob:)/)) {\n                        echo_image(object);\n                    } else {\n                        self.insert(object);\n                    }\n                }\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                echo(blob);\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(function(text) {\n                                    echo(text.replace(/\\r/g, ''));\n                                });\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        echo(text.replace(/\\r/g, ''));\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var terminal_init_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(interpreter) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                interpreter.completion = 'settings';\n            }\n            var prompt = settings.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt);\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: terminal_init_keymap\n            }, interpreter));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                tabindex: settings.tabindex,\n                mobileDelete: settings.mobileDelete,\n                mobileIngoreAutoSpace: settings.mobileIngoreAutoSpace,\n                prompt: global_login_fn ? false : prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                onPaste: settings.onPaste,\n                width: '100%',\n                enabled: false,\n                charWidth: char_size.width,\n                keydown: key_down,\n                keymap: terminal_init_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                repeatTimeoutKeys: settings.repeatTimeoutKeys,\n                allowedAttributes: settings.allowedAttributes,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onPositionChange: function() {\n                    var args = [].slice.call(arguments);\n                    make_cursor_visible();\n                    fire_event('onPositionChange', args);\n                },\n                onCommandChange: function(command) {\n                    // resize is not triggered when insert called just after init\n                    //  and scrollbar appear\n                    if (old_width !== fill.width()) {\n                        // resizer handler will update old_width\n                        self.resizer();\n                    }\n                    fire_event('onCommandChange', [command]);\n                    make_cursor_visible();\n                },\n                commands: commands\n            });\n            function disable(e) {\n                if (is_mobile) {\n                    return;\n                }\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume, it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                (function() {\n                    self.addClass('terminal-mobile');\n                    var start;\n                    var move;\n                    var enabled;\n                    var SENSITIVITY = 3;\n                    var clip = command_line.clip();\n                    var HOLD_TIME = 200;\n                    var timer;\n                    clip.$node.off('touchstart.cmd');\n                    self.on('touchstart.terminal', function(e) {\n                        e = e.originalEvent;\n                        window.touch_event = e;\n                        if (e.target.tagName.toLowerCase() === 'a') {\n                            return;\n                        }\n                        if (!frozen && e.touches.length === 1) {\n                            enabled = self.enabled();\n                            var point = e.touches[0];\n                            start = {\n                                x: point.clientX,\n                                y: point.clientY\n                            };\n                            timer = setTimeout(function() {\n                                start = null;\n                            }, HOLD_TIME);\n                        }\n                    }).on('touchmove.terminal', function(e) {\n                        if (e.touches.length === 1 && start) {\n                            var point = e.touches[0];\n                            var diff_x = Math.abs(point.clientX - start.x);\n                            var diff_y = Math.abs(point.clientY - start.y);\n                            if (diff_x > SENSITIVITY || diff_y > SENSITIVITY) {\n                                move = true;\n                            }\n                        }\n                    }).on('touchend.terminal', function() {\n                        if (start) {\n                            clearTimeout(timer);\n                            if (!move) {\n                                if (!enabled) {\n                                    clip.focus();\n                                    self.focus();\n                                } else {\n                                    clip.blur();\n                                    self.disable();\n                                }\n                            }\n                        }\n                        move = false;\n                        start = null;\n                    });\n                })();\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // context is used to check if terminal should not scroll to bottom\n                // after right click on  e.g. img, canvas, a and then click to hide\n                // the menu. The problem is that right click on those elements don't\n                // move the textarea to show proper context menu like save as on images\n                // or open on links. See #644 bug\n                var was_ctx_event;\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-scroller') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.cmd-prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            textarea.focus();\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    var ignore_elements = '.terminal-output textarea,' +\n                        '.terminal-output input';\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill, pixel_density)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if (was_ctx_event) {\n                            was_ctx_event = false;\n                            return;\n                        }\n                        if ($target && $target.closest(ignore_elements).length) {\n                            if (enabled) {\n                                self.disable();\n                            }\n                        } else if (get_selected_html() === '' && $target) {\n                            if (++count === 1) {\n                                if (!frozen) {\n                                    if (!enabled) {\n                                        self.focus();\n                                        self.scroll_to_bottom();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var $clip = command_line.clip().$node;\n                    function is_context_event(e) {\n                        return e.type === 'mousedown' && e.buttons === 2 ||\n                            e.type === 'contextmenu';\n                    }\n                    var event_name;\n                    if ('oncontextmenu' in window) {\n                        event_name = 'contextmenu.terminal';\n                    } else {\n                        event_name = 'mousedown.terminal';\n                    }\n                    self.on(event_name, function(e) {\n                        was_ctx_event = get_selected_html() === '' &&\n                            is_context_event(e) &&\n                            !e.ctrlKey;\n                        if (was_ctx_event) {\n                            var $target = $(e.target);\n                            if ($target.is('img,value,audio,object,canvas,a')) {\n                                return;\n                            }\n                            if (!self.enabled()) {\n                                self.enable();\n                            }\n                            var cmd_offset = command_line.offset();\n                            var cmd_rect = command_line[0].getBoundingClientRect();\n                            var self_offset = self.offset();\n                            var top_limit = self_offset.top - cmd_offset.top;\n                            var top = Math.max(e.pageY - cmd_offset.top - 20, top_limit);\n                            var left = e.pageX - cmd_offset.left - 20;\n                            var height = 4 * 14;\n                            var width = 5 * 14;\n                            var rect = self[0].getBoundingClientRect();\n                            // we need width without scrollbar\n                            var content_width = fill.outerWidth() * pixel_density;\n                            // fix jumping when click near bottom or left edge #592\n                            var diff_h = (top + cmd_rect.top + height);\n                            diff_h = diff_h - rect.height - rect.top;\n                            var diff_w = (left + cmd_rect.left + width);\n                            // in Chrome scrollbar is added even when width\n                            // of textarea is smaller, adding 1px solved the issue\n                            diff_w = diff_w - content_width - rect.left;\n                            if (diff_h > 0) {\n                                height -= Math.ceil(diff_h);\n                            }\n                            if (diff_w > 0) {\n                                width -= Math.ceil(diff_w);\n                            }\n                            $clip.attr('style', [\n                                style_prop('left', left, true),\n                                style_prop('top', top, true),\n                                style_prop('width', width, true),\n                                style_prop('height', height, true)\n                            ].join(';'));\n                            if (!$clip.is(':focus')) {\n                                $clip.focus();\n                            }\n                            self.stopTime('textarea');\n                            self.oneTime(100, 'textarea', function() {\n                                var props = {\n                                    left: '',\n                                    top: '',\n                                    width: '',\n                                    height: ''\n                                };\n                                if (!is_css_variables_supported) {\n                                    var in_line = self.find('.cmd .cmd-cursor-line')\n                                        .prevUntil('.cmd-prompt').length;\n                                    props.top = in_line * 14 + 'px';\n                                }\n                                $clip.css(props);\n                            });\n                            self.stopTime('selection');\n                            self.everyTime(20, 'selection', function() {\n                                if ($clip[0].selection !== $clip[0].value) {\n                                    if (get_textarea_selection($clip[0])) {\n                                        clear_textarea_selection($clip[0]);\n                                        select(\n                                            self.find('.terminal-output')[0],\n                                            self.find('.cmd div:last-of-type')[0]\n                                        );\n                                        self.stopTime('selection');\n                                    }\n                                }\n                            });\n                        }\n                    });\n                })();\n                self.on('scroll', function() {\n                    var $textarea = self.find('textarea');\n                    var rect = self[0].getBoundingClientRect();\n                    var height = self[0].scrollHeight;\n                    var scrollTop = scroller.scrollTop();\n                    var diff = height - (scrollTop + rect.height);\n                    // if scrolled to bottom top need to be aligned with cursor line\n                    // done by CSS file using css variables\n                    if (diff === 0) {\n                        $textarea.css('top', '');\n                    } else {\n                        $textarea.css('top', -diff);\n                    }\n                });\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.terminal-exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href, self.cols());\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (enabled) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('charWidth', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    var new_pixel_density = get_pixel_size();\n                    css(self[0], {\n                        '--pixel-density': new_pixel_density\n                    });\n                    if (need_char_size_recalculate) {\n                        need_char_size_recalculate = !terminal_ready(self);\n                        if (!need_char_size_recalculate) {\n                            char_size = get_char_size(self);\n                            calculate_char_size();\n                        }\n                    }\n                    // prevent too many calculations in IE\n                    if (old_height !== height ||\n                        old_width !== width ||\n                        pixel_density !== new_pixel_density) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                    pixel_density = new_pixel_density;\n                }\n            }\n            function create_resizers() {\n                var options = {\n                    prefix: 'terminal-'\n                };\n                self.resizer('unbind').resizer(resize, options);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                }, options);\n                pixel_resizer.resizer('unbind').resizer(function() {\n                    pixel_density = get_pixel_size();\n                    self.resize();\n                }, options);\n            }\n            function bottom_detect(intersections) {\n                is_bottom_detected = intersections[0].intersectionRatio === 1;\n            }\n            function create_bottom_detect() {\n                if (window.IntersectionObserver) {\n                    var top = $('<div class=\"terminal-scroll-marker\"/>')\n                        .appendTo(scroller);\n                    var marker = top;\n                    if (settings.scrollBottomOffset !== -1) {\n                        var style = style_prop('height', settings.scrollBottomOffset);\n                        marker = $('<div style=\"' + style + '\"/>').appendTo(top);\n                    }\n                    is_bottom_observer = new IntersectionObserver(bottom_detect, {\n                        root: scroller[0],\n                        rootMargin: '0px',\n                        threshold: 1.0\n                    });\n                    is_bottom_observer.observe(marker[0]);\n                }\n            }\n            // this observer can be added imedietely even if terminal is not in the DOM\n            // because both of the elements (root and target) are in same fragment\n            create_bottom_detect();\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    if (visibility_observer.unobserve) {\n                        visibility_observer.unobserve(self[0]);\n                    } else {\n                        clearInterval(visibility_observer);\n                    }\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (was_enabled && !visible) {\n                    self.disable();\n                }\n                if (visible) {\n                    create_resizers();\n                } else {\n                    // hide terminal content until it's resized (and num chars calculated)\n                    wrapper.css('visibility', 'hidden');\n                }\n                function visibility_checker() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                        wrapper.css('visibility', '');\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                        wrapper.css('visibility', 'hidden');\n                    }\n                }\n                if (window.IntersectionObserver && self.css('position') !== 'fixed') {\n                    visibility_observer = new IntersectionObserver(visibility_checker, {\n                        root: null\n                    });\n                    visibility_observer.observe(self[0]);\n                } else {\n                    visibility_observer = setInterval(visibility_checker, 100);\n                }\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            // this observer need to be added when terminal is in the DOM\n                            observe_visibility();\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (enabled && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec, options) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                var defer = $.Deferred();\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (paused) {\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2], options).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2], options).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            if (!hash.match(/\\[/)) {\n                                // fix the hash to look like array if it's not\n                                replace_hash(hash_commands);\n                            }\n                            var i = 0;\n                            var options = {\n                                typing: settings.execAnimation,\n                                delay: settings.execAnimationDelay\n                            };\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec, options).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (ret === true) {\n                            return;\n                        }\n                        if ((have_scrollbar() || ret === false) && !event.ctrlKey) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    scroller.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n                scroller.touch_scroll(function(event) {\n                    var delta = event.current.clientY - event.previous.clientY;\n                    var ret;\n                    var interpreter = interpreters.top();\n                    if (is_function(interpreter.touchscroll)) {\n                        ret = interpreter.touchscroll(event, delta, self);\n                    } else if (is_function(settings.touchscroll)) {\n                        ret = settings.touchscroll(event, delta, self);\n                    }\n                    css(self[0], {\n                        '--terminal-scroll': self.prop('scrollTop')\n                    });\n                    if (ret === true) {\n                        return;\n                    }\n                    return false;\n                });\n            })();\n        }); // make_interpreter\n        return self;\n    }; // terminal plugin\n});\n"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","slice","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","self","window","factory","undefined","root","Error","define","amd","jquery","wcwidth","module","exports","jQuery","require","$","cash","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","item","bind","clone","Map","clear","forEach","value","delete","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","debounce","FUNC_ERROR_TEXT","isObject","type","now","func","wait","options","nativeMax","Math","max","nativeMin","min","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","is","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","focusNode","setSelectionRange","select","make_callback_plugin","factory_settings","init","noop","destroy","name","callback","trigger","unbind","data_name","$this","fireWith","data","has","removeData","resizer","settings","prefix","first","on","ResizeObserver","observe","iframe","addClass","appendTo","contentWindow","observer","unobserve","find","off","touch_scroll","origin","previous","originalEvent","tagName","touches","current","preventDefault","on_load","load","done","defers","defer","Deferred","reject","when","then","jquery_resolve","promise","unpromise","is_promise","catch","promises","filter","always","is_fully_in_viewport","is_visible","node","container","box","getBoundingClientRect","viewport","top","bottom","height","IntersectionObserver","item_observer","entries","isIntersecting","ratio","entity_re","combine_chr_re","astral_symbols_re","emoji_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","format_begin_re","format_start_re","format_end_re","self_closing_re","color_re","url_re","url_nf_re","email_re","url_full_re","email_full_re","command_re","extended_command_re","format_exec_split_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","broken_image","use_broken_image","animation_supported","animation","domPrefixes","elm","createElement","style","animationName","agent","is_IE","is_IEMobile","is_ch_unit_supported","div","width","is_css_variables_supported","CSS","supports","is_android","is_key_native","KeyboardEvent","proto","getOwnPropertyDescriptor","is_browser","is_mobile","check","substr","platform","maxTouchPoints","vendor","opera","ch_unit_bug","base","ch","space","abs","css","obj","isPlainObject","keys","setProperty","getPropertyValue","style_prop","important","props","prop","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","terminal","Exception","message","exception_message","generate_id","firstPart","random","secondPart","scrollbar_event","pixel_density","left","offset","max_width","outerWidth","clientX","fileName","Cycle","rotate","skip","defined","append","front","restart","Boolean","Stack","is_array","size","pop","concat","WorkerCache","validation","action","onCache","_onCache","_action","_validation","_cache","validate","valid","History","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","next","old","purge","enable","disable","toggle","OutputLines","_settings","_lines","_snapshot","make_snapshot","snapshot","get_partial","update_snapshot","limit_snapshot","clear_snapshot","get_snapshot","acc","arr","some","import","has_newline","last_line","newline","line","onClear","unmount","len","update","valid_index","render","cols","lines_to_show","outputLimit","pivot","FormatBuffer","_options","_format_cache","_output_buffer","NEW_LINE","raw","use_cache","useCache","empty","raw_lines","formatted","finalize","clear_cache","is_empty","with_prompt","prompt","context","escape_brackets","deferred","string","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","history","onPositionChange","onCommandChange","inputStyle","mobileDelete","onPaste","clickTimeout","holdTimeout","holdRepeatTimeout","mobileIngoreAutoSpace","repeatTimeoutKeys","tabindex","tabs","mobile_ignore_key","maybe_data","id","wrapper","cursor_line","clip","$node","autocapitalize","autocorrect","spellcheck","insertAfter","val","html","blur","removeAllRanges","before","num_chars","char_width","last_rendered_prompt","prompt_last_line","just_prompt_len","prompt_offset","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","restart_animation","paste_count","line_marker","line_marker_re","empty_marker_re","get_char_pos","closest","parent","prevAll","prevUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","ie_key_fix","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","reversed_keycodes","which","keymap","default_keymap","ALT+D","delete_forward","clipboard","HOLD+ALT+D","hold","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","HOLD+ARROWUP","up_arrow","ARROWUP","CTRL+ARROWUP","prev_history","CTRL+P","ARROWDOWN","down_arrow","HOLD+ARROWDOWN","CTRL+N","next_history","CTRL+ARROWDOWN","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","bare_text","F12","return_true","END","CTRL+END","CTRL+E","HOME","home","CTRL+HOME","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","get_selected_html","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","delete_character_forward","delete_word_forward","substring","m","delete_character_backward","delete_word_backward","isenabled","paste","fix_textarea","first_up_history","have_newlines","have_wrapping","lengths","wrap","simple_split_command_line","lines","split_equal","escape_regex","unescape_brackets","col","column","prev","is_splitted","left_over","diff","after","$line","is_ending","is_next_broken","lastIndexOf","sum","mobile_focus","$clip","fix_cursor","getComputedStyle","_class","className","position_only","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","get_char_width","$prompt","get_num_chars","floor","process_cmd_line","skip_empty","strip","nextUntil","prompt_marker","get_prompt_marker","first_len","strlen","splitted","cmd_line_worker","_previous_value","_cols","split_command_line","formatting","skip_formatted_position","escape_formatting","format_options","unixFormattingEscapeBrackets","apply_formatters","normalize","stack","encoded","encode","charWidth","allowedAttributes","partition","is_multiline","start","is_emoji_formatting","is_formatting","draw_cursor_line","end_line","cursor_end_line","empty_cursor","before_str","c_before","cursor_len","lines_after","last_ins","lines_before","display","original_string","from_last","last_len","new_pos","line_index","current_len","msg","strings","redrawError","in_line","find_position","make_guess","opts","cmp","search_pos","guess","next_guess","codepoint_len","binary_search","chars","split_characters","prev_prompt_data","format_prompt","tmp_prompt","have_formatting","format_split","encoded_last_line","crlf","spans","hide","show","fire_change_command","include_prompt","option","stay","removed","silent","new_keymap","original","bare_command","doc","keypress_event","keydown_event","input_event","display_column","__set_prompt_margin","user_prompt","should_redraw","relative","refresh","display_position","command_len","new_formatted_pos","visible","resize","new_num_chars","invoke_key","shortcut","warn","ctrl","shift","alt","meta","Event","documentElement","keyCode","new_mask","skip_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold_pause","skip_insert","prev_key","is_backspace","is_single","is_delay_key","specials","clear_reverse_search_key","skip_keydown","fake","exception","keydown","clear_hold","is_terminal_selected","keypress","normalized","inArray","event","chr","skip_input","finalize_input_event","get_next_character","keycode","charCodeAt","was_down","count","$target","is_prompt","down","button","count_selfclosing_formatting","entities","&amp;","&lt;","&gt;","&Agrave;","&Aacute;","&Acirc;","&Atilde;","&Auml;","&Aring;","&AElig;","&Ccedil;","&Egrave;","&Eacute;","&Ecirc;","&Euml;","&Igrave;","&Iacute;","&Icirc;","&Iuml;","&ETH;","&Ntilde;","&Ograve;","&Oacute;","&Ocirc;","&Otilde;","&Ouml;","&Oslash;","&Ugrave;","&Uacute;","&Ucirc;","&Uuml;","&Yacute;","&THORN;","&szlig;","&agrave;","&aacute;","&acirc;","&atilde;","&auml;","&aring;","&aelig;","&ccedil;","&egrave;","&eacute;","&ecirc;","&euml;","&igrave;","&iacute;","&icirc;","&iuml;","&eth;","&ntilde;","&ograve;","&oacute;","&ocirc;","&otilde;","&ouml;","&oslash;","&ugrave;","&uacute;","&ucirc;","&uuml;","&yacute;","&thorn;","&yuml;","&nbsp;","&iexcl;","&cent;","&pound;","&curren;","&yen;","&brvbar;","&sect;","&uml;","&copy;","&ordf;","&laquo;","&not;","&shy;","&reg;","&macr;","&deg;","&plusmn;","&sup2;","&sup3;","&acute;","&micro;","&para;","&cedil;","&sup1;","&ordm;","&raquo;","&frac14;","&frac12;","&frac34;","&iquest;","&times;","&divide;","&forall;","&part;","&exist;","&empty;","&nabla;","&isin;","&notin;","&ni;","&prod;","&sum;","&minus;","&lowast;","&radic;","&prop;","&infin;","&ang;","&and;","&or;","&cap;","&cup;","&int;","&there4;","&sim;","&cong;","&asymp;","&ne;","&equiv;","&le;","&ge;","&sub;","&sup;","&nsub;","&sube;","&supe;","&oplus;","&otimes;","&perp;","&sdot;","&Alpha;","&Beta;","&Gamma;","&Delta;","&Epsilon;","&Zeta;","&Eta;","&Theta;","&Iota;","&Kappa;","&Lambda;","&Mu;","&Nu;","&Xi;","&Omicron;","&Pi;","&Rho;","&Sigma;","&Tau;","&Upsilon;","&Phi;","&Chi;","&Psi;","&Omega;","&alpha;","&beta;","&gamma;","&delta;","&epsilon;","&zeta;","&eta;","&theta;","&iota;","&kappa;","&lambda;","&mu;","&nu;","&xi;","&omicron;","&pi;","&rho;","&sigmaf;","&sigma;","&tau;","&upsilon;","&phi;","&chi;","&psi;","&omega;","&thetasym;","&upsih;","&piv;","&OElig;","&oelig;","&Scaron;","&scaron;","&Yuml;","&fnof;","&circ;","&tilde;","&ensp;","&emsp;","&thinsp;","&zwnj;","&zwj;","&lrm;","&rlm;","&ndash;","&mdash;","&lsquo;","&rsquo;","&sbquo;","&ldquo;","&rdquo;","&bdquo;","&dagger;","&Dagger;","&bull;","&hellip;","&permil;","&prime;","&Prime;","&lsaquo;","&rsaquo;","&oline;","&euro;","&trade;","&larr;","&uarr;","&rarr;","&darr;","&harr;","&crarr;","&lceil;","&rceil;","&lfloor;","&rfloor;","&loz;","&spades;","&clubs;","&hearts;","&diams;","render_entities","_","hex","code","entity","safe","char_len","make_re_fn","starts_with","make_next_char_fun","tests","m1","m2","match_entity","match_combo","match_emoji","astral_match","normalize_position","style_to_string","styles","escape_html_attr","char_width_object","char_width_prop","extra_css","bare","wide_characters","specs","spec","make_string","compare_fn","more_args","mid","startContainer","parentNode","term","sel","rangeCount","appendChild","cloneContents","innerHTML","with_selection","ranges","addRange","process_selected_line","$self","hasClass","process_div","process_selected_html","stdout","$html","$cmd_lines","support_copy","queryCommandSupported","$textarea","had_focus","writeText","execCommand","$text","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","onTerminalChange","setBaseAndExtent","setStart","childNodes","process_command","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","is_extended_command","each_extended_command","parts","tracking_replace","rex","replacement","new_string","rep_string","new_position","last_index","c0","rep_len","iterate_formatting","is_space","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","closing_formatting","in_text","next_iteration","char","is_next_space","prev_space","is_last","space_count","re_ent","braket","start_index","end_index","start_formatting","end_formatting","prev_index","semicolons","amp","keep_words","prev_format","first_index","line_length","last_bracket","leading_spaces","can_break","stripped","text_len","after_index","new_index","closed_formatting","matched","sp","nested_formatting","class_i","attrs_i","unique","update_style","new_style","old_style","parse_style","stringify_formatting","stringify_attrs","stringify_class","stringify_styles","ignore","attrs","stringify_style","klass","get_inherit_style","update_attrs","new_attrs","parse_formatting","classes","__inherit__","test_lengths","formatter","__no_warn__","should_format","have_any","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","after_len","position_partial","partial","columns","no_formatting","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","text_part","escaped","extended_command","invokeMethods","change_hash","eval","iterator","Symbol","replacer","search","process_formatting","new_formatter","clean_data","is_path","url","with_url_validation","anyLinks","linksNoReferrer","linksNoFollow","escape","valid_href","valid_src","filter_attr_names","names","allowed","filters","attrs_to_string","rel_attr","rel","unshift","default_rel","pre_process_link","valid_attrs","includes","pre_process_image","background","data_text","text_decoration","--color","--original-color","background-color","--background","extra","style_str","output_attrs","Terminal_Exception","hidden","warnings","ids","jrpc","method","params","success","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","contentType","dataType","async","rpc","res","terminal_ready","format_stack_trace","trace","get_char_size","visiblity","temp","char_size","get_num_rows","fill","all","same","same_case","is_object","is_deferred","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","exceptionHandler","pauseEvents","softPause","mousewheel","touchscroll","cancelableAjax","processArguments","execAnimation","execAnimationDelay","externalPause","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","unixFormatting","escapeBrackets","ansiParser","ansiArt","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","doubleTabEchoCommand","completion","onInit","onBlur","onFocus","onExit","onPush","onPop","renderHandler","onAfterRedraw","onEchoCommand","onFlush","onBeforeCommand","onAfterCommand","onBeforeEcho","onAfterEcho","onBeforeLogin","onAfterLogout","onBeforeLogout","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveLoop","notAString","invalidStrings","invalidMask","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","preprocess_value","Animation","is_node","prepare_render","replaceWith","echo","get_node","Element","display_object","print_line","url_spec","pause","file","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","found","make_interpreter","user_intrp","rpc_count","fn_interpreter","recur","interpreters","new_obj","make_json_rpc_login","user","passwd","links","linkify","should_wrap","line_cache","process_extended_commands","line_settings","clear_exec","prev_exec_cmd","process_line","stringify_value","buffer","raw_string","words","keepWords","scroll","command_line","detached_output","detach","rows","fire_event","limit_lines","$lines","for_remove","parents","show_greetings","greetings","signature","mask_command","echo_command","get_command","have_scrollbar","restore_state","command_idx","import_view","export_view","make_label_error","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","before_async_exec","saved_change_hash","after_exec","is_animation_promise","invoke","force_awake","paused","ghost","level","logout","in_login","get_token","set_token","global_logout","clear_loging_storage","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","context_callback_proxy","terminal_init_keymap","fun","init_queue","onStart","skip_local","scroll_to_view","scroll_to","it","make_cursor_visible","replace_hash","state","replaceState","new_hash","href","hashchange","decodeURIComponent","echo_delay","onPause","was_paused","user_key_down","get_position","set_command","CTRL+L","orignal","caseSensitive","before_cursor","complete","word","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","tab_count","r","readyState","abort","key_press","typed","finish_typing_fn","typing_animation","formattted","get_prompt","char_i","new_prompt","set_prompt","is_bottom","skip_stop","chrRest","delay","typed_prompt","typed_insert","helper","typed_message","typing","typed_enter","with_typing","kind","else_fn","finalize_fn","with_typing_fn","d","when_ready","ready","locals","p","validate_login","token_or_password","authentication","auth_callback","infinite","clear_token","popUserPass","login_callback","set_mask","pass","err","queue","selector","body_terminal","public_api","terminal_id","scrollTop","user_export","view","ignore_hash","exec_settings","cmd_ready","delayed_commands","autologin","logins","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","numChars","numRows","num_rows","geometry","scroller","padding","old_width","old_height","density","history_state","run","setImmediate","clear_history_state","x","animate","freeze","frozen","enter","get_mask","get_output","new_num_rows","changed","--char-width","--pixel-density","appending_to_partial","children","last_row","--prompt-offset","last_row_rect","cmd_cursor","self_offset","--terminal-height","--terminal-x","--terminal-y","--terminal-scroll","e1","e2","remove_line","arg_defined","cont","echo_promise","ansi","should_pause","has_elements","last_newline","is_animation","finish","animations","valid_animation","lineNumber","amount","round","local","max_size","local_name","intrp","read","onReady","infiniteLogin","push_settings","object_or_name","font_resizer","pixel_resizer","blur_terminal","focus_terminal","visibility_observer","scroll_marker","is_bottom_observer","mutation_observer","disconnect","$body","removeAttr","defunct","elem","scrollHeight","is_bottom_detected","scroll_height","scroll_top","offsetHeight","copy","get_output_buffer","clear_buffer","command_queue","old_enabled","ignoreSystemDescribe","get_pixel_size","need_char_size_recalculate","base_interpreter","rect","parseObject","proxy","is_type","echo_image","image","data_uri","blob","URL","webkitURL","createObjectURL","ignoreEvents","Blob","clipboardData","items","getAsFile","getAsString","getData","onResize","elementFromPoint","clientY","$win","addEventListener","move","SENSITIVITY","HOLD_TIME","touch_event","point","y","diff_x","diff_y","was_ctx_event","click","ignore_elements","mousedown","mouseup","timeout","dblclick","is_context_event","buttons","event_name","cmd_offset","cmd_rect","top_limit","pageY","pageX","content_width","diff_h","diff_w","ceil","calculate_char_size","new_pixel_density","create_resizers","bottom_detect","intersections","intersectionRatio","create_bottom_detect","marker","rootMargin","threshold","observe_visibility","was_enabled","visibility_checker","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":"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"}